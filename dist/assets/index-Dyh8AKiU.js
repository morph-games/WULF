var dt=Object.defineProperty;var ut=(i,t,e)=>t in i?dt(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var x=(i,t,e)=>ut(i,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const r of n)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function e(n){const r={};return n.integrity&&(r.integrity=n.integrity),n.referrerPolicy&&(r.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?r.credentials="include":n.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(n){if(n.ep)return;n.ep=!0;const r=e(n);fetch(n.href,r)}})();const M=320,G=200,_={up:[0,-1],down:[0,1],left:[-1,0],right:[1,0],here:[0,0]},mt=20,pt=5,ft=["up","right","down","left"],gt=0,wt=10,yt={main:{url:"./images/wulf-spritesheet-11.png",size:16,atlas:[{names:["grass-0","grass-1","grass-2","grass-3","forest-0","forest-1","forest-2","forest-3","mountain-0","mountain-1","mountain-2","mountain-3","mountain-door","circle","village","town","city","","faded-place","place"]},{names:["water-0","void","","","","","","","water-1","","","","","","","","ladder-down","ladder-up","magic-ladder-down","magic-ladder-up"]},{names:["dirt","floor-0","floor-1","floor-2","floor-3","floor-4","floor-5","floor-6","","","","","","","","","pillar-0","torch-0","torch-1","torch-2"]},{names:["stone-wall-0","stone-wall-1","stone-door-open","stone-window","stone-sign-left","stone-sign-right","dark-stone-0","dark-stone-1","dark-stone-to-stone","stone-to-dark-stone","green-stone"]},{names:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T"]},{names:["U","V","W","X","Y","Z","rune-A","rune-B","rune-C","rune-D","rune-E","rune-F","rune-G","rune-H","rune-I","rune-J","rune-K","rune-L","rune-M","rune-N"]},{names:["rune-O","rune-P","rune-Q","rune-R","rune-S","rune-T","rune-U","rune-V","rune-W","rune-X","rune-Y","rune-Z","rune-TH","rune-EE","rune-NG","rune-EA","rune-ST","rune-space","",""]},{names:["horse","horseback","empty-sailboat","sailboat","empty-galleon","galleon","empty-carpet","flying-carpet","empty-broom","flying-broom","dead-skull","hit-splash","target-circle"]},{names:["spearman-0","spearman-1","spearman-2","spearman-3","beastman-0","","","","king-0","","","","man-0","","","","woman-0","","",""]},{names:["orc-0","orc-1","orc-2","orc-3","wildman-0"]},{names:["dwarf-0"]},{names:["elf-0"]}]},fonts:{url:"./images/letters-spritesheet-5.png",size:8,atlas:[{names:["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","th","ee","ng","ea","st"," ","0","1","2","3","4","5","6","7","8","9","10","-","=",";",",",".","'","/"]},{names:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","TH","EE","NG","EA","ST"," ","ankh","!","@","#","$","%","^","&","*","(",")","_","+",":","<",">",'"',"?"]},{names:["rune-A","rune-B","rune-C","rune-D","rune-E","rune-F","rune-G","rune-H","rune-I","rune-J","rune-K","rune-L","rune-M","rune-N","rune-O","rune-P","rune-Q","rune-R","rune-S","rune-T","rune-U","rune-V","rune-W","rune-X","rune-Y","rune-Z","Trune-H","Erune-E","Nrune-G","Erune-S","Srune-T","rune-space"]}]}},bt={entity:{sprite:"void",x:0,y:0,obstacleId:0},terrain:{type:"entity",isTerrain:!0},void:{type:"terrain",sprite:"void",obstacleId:0},dirt:{type:"terrain",sprite:"dirt",obstacleId:6},floor2:{type:"terrain",sprite:"floor-2",obstacleId:7},floor3:{type:"terrain",sprite:"floor-3",obstacleId:7},floor4:{type:"terrain",sprite:"floor-4",obstacleId:7},floor5:{type:"terrain",sprite:"floor-5",obstacleId:7},grass:{type:"terrain",sprite:"grass-0",obstacleId:5},water:{type:"terrain",sprite:"water",variations:2,obstacleId:2},forest:{type:"terrain",sprite:"forest-0",obstacleId:10},mountain:{type:"terrain",sprite:"mountain-0",obstacleId:11},wall:{type:"terrain",sprite:"stone-wall-0",obstacleId:1},darkWall:{type:"terrain",sprite:"dark-stone-0",obstacleId:1},door:{type:"terrain",sprite:"stone-door-open",obstacleId:0},window:{type:"terrain",sprite:"stone-window",obstacleId:1},floor:{type:"terrain",sprite:"floor-0",obstacleId:7},tileFloor:{type:"terrain",sprite:"floor-2",obstacleId:7},signLeft:{type:"terrain",sprite:"stone-sign-left",obstacleId:1},signRight:{type:"terrain",sprite:"stone-sign-right",obstacleId:1},destination:{type:"entity",investigate:{message:"You see {{name}}."},enter:{},sprite:"mountain-door",isDestination:!0},town:{type:"destination",sprite:"town"},city:{type:"destination",sprite:"city"},village:{type:"destination",sprite:"village"},dungeon:{type:"destination",sprite:"mountain-door"},prop:{type:"entity",isProp:!0},ladderDown:{type:"prop",sprite:"ladder-down",klimbable:{speed:1,direction:"down"}},ladderUp:{type:"prop",sprite:"ladder-up",klimbable:{speed:1,direction:"up"}},torch:{type:"prop",sprite:"torch-0"},pillar:{type:"prop",sprite:"pillar-0"},actor:{type:"entity",sprite:"horse",deadSprite:"dead-skull",isActor:!0,action:{queue:[],cooldown:1},move:{speed:1,transversal:[1,0,0,0,.5,1,1.1,1.2,.5,.9,.8,0,0,0,0]},health:{hp:99,hpMax:99,deathSprite:"void"},fighter:{},attacker:{range:1,natural:{damage:1,damageType:"ph"}},firer:{range:3},currencies:{coins:0,food:100},inventory:{contents:[],max:255},equipment:{},canEnter:!1,canExit:!1,obstacleId:13},avatar:{type:"actor",isAvatar:!0,sprite:"spearman-0",canEnter:!0,canExit:!0,klimber:{speed:1},health:{hp:99,hpMax:99,respawnOnDeath:!0},currencies:{coins:0,food:100},attacker:{range:1,natural:{damage:[5,10],damageType:"ph"}},inventory:{contents:[],max:255},xp:{totalXp:0},factions:{good:10,evil:0}},king:{type:"actor",sprite:"king-0"},wanderer:{type:"actor",sprite:"man-0",plan:{randomMove:.5}},man:{type:"wanderer"},woman:{type:"wanderer",sprite:"woman-0"},guard:{type:"wanderer",sprite:"spearman-2"},sentry:{type:"actor",sprite:"spearman-2"},elf:{type:"wanderer",sprite:"elf-0"},dwarf:{type:"wanderer",sprite:"dwarf-0"},monster:{type:"actor",factions:{good:-255,evil:255},plan:{randomMove:.5,aggroRange:10,hunt:!0},fighter:{},attacker:{range:1,natural:{damage:[1,4],damageType:"ph"}},firer:{range:0},health:{hp:12,hpMax:12,respawnOnDeath:!1}},beastman:{type:"monster",sprite:"beastman-0"},darkHorseman:{type:"monster",sprite:"horseback"},orc:{type:"monster",sprite:"orc-0"},wildman:{type:"monster",sprite:"wildman-0"},item:{type:"entity",isItem:!0,value:{valueMultiplier:0}},carpet:{type:"item",sprite:"empty-carpet"},broom:{type:"item",sprite:"empty-broom"},horse:{type:"item",sprite:"horse"},sailboat:{type:"item",sprite:"empty-sailboat"},galleon:{type:"item",sprite:"empty-galleon"},weapon:{type:"item",isWeapon:!0,equippable:{slots:["anyHand"]},attackable:{range:1,damage:1,type:"ph"}},armor:{type:"item",isArmor:!0}},Ct={name:"Lands of Lord Lunic",scale:"overworld",map:["~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~.......f~~~....~~~~~~~~~~~","~~~~.....B..f~~~....~~~~~~~~~~~","~~~~..ff.....g~..f..~~~~~","~~~...^f.....sfffff.~~~~~","~~~..^^^.......fffff.~~~~","~~~..^^^........3fff...","~~~..^D........fffff..","~~~.^^^^....h....ff..","~~~..^^^b.c.....O..ff..","~~~~..^...........f..","~~~...^......2......~~~~.1~~","~~~........f..~~~~..~~~~~.f~","~~~.f^...^^^f....~~~~","~~~.f^^.^^^^ff~~~~~~~","~~~~^^...f^^ffff~~~~~","~~~~^.~..f^^^fff~~~~~","~~~~~~~f.ff^fff^~~~~~","~~~...ff...ff.^^^.1~~","~~~.........^^^^^^^^..~~~~......","~~..~........ff.^^^^^^^ff......","~~~~~~........f...............","~~~~~~~.~~.......~..~","~~~~~~~~~~~~~.~~~~~~~~~","~~~~~~~~~~~..O~~~~~~~~~~","~~~~~~~~~~~~....~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~..........~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~..fff..............~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~...~...........................ffffff........~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~...~^^^...................fffffffffffff^^......~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~.....^^................................^^.B........~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~....^^^................................^^^..B............~~~~~~~~~~~~~~~~~~~~~","~~~~~~~....^^^^............^^ffff.............^^^^^.................~~~~~~~~~~~~~~~~","~~~~~~~~........W...................W.................................~~~~~~~~~~~~~~","~~~~~~~~~..................................................................~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"],legend:{1:["grass","village"],2:["grass","town"],3:["grass",{type:"city",enter:{mapKey:"castle1"}}],D:["grass",{type:"dungeon",enter:{mapKey:"dungeon1"}}],K:["grass",{type:"king"}],G:["grass","guard"],W:["grass","wildman"],c:["grass","carpet"],h:["grass","horse"],s:["water","sailboat"],g:["water","galleon"],b:["grass","broom"]},spawn:{types:["beastman"],max:10,cooldownMulitplier:1},overflow:"water",exits:{edges:"LOOP"}},vt={name:"Castle Albarix",map:[".....................",".###################.",".#~~~-----------~~~#.",".#~~~-|--###--|-~~~#.",".#~~-----(K)-----~~#.",".#~---|-------|---~#.",".#-----------------#.",".#-S----*---*----S-#.",".#########-#########.",".%F.....F---F.....F%.",".%F......---......F%.",".###U####---####U###.",".#------#---#--W---#.",".#------#---#------#.",".#---M--#---####U###.",".%------U----------%.",".#------#----------#.",".####U###---######U#.",".#------#---#----#-#.",".#------#---#----#-#.",".#-D----#---#-E--U-#.",".#----D-#---######-#.",".########---#----#-#.",".#------U---#----U-#.",".#------#---#----#-#.",".#-####-#---######U#.",".#-G----#---#-E----#.",".#------#---#------#.",".####U###---######U#.",".#------#---#--G---#.",".#-->---#---#------#.",".######%#UUU#%######.","..ff..:::::::::..ff..","......:.~~~~~.:......","....*.:.~~~~~.:.*....",".####.:.~~~~~.:.####.",".#--S::.......::S--#.",".##%#.:::---:::.#%##.","....................."],legend:{U:["door"],"%":["window"],F:["forest"],S:["floor","sentry"],G:["floor","guard"],K:["floor","king"],M:["floor","man"],W:["floor","woman"],"(":["signLeft"],")":["signRight"],">":["floor","ladderDown"],E:["floor","elf"],D:["floor","dwarf"]},overflow:"grass",entrance:["center","bottom"],exits:{edges:["overworld",16,6],down:["castle1B",-1,-1]}},Et={name:"Castle Albarix Cellar",map:["###################","#~~#-----------#~~#","#~~#--|-###-|--#~~#","#~~#-----------#~~#","####-----------####","#-----|-----|-----#","#-----------------#","#########U#########","#:::::::---:::::::#","#:::::::---:::::::#","###U####---########","#------#---U------#","#------#---#------#","#--G---#---########","#------U---#------#","#---*--#---U------#","########---########","#::::::#---|------#","#::::::U---------*#","#::::::#---|------#","#::::::#---########","########---#----*-#","#*-----U---U--G---#","#------#---#------#","#-|-G|-#######U####","#----------|-----*#","#-----------------#","#-#--#-##########U#","#------#------G---#","#--<---#---*------#","###################"],legend:{U:["door"],G:["floor","guard"],"<":["floor","ladderUp"]},entrance:["center","bottom"],exits:{edges:"BLOCK",up:["castle1",1,1]}},Tt={name:"Dungeon",map:["#####################","#####################","##~~~-----------~~~##","##~~~-|--###--|-~~~##","#########.-##########","#:.....:-.--:::...:.#","#:......--:-......::#","###U####-.--####U####","#------#-.--#--W---##","#------#.---#------##","#---W--#-.--####U####","#------U--.--------%#","#-----...:.:::..---.#","####U###-.--######U.#","#------#.---#----#-.#","#------#.---#----#-.#","#-B----#.---#-B--U-.#","#----O-#.---######-.#","########--.-#----#..#","#------U--.-#----U..#","#------#--.-#----#..#","#-####-#--.-######U##","##-O----#--.#-B::::##","##------#--.#------##","#####U###---######U##","##------#---#--B---##","##------#---#------##","#######%#UUU#%#######","#~.W..:::::::::.....#","#~~~..:.~~.~~.:.....#","#..~*.:.~~.~~.:.*...#","##-~.::.......::---##","###:#.:::---:::.#W###","##########.##########"],legend:{".":["floor3"],"-":["floor5"],U:["door"],"%":["window"],F:["forest"],S:["floor","sentry"],G:["floor","guard"],K:["floor","king"],M:["floor","man"],W:["floor","wildman"],"(":["signLeft"],")":["signRight"],">":["floor","ladderDown"],E:["floor","elf"],D:["floor","dwarf"],"#":["darkWall"]},overflow:"void",entrance:["center","bottom"],exits:{edges:["overworld",16,6]}},w=8,St=M/w,z=G/w,At=M/w,I=Math.floor(At/2),Dt={settings:{bumpCombat:1,autoEnter:0},spritesheets:yt,screen:{containerSelector:"#screen",mainCanvasId:"main-canvas",height:G,width:M,colors:{blue:"#2bcfd6",green:"#53d638",violet:"#962ba5",orange:"#d95e1c",white:"#f1f1f1",black:"#000000"}},mapDisplay:{w:20,h:10,offsetX:0,offsetY:1},mainConsole:{horizontal:"left",vertical:"bottom",rows:4,columns:St-10,cursor:">",fontSize:w,offsetX:0,offsetY:-2},quickStatConsole:{horizontal:"right",vertical:"bottom",rows:4,columns:9,fontSize:w,offsetX:-2,offsetY:-2},commandConsoles:[{horizontal:1,vertical:1,rows:z-2,columns:I-1,fontSize:w},{horizontal:I+1,vertical:1,rows:z-2,columns:I-2,fontSize:w}],world:{obstacleTypes:["none","impassable physical obstacle","deep ocean","shallow water","swamp","plains","path","road","desert","hills","forest","low mountains","high mountains","short physical obstacle","lava","magical barrier",""],entityTypes:bt,maps:{overworld:Ct,castle1:vt,castle1B:Et,dungeon1:Tt},globalLegend:{".":["grass"],":":["dirt"],"~":["water"],"^":["mountain"],f:["forest"],"-":["floor"],"*":["floor","torch"],"|":["floor","pillar"],"#":["wall"],B:["grass","beastman"],O:["grass","orc"]},timing:{actionCooldown:20,actionCooldownRandom:4,actionWarmup:5,actionWarmupRandom:0,overworldEating:100,townEating:1e4,regen:120,spawnCooldown:80,spawnCooldownRandom:50}},stats:{min:0,max:99,list:[{name:"Strength"}]},start:{mapKey:"overworld",coordinates:[10,10]},states:{direction:{kb:{ArrowUp:"up",ArrowDown:"down",ArrowLeft:"left",ArrowRight:"right",w:"up",s:"down",a:"left",d:"right",q:"abort",Escape:"abort",Enter:"abort"," ":"abort"}},stats:{kb:{q:"close",Escape:"close",Enter:"next"," ":"next"}},ready:{kb:{w:"ready weapon",a:"ready armor",s:"ready spell",q:"abort",Escape:"abort",Enter:"abort"," ":"abort"}},cast:{kb:{ArrowUp:"up",ArrowDown:"down",w:"up",s:"down",q:"abort",Escape:"abort",Enter:"abort"," ":"abort"}},item:{kb:{ArrowUp:"up",ArrowDown:"down",w:"up",s:"down",q:"abort",Escape:"abort",Enter:"abort"," ":"abort"}},commands:{kb:{ArrowUp:"previous",ArrowDown:"next",ArrowLeft:"previous",ArrowRight:"next",w:"previous",a:"previous",s:"next",d:"next",Escape:"abort",Enter:"execute"," ":"execute","?":"abort",F1:"abort"}},navigate:{},travel:{hideCommands:["/","0","1","=","G","Q","Enter"],kb:{" ":"pass",Tab:"toggle party",Enter:"chat","/":"command",0:"party return",1:"party 1",a:"go left",b:"board",c:"cast",d:"go right",e:"engage",f:"fight direction",g:"get nearby",h:"hole up",i:"investigate",j:"junk item",k:"klimb",l:"look direction",m:"map",n:"navigate",o:"open direction",p:"pickpocket",q:"quicksave",r:"ready item",s:"go down",t:"talk",u:"use item",v:"view toggle",w:"go up",x:"eXit",y:"yell",z:"ztats",ArrowUp:"go up",ArrowDown:"go down",ArrowLeft:"go left",ArrowRight:"go right","+":"volume up","=":"volume up","-":"volume down","?":"see commands",F1:"see commands"}}},actions:{board:{cooldown:1},camp:{cooldown:2},cast:{cooldown:1},engage:{cooldown:0},enter:{cooldown:1},dismount:{cooldown:.6},fight:{cooldown:1},fire:{cooldown:1},get:{cooldown:.6},heal:{cooldown:2},hyperjump:{cooldown:.1},ignite:{cooldown:.6},investigate:{cooldown:2},junk:{cooldown:.8},jump:{cooldown:.1},jimmy:{cooldown:2},klimb:{cooldown:1,warmup:.9},launch:{cooldown:.1},locate:{cooldown:.1},mix:{cooldown:3},move:{cooldown:1},navigate:{cooldown:3},negate:{cooldown:.9},open:{cooldown:.5},offer:{cooldown:1},pass:{cooldown:1},pickpocket:{cooldown:.5,warmup:2},peer:{cooldown:1},plan:{cooldown:1},push:{cooldown:1},ready:{cooldown:.9},summon:{cooldown:1},talk:{cooldown:1},transact:{cooldown:2},unlock:{cooldown:2},warmup:{cooldown:.6},yell:{cooldown:.1}}};class kt{constructor(t,e=320,s=200){var n;this.elementId=t,this.canvas=document.getElementById(t),this.ctx=(n=this.canvas)==null?void 0:n.getContext("2d"),this.width=Number(e)||320,this.height=Number(s)||200}setup(){this.canvas=document.getElementById(this.elementId),this.ctx=this.canvas.getContext("2d")}removePixelTransparency(t=200){const{ctx:e}=this;e.imageSmoothingEnabled=!1;const s=e.getImageData(0,0,this.width,this.height);for(let n=0;n<s.data.length;n+=4){const r=s.data[n+3];s.data[n+3]=r>t?255:0}e.putImageData(s,0,0)}drawLine(t,e,s,n,r="#ffffff"){const{ctx:o}=this;o.beginPath(),o.strokeStyle=r,o.lineWidth=1,o.moveTo(t+.5,e+.5),o.lineTo(s+.5,n+.5),o.stroke()}}class g extends Image{constructor(t){if(super(),!t)throw new Error("GameImage missing src param");this.src=t,this.data=null,this.isLoaded=!1}async load(){const t=new Promise((e,s)=>{try{const n=()=>e(this);super.onload=n,super.onerror=r=>{console.error(this.src,r),s(new Error(`GameImage failed to load ${this.src}`))},this.complete&&n()}catch(n){s(n)}});try{await t,this.isLoaded=!0,this.setup()}catch(e){throw this.isLoaded=!1,e}return this}setup(){this.data=this.getImageData()}async clone(){const t=new g(this.src);return await t.load(),t}cloneSync(){const t=new g(this.src);return t.load(),t}static getCanvasContext(t,e,s){const n=document.createElement("canvas");n.width=t,n.height=e;const r=n.getContext("2d");return s&&r.drawImage(s,0,0),[n,r]}getCanvasContext(t={}){const{draw:e=!0}=t;return g.getCanvasContext(this.naturalWidth||this.width,this.naturalHeight||this.height,e?this:null)}getImageData(t){return(t||this.getCanvasContext({draw:!0})[1]).getImageData(0,0,this.width,this.height)}getImageDataUri(){const[t]=this.getCanvasContext({draw:!0});return t.toDataURL("image/png")}setSourceByCanvas(t){this.src=t.toDataURL("image/png")}replaceColors(t=[],e=[]){const[s,n]=this.getCanvasContext({draw:!0}),r=this.getImageData(n);for(let o=0;o<r.data.length;o+=4)t.forEach((a,c)=>{const[l,h,d]=a,[u,m,S]=e[c];r.data[o]===l&&r.data[o+1]===h&&r.data[o+2]===d&&(r.data[o]=u,r.data[o+1]=m,r.data[o+2]=S)});n.putImageData(r,0,0),this.setSourceByCanvas(s)}replaceColor(t=[],e=[]){const[s,n]=this.getCanvasContext({draw:!0}),[r,o,a]=t,[c,l,h]=e;let d=0;const u=this.getImageData(n);for(let m=0;m<u.data.length;m+=4)u.data[m]===r&&u.data[m+1]===o&&u.data[m+2]===a&&(u.data[m]=c,u.data[m+1]=l,u.data[m+2]=h,d+=1);return n.putImageData(u,0,0),this.setSourceByCanvas(s),d}}const C=[[255,255,255],[0,0,0]],Mt=[[238,238,204],[17,17,51]],xt=0;class T extends g{constructor(t,e={},s=16){const n=typeof t=="object",r=n?(t==null?void 0:t.src)||(t==null?void 0:t.url):t;super(r);const o=(n?t==null?void 0:t.atlas:e)||[];this.atlas=[...o];const a=(n?t==null?void 0:t.size:s)||16;this.spriteSize=a,this.sprites={}}async load(){try{await super.load()}catch(t){throw console.error(t),t}}getCoordinates(t){let e=-1,s=-1;if(this.atlas.forEach((n,r)=>{if(!n.names)return;const o=n.names.findIndex(a=>t===a);o!==-1&&(s=o,e=r)}),s===-1||e===-1)throw new Error(`Sprite ${t} not found in atlas`);return[s*this.spriteSize,e*this.spriteSize]}drawImageToContext(t,e,s,n){const[r,o]=this.getCoordinates(t);e.drawImage(this,r,o,this.spriteSize,this.spriteSize,s,n,this.spriteSize,this.spriteSize)}getSubImage(t,e,s=this.spriteSize,n=this.spriteSize,r=void 0,o=void 0){if(!r||!o){const c=g.getCanvasContext(s,n);r=c[0],o=c[1]}o.drawImage(this.sheet,t,e,s,n,0,0,s,n);const a=r.toDataURL("image/png");return new g(a)}parse(){const[t,e]=g.getCanvasContext(this.spriteSize,this.spriteSize);let s=0;Object.entries(this.atlas).forEach(([n,r])=>{let o=0;r.forEach(a=>{const{y:c,names:l}=a;let h=xt;l.forEach(d=>{const u=this.getSubImage(h,c,this.spriteSize,this.spriteSize,t,e);[`sprite-${s}`,`${n}-${o}`,d].forEach(m=>{this.sprites[m]=u}),h+=this.spriteSize,s+=1,o+=1})})})}static makeColorId(t,e=C){const[s=[255,255,255],n=[0,0,0]]=e;return`${t}_${s.join(",")}_${n.join(",")}`}async loadColoredSprite(t,e=C){const s=this.makeColoredSprite(t,e);return await s.load(),s}async loadColorSpriteDataUri(t,e=C){const s=await this.loadColoredSprite(t,e);return s?s.getImageDataUri():""}makeColoredSprite(t,e=C){const[s=[255,255,255],n=[0,0,0]]=e,r=this.get(t);if(!r)throw new Error(`Unknown sprite ${t}`);const o=r.cloneSync();o.replaceColors(Mt,[s,n]);const a=T.makeColorId(t,e);return this.sprites[a]=o,o}makeColoredSpriteDataUri(t,e=C){return this.makeColoredSprite(t,e).getImageDataUri()}get(t,e){if(!e)return this.sprites[t];const s=T.makeColorId(t,e),n=this.sprites[s];return n||this.makeColoredSprite(t,e)}getDataUri(t,e){const s=this.get(t,e);return s?s.getImageDataUri():""}}class F{constructor(t,e={}){if(this.fss=t,this.cursorRow=0,this.cursorCol=0,this.offsetX=e.offsetX||0,this.offsetY=e.offsetY||0,!t)throw new Error("Missing fonts spritesheet")}static splitText(t,e){if(t.length<=e)return[t];const s=t.split(" "),n=[];let r="";return s.forEach(o=>{o.length>e&&console.warn("Word exceeds max length",o,e);const a=r?`${r} ${o}`:o;a.length>e?(n.push(r),r=o):r=a}),n.push(r),n}async setup(){await this.fss.load()}setCursor(t,e){typeof t=="number"&&(this.cursorCol=t),typeof e=="number"&&(this.cursorRow=e)}drawLetter(t,e){try{this.fss.drawImageToContext(e,t,this.cursorCol*this.fss.spriteSize+this.offsetX,this.cursorRow*this.fss.spriteSize+this.offsetY)}catch(s){console.warn("Error drawing letter",e,s)}this.cursorCol+=1}drawTextRows(t,e=[],s=void 0,n=void 0){this.setCursor(s,n);const r=this.cursorCol;e.forEach(o=>{o.split("").forEach(a=>{this.drawLetter(t,a)}),this.cursorRow+=1,this.cursorCol=r})}drawText(t,e="",s=void 0,n=void 0){if(this.setCursor(s,n),e instanceof Array){this.drawTextRows(t,e,s,n);return}e.split("").forEach(r=>{this.drawLetter(t,r)})}lineBreak(){this.cursorCol=0,this.cursorRow+=1}drawLine(t,e="",s=void 0,n=void 0){this.drawText(t,e,s,n),this.lineBreak()}}class L{constructor(t={},e=null){this.fontsSpritesheet=e,this.horizontal=t.horizontal||"left",this.vertical=t.vertical||"top",this.fontSize=t.fontSize||8,this.columns=t.columns||"max",this.rows=t.rows||4,this.offsetX=t.offsetX||0,this.offsetY=t.offsetY||0,this.inputLine=typeof t.inputLine>"u"?!0:!!t.inputLine,this.textRows=this.rows-(this.inputLine?1:0),this.cursor=t.cursor||"",this.gameCanvas=t.gameCanvas;const{offsetX:s,offsetY:n}=this;this.textCtrl=new F(e,{offsetX:s,offsetY:n}),this.log=[]}async setup(t){this.gameCanvas=t,await this.textCtrl.setup(),typeof this.columns!="number"&&(this.columns=Math.floor(this.gameCanvas.width/this.fontSize))}getColumnStart(){const t=M/this.fontSize;return this.horizontal==="right"?t-this.columns:this.horizontal==="left"?0:this.horizontal==="center"?Math.floor(t/2):Number(this.horizontal||0)}getRowBase(){var t;return this.vertical==="bottom"?Math.floor((((t=this.gameCanvas)==null?void 0:t.height)||0)/this.fontSize)-this.rows:this.vertical==="top"?0:Number(this.vertical||0)}getPrintableLines(){const t=this.cursor.length,e=" ".repeat(t),s=[];this.log.slice(-this.textRows).forEach(c=>{F.splitText(c,this.columns-t).forEach((l,h)=>{s.push(`${h===0?this.cursor:e}${l}`)})});const n=s.slice(-this.textRows),o=n.length<this.textRows?this.textRows-n.length:0;return[..." ".repeat(o).split("").map(()=>".".repeat(this.columns)),...n]}printLine(t,e=0){const s=this.getRowBase()+e,{ctx:n}=this.gameCanvas,r=t.length<this.columns?this.columns-t.length:0,o=this.getColumnStart();this.textCtrl.drawLine(n,t+" ".repeat(r),o,s)}printLines(t){(t||this.getPrintableLines()).forEach((s,n)=>this.printLine(s,n))}printCursor(){const t=this.getRowBase()+this.rows-1,{ctx:e}=this.gameCanvas;this.textCtrl.drawLine(e,this.cursor,0,t)}print(t){this.log.push(t),this.printLines(),this.printCursor()}}class b{constructor(t={}){var n,r,o,a,c,l,h,d,u,m,S,$,q,Y,j;this.colors=((n=t.screen)==null?void 0:n.colors)||{white:"#ffffff",black:"#000000"},this.screenWidth=((r=t.screen)==null?void 0:r.width)||320,this.screenHeight=((o=t.screen)==null?void 0:o.height)||200,this.mapDisplayWidth=((a=t==null?void 0:t.mapDisplay)==null?void 0:a.w)||20,this.mapDisplayHeight=((c=t==null?void 0:t.mapDisplay)==null?void 0:c.h)||10,this.mapDisplayOffsetX=((l=t==null?void 0:t.mapDisplay)==null?void 0:l.offsetX)||0,this.mapDisplayOffsetY=((h=t==null?void 0:t.mapDisplay)==null?void 0:h.offsetY)||0;const e=(((u=(d=t.spritesheets)==null?void 0:d.main)==null?void 0:u.size)||16)*this.mapDisplayHeight+this.mapDisplayOffsetY,s=(((m=t.mainConsole)==null?void 0:m.columns)||10)*(((S=t.mainConsole)==null?void 0:S.fontSize)||8)+1;this.borderLines=[[0,e,this.screenWidth,e,this.colors.blue],[s,e,s,this.screenHeight,this.colors.blue]],this.screenSelector=(($=t.screen)==null?void 0:$.containerSelector)||"#wulf-screen",this.mainCanvasId=((q=t.screen)==null?void 0:q.mainCanvasId)||"wulf-main-canvas",this.gameCanvas=new kt(this.mainCanvasId,[this.screenWidth,this.screenHeight]),this.ss=new T((Y=t==null?void 0:t.spritesheets)==null?void 0:Y.main),this.fontsSpritesheet=new T((j=t==null?void 0:t.spritesheets)==null?void 0:j.fonts),this.mainConsole=new L(t==null?void 0:t.mainConsole,this.fontsSpritesheet),this.quickStatConsole=new L(t==null?void 0:t.quickStatConsole,this.fontsSpritesheet),this.commandConsoles=t.commandConsoles.map(ht=>new L(ht,this.fontsSpritesheet))}static getPrintableNumber(t,e=4){if(typeof t!="number")return"?".repeat(e);let s=String(t);return s.length>e&&(s=`${String(Math.floor(t/1e3))}k`),s.padStart(e," ")}adjustScreenSize(){const t=window.innerWidth,e=window.innerHeight,s=Math.floor(Math.min(t/this.screenWidth,e/this.screenHeight)),n=this.screenWidth*s,r=this.screenHeight*s,o=document.querySelector(this.screenSelector);o.style.width=`${n}px`,o.style.height=`${r}px`}drawSprite(t,e,s){t&&this.ss.drawImageToContext(t,this.gameCanvas.ctx,e*this.ss.spriteSize+this.mapDisplayOffsetX,s*this.ss.spriteSize+this.mapDisplayOffsetY)}drawSprites2d(t){t.forEach((e,s)=>{e.forEach((n,r)=>{this.drawSprite(n,r,s)})})}drawSpritesArray(t=[]){t.forEach(e=>{const[s,n,r]=e;this.drawSprite(s,n,r)})}drawTerrain(t){this.drawSprites2d(t.terrain.sprites,"terrain")}drawVisibleThings(t=[]){t.forEach(e=>{const[s,n,r]=e;this.drawSprite(s,n,r)})}drawParty(t){const{visibleWorldX:e,visibleWorldY:s,sprite:n}=t.avatar;this.drawSprite(n,e,s)}drawMap(t,e){this.drawTerrain(t),this.drawVisibleThings(t.items),this.drawVisibleThings(t.props),this.drawVisibleThings(t.actors),this.drawParty(e),this.borderLines.forEach(s=>{this.gameCanvas.drawLine(...s)})}drawAll(t,e){var s,n,r,o,a,c,l,h;this.drawMap(t,e),this.quickStatConsole.printLines([`H.P.:${b.getPrintableNumber((n=(s=e==null?void 0:e.avatar)==null?void 0:s.health)==null?void 0:n.hp,4)}`,`Coin:${b.getPrintableNumber((o=(r=e==null?void 0:e.avatar)==null?void 0:r.currencies)==null?void 0:o.coins,4)}`,`Food:${b.getPrintableNumber((c=(a=e==null?void 0:e.avatar)==null?void 0:a.currencies)==null?void 0:c.food,4)}`,`X.P.:${b.getPrintableNumber((h=(l=e==null?void 0:e.avatar)==null?void 0:l.xp)==null?void 0:h.totalXp,4)}`])}drawCommandColumns(t=[]){const e=this.commandConsoles.length,s=Math.ceil(t.length/e),n=t.slice(0,s),r=t.slice(s);this.commandConsoles[0].printLines(n),this.commandConsoles[1].printLines(r)}async setup(){await this.gameCanvas.setup(),this.adjustScreenSize(),await this.mainConsole.setup(this.gameCanvas),await this.quickStatConsole.setup(this.gameCanvas);const t=this.commandConsoles.map(e=>e.setup(this.gameCanvas));await Promise.allSettled(t),window.addEventListener("resize",()=>this.adjustScreenSize())}}class It{constructor(t){this.gameName=t||"MyGame"}getObject(t){const e=localStorage.getItem(`${this.gameName}_${t}`);return typeof e!="string"?null:JSON.parse(e)}setObject(t,e=null){localStorage.setItem(`${this.gameName}_${t}`,JSON.stringify(e))}loadSavesList(){return this.getObject("Saves")||[]}saveSave(t,e,s){this.setObject(`Save${t}`,s);const n=this.loadSavesList();n[t]={saveName:e},this.setObject("Saves",n)}}class Q{constructor(){this.eventListeners={}}on(t,e){let s=this.eventListeners[t];s||(this.eventListeners[t]=new Set,s=this.eventListeners[t]),s.add(e)}off(t,e){if(typeof t>"u"){this.eventListeners={};return}const s=this.eventListeners[t];if(s){if(typeof e>"u"){s.clear();return}s.delete(e)}}trigger(t,e){const s=this.eventListeners[t];s&&s.forEach(n=>n(e))}}const J="command",Z="missingCommand",tt="mount",et="unmount",A="mapping",Lt=[J,Z,tt,et,A],P="keydown",X="keyup";class Wt extends Q{constructor(t={},e={}){super();const{autoMount:s=!0,triggerOnRepeat:n=!1,document:r=window.document}=e;if(this.id=Math.round(Math.random()*99999),this.triggerOnRepeat=!!n,this.mapping={},this.setMapping(t),this.document=r,!this.document.addEventListener)throw new Error("document with addEventListener is required");this.keysDown={},this.commandsDown={},this.keyDownListener=o=>this.handleKeyDown(o),this.keyUpListener=o=>this.handleKeyUp(o),this.setupEventListeners(e),this.nodeNamesDontTrigger=["TEXTAREA","INPUT"],this.nodeNamesAllowDefault=["TEXTAREA","INPUT"],s&&this.mount()}setMapping(t={}){if(typeof t!="object")throw new Error("Invalid type for mapping param");return this.mapping={...t},this.trigger(A),this.mapping}mapKey(t,e){return this.mapping[t]=e,this.trigger(A),!0}mapUnmappedKey(t,e){return this.mapping[t]?!1:this.mapKey(t,e)}unmapKey(t){return this.mapping[t]?!1:(delete this.mapping[t],this.trigger(A),!0)}mount(){this.document.addEventListener(P,this.keyDownListener),this.document.addEventListener(X,this.keyUpListener),this.trigger(tt)}unmount(){this.document.removeEventListener(P,this.keyDownListener),this.document.removeEventListener(X,this.keyUpListener),this.trigger(et)}handleKeyDown(t){const{key:e,code:s,keyCode:n,altKey:r,ctrlKey:o,shiftKey:a,metaKey:c,repeat:l}=t,h={code:s,keyCode:n,altKey:r,ctrlKey:o,shiftKey:a,metaKey:c,repeat:l},{nodeName:d}=t.target;if(this.nodeNamesDontTrigger.includes(d))return;if(this.nodeNamesAllowDefault.includes(d)||t.preventDefault(),!l){const m=this.mapping[e];this.keysDown[e]=!0,m&&(this.commandsDown[m]=!0)}(!l||this.triggerOnRepeat)&&this.triggerKey(e,h)}handleKeyUp(t){const{key:e}=t,s=this.mapping[e];this.keysDown[e]=!1,s&&(this.commandsDown[s]=!1)}setupEventListeners(t={}){Lt.forEach(e=>{t[e]&&this.on(e,t[e])})}triggerCommand(t){this.trigger(J,t)}triggerMissingCommand(t){this.trigger(Z,t)}triggerKey(t){const e=this.mapping[t];e?this.triggerCommand(e):this.triggerMissingCommand(t)}getKeysMapped(){return Object.keys(this.mapping)}getCommands(){const t=new Set;return this.getKeysMapped().forEach(e=>t.add(this.mapping[e])),Array.from(t)}isKeyDown(t){return this.keysDown[t]}isCommandDown(t){return this.commandsDown[t]}getKeysDown(){return Object.keys(this.keysDown).filter(t=>this.keysDown[t])}getCommandsDown(){return Object.keys(this.commandsDown).filter(t=>this.commandsDown[t])}clearDown(){this.keysDown={},this.commandsDown={}}}class Rt{constructor(t){t||console.warn("No states param"),this.states=t||{},this.kbCommander=new Wt({},{triggerOnRepeat:!0})}setup(t="button"){document.querySelectorAll(t).forEach(e=>{e.dataset.key&&e.addEventListener("click",()=>{this.kbCommander.triggerKey(e.dataset.key)})})}on(t,e){this.kbCommander.on(t,e)}setState(t,e){var n;if(!this.states[t])throw new Error(`Unknown state ${t}`);const s=((n=this.states[t])==null?void 0:n.kb)||{};this.kbCommander.setMapping(s),this.kbCommander.off(),this.kbCommander.on("command",e),this.kbCommander.on("missingCommand",(...r)=>console.warn("Missing command",r))}}class E{constructor(t){this.allTypes={},this.allTypesArray=[],this.buildAllTypes(t)}static getExtendedType(t={},e={}){let s=t;return t.type&&(e[t.type]?s={...E.getExtendedType(e[t.type],e),...s}:console.error("Could not find type",t.type)),structuredClone(s)}getExtendedType(t={}){return E.getExtendedType(t,this.allTypes)}buildAllTypes(t){this.allTypes={},this.allTypesArray=[],Object.keys(t).sort().forEach(s=>{const n=t[s];if(this.allTypesArray[s]){console.error("Type",s,"already exists and will be skipped.");return}this.allTypes[s]=n,this.allTypesArray.push(n),n.typeKey&&n.typeKey!==s&&console.warn("Existing typeKey does not match",s,"and will be overwritten"),n.entTypeId=this.allTypesArray.length-1,n.typeKey=s}),this.allTypesArray.forEach(s=>{const n=E.getExtendedType(s,this.allTypes);this.allTypes[n.typeKey]=n,this.allTypesArray[n.entTypeId]=n}),this.allTypesArray.forEach(s=>{s.name||(s.name=s.typeKey)})}get(t){return this.allTypes[t]}getTerrainSpriteName(t){const e=this.get(t);if(!e)return console.error("Unknown terrain key",t),"";const{sprite:s,variations:n}=e;if(!n)return s;const r=n?Math.floor(Math.random()*n):"0";return`${s}-${r}`}getEntitySpriteName(t){const e=this.get(t);if(!e)return"";const{sprite:s,variations:n}=e;if(!n)return s;const r=Math.floor(Math.random()*n);return`${s}-${r}`}}class Ut{constructor(t){this.entityTypes=t,this.all=[],this.nextEntId=this.all.length}add(t={}){const e=this.entityTypes.getExtendedType(t);this.all.push({...structuredClone(e),entId:this.nextEntId}),this.nextEntId+=1}addActor(t){const{whoId:e=`actor-ent-${this.nextEntId}`}=t;if(this.getActor(e))throw new Error(`Already have an actor with whoId ${e}`);this.add({...t,whoId:e,isActor:!0})}addAvatar(t){this.addActor({...t,type:"avatar",isAvatar:!0})}allAllFromMaps(t){t.reduce((s,n)=>[...s,...n.getEntities()],[]).forEach(s=>{const n=this.entityTypes.getExtendedType(s);n.isActor?this.addActor(n):this.add(n)}),console.log("All Entities",this.all)}getActor(t){return this.all.find(e=>e.whoId===t)}getAvatars(){return this.all.filter(t=>t.isAvatar)}getActors(){return this.all.filter(t=>t.isActor)}getAvatarMapIds(){const t=new Set;return this.getAvatars().forEach(e=>t.add(e.mapId)),[...t]}getActorsOnMap(t){return this.all.filter(e=>e.isActor&&e.mapId===t)}getEntitiesOnMap(t){return this.all.filter(e=>e.mapId===t)}getEntitiesOnMapRange(t,e=0,s=0,n=10,r=10){const o=e+n,a=s+r;return this.all.filter(c=>c.mapId===t&&c.x>=e&&c.x<o&&c.y>=s&&c.y<a)}}class D{constructor(t,e={},s=null){if(!t||typeof t!="object")throw new Error("Missing mapData object");this.mapKey=t.mapKey,this.id=t.id,this.globalLegend=Object.freeze(structuredClone(e)),this.entityTypes=s,this.base=Object.freeze(structuredClone(t)),this.time=0,this.exits=D.makeExits(this.base.exits),this.height=this.base.map.length,this.width=this.base.map.reduce((n,r)=>Math.max(n,r.length),0),this.maxX=this.width-1,this.maxY=this.height-1}static makeMaps(t={},e={},s=null){const n=[];return Object.keys(t).sort().forEach(o=>{const a=n.length,c=new D({...t[o],mapKey:o,id:a},e,s);n.push(c)}),n}static makeExits(t={}){return{left:t.left||t.edges||"BLOCK",right:t.right||t.edges||"BLOCK",top:t.top||t.edges||"BLOCK",bottom:t.bottom||t.edges||"BLOCK",up:t.up||"BLOCK",down:t.down||"BLOCK"}}getEntities(){const t=this.id,{map:e,legend:s}=this.getData(),n=Object.keys(s).filter(a=>s[a].length>1),r=n.reduce((a,c)=>{const l=s[c].slice(1).map(h=>typeof h=="string"?{type:h}:h);return{...a,[c]:l}},{}),o=[];return e.forEach((a,c)=>{a.split("").forEach((l,h)=>{n.includes(l)&&r[l].forEach((d,u)=>{o.push({...structuredClone(d),mapId:t,x:h,y:c,origin:{mapId:t,x:h,y:c,legendIndex:u}})})})}),o}isOffEdge(t,e){return t<0||t>this.maxX||e<0||e>this.maxY}getOffEdge(t,e){return t<0?"left":t>this.maxX?"right":e<0?"top":e>this.maxY?"bottom":!1}getData(){const t={...this.globalLegend,...this.base.legend};return{...this.base,legend:t}}getName(){return this.getData().name||this.mapKey}getOverflowEntityType(){var t;return((t=this.getData())==null?void 0:t.overflow)||"void"}getExit(t){return this.exits[t]||"BLOCK"}getLoopedCoordinates(t,e){return[t>0?t%this.width:(t%this.width+this.width)%this.width,e>0?e%this.height:(e%this.height+this.height)%this.height]}getCellData(t,e){const{map:s,legend:n}=this.getData();if(t<0||e<0||s[e]===void 0||s[e][t]===void 0)return null;const r=s[e][t],o=n[r];return o||(console.warn("Missing",r,"at",t,e,s[e]),null)}getTopProperty(t,e,s){const n=this.getCellData(e,s);let r;for(let o=n.length-1;o>=0;o-=1)if(r=n[o],typeof r=="object"&&r[t]!==void 0)return r[t];return null}getTopEntityType(t,e){const s=this.getCellData(t,e);if(!s)return null;if(s.length===0)return this.getOverflowEntityType();const n=s[s.length-1];return typeof n=="string"?n:n.entityTypeKey||n.entityType||n.type||this.getOverflowEntityType()}getTerrainTypeKey(t,e){const s=this.getCellData(t,e);if(!s)return this.getOverflowEntityType();const[n]=s;return n}getTerrainEntity(t,e){const s=this.getTerrainTypeKey(t,e);return this.entityTypes.getExtendedType({type:s})}getEntranceCoordinates(){let[t=0,e=0]=this.getData().entrance||[];return t==="center"?t=Math.floor(this.width/2):t==="left"?t=0:t==="right"&&(t=this.maxX),e==="bottom"?e=this.maxY:e==="top"?e=0:e==="center"&&(e=Math.floor(this.height/2)),[Math.round(t),Math.round(e)]}}class Nt{constructor(t){this.queue=[],t.forEach(e=>this.add(e)),this.sort(),this.time=0}add(t){if(!t.action){console.warn("Actor does not have action component so cannot be added to schedule",t);return}this.queue.push(t),this.sort()}sort(){this.queue.sort((t,e)=>t.action.cooldown===e.action.cooldown?t.isAvatar?-1:0:t.action.cooldown-e.action.cooldown)}top(){return this.queue[0]}coolToTop(){const t=this.top(),[e,s,n]=t.action,r=n-this.time;return this.time=n,t.action.isWarmingUp=0,{whoId:e,isWarmingUp:s,deltaT:r}}}const B=1,W="readwrite",Ot="readonly",v=5e3,{indexedDB:R,setTimeout:Kt,clearTimeout:V,URL:$t,open:qt}=window,f=class f{constructor(t,e,s=null){this.dbName=t||null,this.version=e||B,this.db=s||null,this.timeout=v}static async openDatabase(t,e=B,s,n){return new Promise((r,o)=>{const a=(l,h)=>{var d,u;console.error(l,(u=(d=h==null?void 0:h.target)==null?void 0:d.error)==null?void 0:u.message,h),o(new Error(`open database failed ${l}`))},c=R.open(t,e);c.onsuccess=l=>{var d;const h=(d=l==null?void 0:l.target)==null?void 0:d.result;n&&n(h,l),r(h)},c.onupgradeneeded=l=>{var d;const h=(d=l==null?void 0:l.target)==null?void 0:d.result;s&&s(h,l)},c.onerror=l=>a("error",l),c.onabort=l=>a("abort",l),c.onclose=l=>a("close",l)})}static openBlob(t){qt($t.createObjectURL(t))}static makeTimedPromise(t,e="",s=v){return new Promise((n,r)=>{const o=Kt(()=>r(new Error(`Timed out ${e}`)),s);t((...l)=>{V(o),n(...l)},(l,...h)=>{V(o),console.error(l,h),r(new Error(`${l} ${e||""}`))})})}static waitForTransaction(t,e="",s=v){return f.makeTimedPromise((n,r)=>{t.oncomplete=o=>n(o),t.onerror=o=>r("error",o,t),t.onabort=o=>r("abort",o,t)},`transaction ${e}`,s)}static waitForRequest(t,e="",s=v){return f.makeTimedPromise((n,r)=>{t.onsuccess=o=>n(o.target.result),t.onerror=o=>r("error",o,t),t.onabort=o=>r("abort",o,t),t.onclose=o=>r("close",o,t)},`request ${e}`,s)}static waitForCursorValueRequest(t,e="",s=v){return f.makeTimedPromise((n,r)=>{const o=[];t.onsuccess=a=>{const c=a.target.result;if(c){o.push(c.value),c.continue();return}n(o)},t.onerror=a=>r("error",a,t)},`cursor request ${e}`,s)}async waitForRequest(t,e=""){return await f.waitForRequest(t,e,this.timeout),t}handleError(t,...e){console.error("SIDB Error:",t,...e)}async getDatabases(){return await R.databases()}getDatabaseName(){if(!this.db)throw new Error("db is missing");return this.db.name}getObjectStoreNames(){return this.db.objectStoreNames}hasObjectStoreName(t){return this.getObjectStoreNames().contains(t)}getTransaction(t,e=W){if(!this.db)throw new Error("db is missing");return this.db.transaction(t,e)}getObjectStore(t,e=W){return this.getTransaction(t,e).objectStore(t)}async addToObjectStore(t,e,s){const n=this.getObjectStore(t).add(e);return await this.waitForRequest(n,s||`add to ${t}`),n}async putToObjectStore(t,e,s){const n=this.getObjectStore(t).put(e);return await this.waitForRequest(n,s||`put to ${t}`),n}async deleteFromObjectStore(t,e,s){const n=this.getObjectStore(t).delete(e);return await this.waitForRequest(n,s||`delete ${e}`),n}async getFromObjectStore(t,e,s){const n=this.getObjectStore(t).get(e);return await this.waitForRequest(n,s||`get ${e}`),n}async readIndexCursorValues(t,e){const n=this.getObjectStore(t).openCursor();return await f.waitForCursorValueRequest(n)}setDatabase(t){this.db=t,t.onabort=(...e)=>this.handleError("abort",e),t.onclose=(...e)=>this.handleError("close",e),t.onerror=(...e)=>this.handleError("error",e),t.onversionchange=(...e)=>{console.warn("versionchange",e)}}close(){this.db&&(this.db.close(),this.db=null)}async delete(){this.close();const t=R.deleteDatabase(this.dbName);await f.waitForRequest(t,"delete")}async open(){this.close();const t=await f.openDatabase(this.dbName,version);return this.setDatabase(t),this.db}async create(t=()=>{}){await this.delete();const e=await f.openDatabase(this.dbName,this.version,t);return this.setDatabase(e),this.db}async upgrade(t=()=>{}){this.version+=1,this.close();const e=await f.openDatabase(this.dbName,this.version,t);return this.setDatabase(e),this.db}async createObjectStore(t,e){let s;return await this.upgrade(n=>{s=n.createObjectStore(t,e)}),s}async deleteObjectStore(t,e){let s;return await this.upgrade(n=>{s=n.deleteObjectStore(t,e)}),s}};x(f,"READ_WRITE",W),x(f,"READ_ONLY",Ot);let U=f;class Yt{constructor(){this.db=new U("worldSaves",1),this.tableName="test-save"}async setup(){await this.db.create(t=>{t.createObjectStore(this.tableName,{keyPath:"path"})})}async saveWorld(t,e){console.log("Saving world"),await this.db.addToObjectStore(this.tableName,{path:1,test:123,saveName:e})}}function jt(i=1,t=0){return t+Math.random()*(i-t)}function zt(i,t=0){return Math.floor(jt(i,t))}function N(i,t=0){const e=Math.max(i,t)+1;return zt(e,Math.min(i,t))}function Ft(i,t,e,s){return(i-e)**2+(t-s)**2}function st(i,t,e,s){return Ft(i,t,e,s)**.5}const nt=i=>new Promise(t=>{setTimeout(t,i)}),H=i=>i.charAt(0).toUpperCase()+i.slice(1);function O(i={}){let{success:t=null,message:e=""}=i;const{followUp:s=null,cooldownMultiplier:n=1,quiet:r=!1}=i;return i instanceof Array&&([t,e]=i),{success:t,message:e,followUp:s,cooldownMultiplier:n,quiet:r}}function rt(i,t,e){return i.filter(s=>s.x===t&&s.y===e)}function ot(i,t){return rt(i,t.x,t.y).filter(e=>e.entId!==t.entId)}function it(i,t,e){const s=_[e];if(!s)return[];const n=t.x+s[0],r=t.y+s[1];return rt(i,n,r)}function at(i=[],t=""){const e=i.filter(s=>s[t]);return e.length?e[0][t]:null}function Pt(i=[],t=0,e=0,s=null){let n=1/0,r=null;return i.forEach(o=>{if(s&&!s(o))return;const a=st(o.x,o.y,t,e);a<n&&(n=a,r=o)}),[r,n]}function Xt(i,t){return st(i.x,i.y,t.x,t.y)}function Bt(i,t){const e=t.x-i.x,s=t.y-i.y;return e===0&&s===0?(console.warn("Could not give a direction between",i,t),""):Math.abs(e)>Math.abs(s)?e<0?"left":"right":s<0?"up":"down"}function Vt(i,t){return(typeof i.speed=="number"?i.speed:1)*(typeof t.speed=="number"?t.speed:1)}function Ht(i,t){const e=(i==null?void 0:i.factions)||{},s=(t==null?void 0:t.factions)||{},n=[...Object.keys(e),...Object.keys(s)];return[...new Set(n)].reduce((a,c)=>{const l=e[c]||0,h=s[c]||0;return l===0||h===0?a:Math.sign(l)===Math.sign(h)?a+Math.min(Math.abs(l),Math.abs(h))*2:a-Math.abs(l-h)},0)}function lt(i){let t=0;return typeof i=="object"?t=N(i[0],i[1]):typeof i=="number"&&(t=i),Number.isNaN(t)?(console.error(i,"-->",t),0):t}function Gt(i,t,e){const s=lt(t);return i.health.hp-=s,console.log("	",i.name,"took",s,"damage. HP:",i.health.hp,e),[s,i.health.hp]}function _t(i=[],t=0,e=""){const s=lt(t),n=i.filter(c=>c.health),r=Math.floor(s/n.length),o=s-r*n.length;return n.map((c,l)=>Gt(c,l===0?r+o:r,e))}function Qt(i){var t;return!i.firer||!i.firer.natural?0:((t=i==null?void 0:i.firer)==null?void 0:t.range)||0}function y(i){var t,e;return((t=i==null?void 0:i.health)==null?void 0:t.hp)&&((e=i==null?void 0:i.health)==null?void 0:e.hp)>0}function Jt(i){var o,a;if(!i.attacker)return[0,""];const t=((o=i.attacker)==null?void 0:o.natural.damage)||0,e=typeof t=="number"?t:t[1]||0,s=0,n="";return e>0?[t,((a=i.attacker)==null?void 0:a.natural.damageType)||""]:[s,n]}function Zt(i){var t;return((t=i==null?void 0:i.attacker)==null?void 0:t.range)||0}function te(i,t,e,s){let n=it(e,i,s);if(!n.length)return[!0,`No one to fight (${s}).`];if(n=n.filter(h=>y(h)),!n.length)return[!0,`No effect! (fight ${s})`];const[r,o]=Jt(i);return[!0,`Attack for ${_t(n,r,o).map(h=>h[0]).join(",")} damage`]}function ee(i,t,e){if(!i.canEnter)return[!1,"You cannot enter."];const s=at(ot(e,i),"enter");if(!s){const r=this.klimb(i,t,e),{success:o}=O(r);return o?r:[!1,"There is nothing to enter."]}if(!s.mapKey)return[!1,"Error entering!"];const n=[s.mapKey];return{success:!0,message:"You enter a new location.",followUp:["moveActorMap",i,n]}}function se(i,t,e,s,n,r){if(!i.canExit)return[!1,"You cannot exit."];const o=t.getExit(e);if(o instanceof Array)return{success:!0,message:`You leave ${t.getName()}.`,followUp:["moveActorMap",i,o]};if(o==="BLOCK")return[!1,`Blocked ${r}.`];if(o==="LOOP"){const[a,c]=t.getLoopedCoordinates(s,n);return i.x=a,i.y=c,[!0,`You move ${r}`]}return[!1,"You cannot move."]}function ne(i,t,e,s){const n=_[s];if(!n)return[!1,"Invalid direction to move"];const r=i.x+n[0],o=i.y+n[1],a=t.getOffEdge(r,o);if(a)return se(i,t,a,r,o,s);const h=[t.getTerrainEntity(r,o).obstacleId,...e.filter(u=>u.x===r&&u.y===o).filter(u=>!u.isActor||y(u)).map(u=>u.obstacleId)].map(u=>{var m;return((m=i==null?void 0:i.move)==null?void 0:m.transversal[u])||0}),d=Math.min(...h);return d?(i.x=r,i.y=o,{success:!0,message:`You move ${s}.`,cooldownMultiplier:1/d}):[!1,`Blocked ${s}.`]}const re=100;function oe(i,t,e){return[!1,"Not yet implemented."]}function ie(i,t,e){return[!1,"Not yet implemented."]}function ae(i,t,e){return[!1,"Not yet implemented."]}function le(i,t,e){return this.enter(i,t,e)}function ce(i,t,e){return[!1,"Not yet implemented."]}function he(i,t,e,s){return it(e,i,s).filter(r=>r.health).length?this.attack(i,t,e,s):this.fire(i,t,e,s)}function de(i,t,e,s){return[!1,"Firing not yet implemented."]}function ue(i,t,e){return[!1,"Not yet implemented."]}function me(i,t,e){return[!1,"Not yet implemented."]}function pe(i,t,e){return[!1,"Without precise calculations you could fly right through a star!"]}function fe(i,t,e){return[!1,"Torches not yet implemented."]}function ge(i,t,e){return[!1,"Not yet implemented."]}function we(i,t,e){return[!1,"Junk not yet implemented."]}function ye(i,t,e){return[!0,"You jump. Wee!"]}function be(i,t,e){return[!1,"Jimmy not yet implemented."]}function Ce(i,t,e,s){if(!i.klimber)return[!1,"You cannot climb."];const n=at(ot(e,i),"klimbable");if(!n)return[!1,"There is nothing to climb here."];const{direction:r}=n;if(s&&r!==s)return[!1,`Cannot climb ${s} here.`];const o=t.getExit(r);return o?{success:!0,message:`You climb ${r}.`,cooldownMultiplier:Vt(i.klimber,n),followUp:["moveActorMap",i,o,!0]}:[!1,"Cannot exit the area."]}function ve(i,t,e){return[!0,"You pretend to be a rocket. Wee!"]}function Ee(i,t,e){return[!1,"Not yet implemented."]}function Te(i,t,e,s){return[!0,"You do not have a mortar and pestle."]}function Se(i,t,e){return[!1,"Not yet implemented."]}function Ae(i,t,e){return[!0,"You have no powers of negation yet."]}function De(i,t,e,s){return[!1,"Not yet implemented."]}function ke(i,t,e){return[!1,"Not yet implemented."]}function Me(){return[!0,"You wait a moment."]}function xe(i,t,e,s){return[!1,"Not yet implemented."]}function Ie(i,t,e){return[!1,"Not yet implemented."]}function Le(i,t,e){if(!i.plan)return p.enqueueWithoutWarmup(i,"pass"),[!1,"No thinking."];const{randomMove:s=.5,aggroRange:n=0,hunt:r=!1}=i.plan;if(r){const[o,a]=Pt(e,i.x,i.y,c=>!(!c.isActor||i.whoId===c.whoId||Xt(c,i)>n||Ht(c,i)>=0));if(o){const c=Bt(i,o);if(c){const l=Zt(i),h=Qt(i),d=a<=l||a<=h?"fight":"move";return p.enqueueWithoutWarmup(i,d,c),[!0,`Planning the hunt (${d})`]}}}if(Math.random()<s){const o=Math.floor(Math.random()*4)+1;p.enqueueWithoutWarmup(i,"move",ft[o])}else p.enqueueWithoutWarmup(i,"pass");return[!0,""]}function We(i,t,e,s){return[!1,"Not yet implemented."]}function Re(i,t,e,s){return[!1,"Not yet implemented."]}function Ue(i,t,e){return[!1,"Not yet implemented."]}function Ne(i,t,e,s){return[!1,"Not yet implemented."]}function Oe(i,t,e,s){return[!1,"Not yet implemented."]}function Ke(i,t,e,s){return[!1,"Not yet implemented."]}function $e(i,t,e,s){return{success:!0,message:`You prepare to ${s}.`,quiet:!0}}function qe(i,t,e){return[!0,"You yell loudly."]}const K={attack:te,board:oe,camp:ie,cast:ae,engage:le,enter:ee,dismount:ce,fight:he,fire:de,get:ue,heal:me,hyperjump:pe,ignite:fe,investigate:ge,junk:we,jump:ye,jimmy:be,klimb:Ce,launch:ve,locate:Ee,mix:Te,move:ne,navigate:Se,negate:Ae,open:De,offer:ke,pass:Me,pickpocket:xe,peer:Ie,plan:Le,push:We,ready:Re,summon:Ue,talk:Ne,transact:Oe,unlock:Ke,warmup:$e,yell:qe},Ye=Object.keys(K);class p{constructor(t={},e={}){this.actionsConfig=structuredClone(t);const{actionCooldown:s=mt,actionCooldownRandom:n=0,actionWarmup:r=pt,actionWarmupRandom:o=0}=e;this.actionCooldown=s,this.actionCooldownRandom=n,this.actionWarmup=r,this.actionWarmupRandom=o}static has(t){return Ye.includes(t.toLowerCase())}static hasAction(t){return t.action?t.action.queue&&t.action.queue.length:!1}static hasReadyAction(t,e){return p.hasAction(t)?t.action.cooldown<=e:!1}static isWaitingForAction(t,e){return!p.hasAction(t)&&t.action.cooldown<=e}static handleDeadActor(t){y(t)||(t.action.queue=[["pass"]],t.action.cooldown+=re)}static enqueueWithoutWarmup(t,e,s){t.action.queue.push([e,s])}enqueue(t,e,s){this.getWarmupTime(e)&&t.action.queue.push(["warmup",e]),t.action.queue.push([e,s])}planAction(t){if(!y(t)){p.handleDeadActor(t);return}this.enqueue(t,"plan")}runAction(t,e,s,n,r){if(!t)throw new Error("Missing actionName");if(!K[t])throw new Error(`Invalid actionName ${t}`);const o=K[t](e,s,n,r,this);return O(o)}perform(t,e,s,n){if(!p.hasReadyAction(t,n))return[!1,"No ready actions."];const{action:r}=t,o=r.queue.shift(),[a,c=""]=o;if(!y(t)&&a!=="pass")return p.handleDeadActor(t),O([!1,`Cannot ${a} while dead`]);const l=this.runAction(a,t,e,s,c),{success:h,cooldownMultiplier:d}=l;if(h){const u=this.getCooldownTime(a,c)*d;r.cooldown+=u}return l}getWarmupTime(t){var e;return(((e=this.actionsConfig[t])==null?void 0:e.warmup)||0)*(this.actionWarmup+N(this.actionWarmupRandom))}getCooldownTime(t,e){var s;return t==="warmup"?this.getWarmupTime(e):(((s=this.actionsConfig[t])==null?void 0:s.cooldown)||0)*(this.actionCooldown+N(this.actionCooldownRandom))}}class je{constructor(t={},e={},s=null){this.worldComm=s,this.entityTypes=new E(t==null?void 0:t.entityTypes),this.actions=new p(e,t==null?void 0:t.timing),this.time=0,this.maps=D.makeMaps((t==null?void 0:t.maps)||{},t==null?void 0:t.globalLegend,this.entityTypes),this.connections={},this.ents=new Ut(this.entityTypes),this.schedulerQueues={},this.worldLog=[],this.deltas=[],this.ents.allAllFromMaps(this.maps),this.saveLoadManager=new Yt}async load(){const t=this.maps.findIndex(e=>e.mapKey==="overworld");this.ents.addAvatar({type:"avatar",whoId:"my-avatar-1",mapId:t,x:10,y:6,stats:{}}),this.time=100,this.maps.forEach(e=>{e.time=this.time}),this.ents.getActors().forEach(e=>{e.action.cooldown=this.time}),this.updateAllClients(),await this.saveLoadManager.setup(),this.save()}async save(){await this.saveLoadManager.saveWorld(this,"test-save")}connect(t,e={}){this.connections[t]={visibleWorldHeight:3,visibleWorldWidth:3,...e,commandQueue:[]}}getActor(t){const e=this.ents.getActor(t);return e||console.warn("Could not find",t),e}getActorMapId(t){return this.getActor(t).mapId}getActorMap(t){return this.getMap(this.getActorMapId(t))}getMap(t){return typeof t=="number"?this.maps[t]:this.maps.find(e=>e.mapKey===t)}getMapData(t){var e;return((e=this.maps[t])==null?void 0:e.getData())||{}}getTerrainSpriteAt(t,e,s){const r=this.getMap(t).getTerrainTypeKey(e,s);return this.entityTypes.getTerrainSpriteName(r)}getEntitySpriteAt(t,e,s){const r=this.ents.getEntitiesOnMap(t.id).find(o=>o.x===e&&o.y===s);return r?r.sprite:""}getTerrainSprites(t,e=0,s=0,n=10,r=10){const o=[];for(let a=0;a<r;a+=1){o[a]||(o[a]=[]);for(let c=0;c<n;c+=1)o[a][c]=this.getTerrainSpriteAt(t,e+c,s+a)}return o}getPropsSprites(t,e=0,s=0,n=10,r=10){const o=this.getMap(t),a=[];for(let c=0;c<r;c+=1){a[c]||(a[c]=[]);for(let l=0;l<n;l+=1)a[c][l]=this.getEntitySpriteAt(o,e+l,s+c)}return a}makeVisibleThing(t,e,s){return[t.sprite,t.x-e,t.y-s]}async getParty(t){const{centerVisibleWorldX:e,centerVisibleWorldY:s}=this.getVisibleWorldDimensions(t),n=this.getActor(t);return{avatar:{...n,sprite:y(n)?n.sprite:n.deadSprite,visibleWorldX:e,visibleWorldY:s}}}getVisibleWorldDimensions(t){const e=this.connections[t],{visibleWorldHeight:s,visibleWorldWidth:n}=e,r=this.getActor(t),o=Math.floor(n/2),a=Math.floor(s/2),c=r.x,l=r.y,h=c-o,d=l-a;return{w:n,h:s,centerVisibleWorldX:o,centerVisibleWorldY:a,centerWorldX:c,centerWorldY:l,worldLeftX:h,worldTopY:d}}async getVisibleWorld(t){if(!t)throw new Error("Need a whoId for getting visible world");const{w:e,h:s,worldLeftX:n,worldTopY:r}=this.getVisibleWorldDimensions(t),o=this.getActorMapId(t),a=this.ents.getEntitiesOnMapRange(o,n,r,e,s);return{terrain:{sprites:this.getTerrainSprites(o,n,r,e,s)},props:a.filter(l=>l.isProp||l.isDestination).map(l=>this.makeVisibleThing(l,n,r)),items:a.filter(l=>l.isItem).map(l=>this.makeVisibleThing(l,n,r)),actors:a.filter(l=>l.isActor).map(l=>{const h=this.makeVisibleThing(l,n,r);return y(l)?h:[l.deadSprite,h[1],h[2]]})}}updateAllClients(){Object.keys(this.connections).forEach(t=>this.updateClient(t))}async updateClient(t){const e=await this.getVisibleWorld(t),s=await this.getParty(t);this.worldComm.sendDataToClient({visibleWorld:e,party:s,deltas:this.deltas})}async performAction(t,e){const{mapId:s,whoId:n}=t;if(!p.hasReadyAction(t,e))return null;const r=this.getMap(s),o=this.ents.getEntitiesOnMap(s),{success:a,message:c,followUp:l,quiet:h}=this.actions.perform(t,r,o,e);return l&&this[l[0]](...l.slice(1)),this.connections[n]&&await this.updateClient(n),{mapId:s,mapTime:e,success:a,message:c,quiet:h,whoId:n,worldTime:this.time}}getSimMapIds(){return this.ents.getAvatarMapIds()}async sim(t=1){this.time+=t;let e=0;const s=this.getSimMapIds();for(let n=0;n<s.length;n+=1){const r=s[n],o=this.getMap(r);let a=!1;for(;o.time<this.time&&!a;)a=await this.simMap(r,t);a&&(e+=1)}e?this.updateAllClients():(await nt(10),this.sim(t))}async simMap(t,e){const s=this.getMap(t);s.time=Math.min(this.time,s.time+e);const n=this.ents.getActorsOnMap(t);this.schedulerQueues[t]||(this.schedulerQueues[t]=new Nt(n));const r=this.schedulerQueues[t],o=r.top();if(p.isWaitingForAction(o,s.time)){if(o.isAvatar)return console.log("Map Sim",s.time,"Top actor is avatar and has nothing to do."),!0;console.log("Map Sim",s.time,o.name,"planning"),this.actions.planAction(o)}const a=await this.performAction(o,s.time);return a&&this.deltas.push(a),r.sort(),!1}moveActorMap(t,e=[],s=!1){const[n,r,o]=e,a=this.getMap(n);if(t.mapId=a.id,s){typeof r=="number"&&typeof o=="number"?(t.x+=r,t.y+=o):console.error("invalid coordinates");return}if(typeof r=="number"&&typeof o=="number")t.x=r,t.y=o;else{const[c,l]=a.getEntranceCoordinates();t.x=c,t.y=l}}ping(){return[!0,"ping"]}async runCommand(t,e){const s=t instanceof Array?[...t]:String(t).toLowerCase().split(" "),r={hole:"camp",inform:"investigate",search:"investigate",steal:"pickpocket",wear:"ready",equip:"ready",exit:"dismount",mount:"board",stats:"ztats",go:"move"}[s[0]];r&&(s[0]=r);const o=s[0],a=["chat","descend","exit","karma","look","map","navigate","party","ping","quicksave","quit","view","zstats"],c=s.slice(1),l=this.getActor(e);if(this[o]){if(!a.includes(o))return{success:!1,message:`Command not allowed '${o}'`};const[h,d]=await this[o](l,...c);return this.sim(),{success:h,message:d}}return p.has(o)?l.action?(console.log("World enqueue action:",o,c),this.actions.enqueue(l,o,c.join(" ")),this.sim(),{success:!0,message:"Action queued"}):{success:!1,message:`${e} cannot do actions.`}:(console.error("Invalid command",o),{success:!1,message:`Invalid command '${o}'`})}}class ze extends Q{constructor(t={}){super(),this.localWorld=null,this.visibleWorldHeight=0,this.visibleWorldWidth=0,t.world&&this.startLocalWorld(t.world,t.actions)}async startLocalWorld(t,e){this.localWorld=new je(t,e,this),window.world=this.localWorld,await this.localWorld.load()}async connect(t,e,s){this.localWorld.connect(t,{visibleWorldHeight:s,visibleWorldWidth:e})}async load(){}async sendCommandToWorld(t,e){if(!t)return console.warn("Cannot send a blank command"),[];if(!e)throw new Error("Must send a command on behalf of a user (whoId missing)");const s=await this.localWorld.runCommand(t,e),n=await this.localWorld.getVisibleWorld(e),r=await this.localWorld.getParty(e);return[s,n,r]}async sendDataToClient(t){this.trigger("data",t)}}class k{constructor(t={}){var e,s;this.states=t.states||{},this.inputCtrl=new Rt(this.states),this.screen=new b(t),this.gameStorage=new It(t.gameName||"WULF"),this.worldComm=new ze({world:t.world,actions:t.actions}),this.commandIndex=0,this.mapFocus=[0,0],this.mapDisplaySizeX=(e=t==null?void 0:t.mapDisplay)==null?void 0:e.w,this.mapDisplaySizeY=(s=t==null?void 0:t.mapDisplay)==null?void 0:s.h,this.visibleWorld={},this.party={},this.avatarWhoId=null,this.renderWorldTime=0,this.volume=5}static waitForDom(){return new Promise(t=>{window.addEventListener("DOMContentLoaded",()=>t())})}async loadGame(){this.avatarWhoId="my-avatar-1",this.worldComm.load()}async sendWorldCommand(t){const[e,s,n]=await this.worldComm.sendCommandToWorld(t,this.avatarWhoId);return this.handleIncomingData({visibleWorld:s,party:n}),e}refocus(){var t,e;this.mapFocus[0]=((t=this.party)==null?void 0:t.avatar.visibleWorldX)||0,this.mapFocus[1]=((e=this.party)==null?void 0:e.avatar.visibleWorldY)||0}switchToAskDirection(t){const e=t.findIndex(s=>s==="direction");this.screen.mainConsole.print(`${H(t[0])} Direction?`),this.inputCtrl.setState("direction",s=>{if(s==="abort"){this.switchToTravel(),this.mainConsole.print("Cancel");return}const n=[...t];n[e]=s,this.screen.mainConsole.print(H(s)),this.switchToTravel(),this.executeCommand(n.join(" "))})}switchToTravel(){this.drawMap(),this.inputCtrl.setState("travel",t=>this.executeCommand(t))}switchTo(t){if(t==="travel"){this.switchToTravel();return}if(t==="direction"){this.switchToAskDirection();return}if(t==="commands"){this.inputCtrl.setState("commands",e=>{var r;if(e==="abort"){this.switchTo("travel");return}const s=this.getStateKeyCommands("travel");if(e==="execute"){this.switchTo("travel");const o=(r=s[this.commandIndex])==null?void 0:r.command;this.executeCommand(o);return}const n=s.length;e==="next"?this.commandIndex=(this.commandIndex+1)%n:e==="previous"&&(this.commandIndex=(n+this.commandIndex-1)%n),this.drawKeyCommandsScreen("travel")}),this.drawKeyCommandsScreen("travel");return}console.warn("Unknown state",t)}async executeCommand(t){await nt(10),console.log("		Client Command:",t);const e={vol:"volume"},s={volume:a=>{let c=0;a==="up"?c=1:a==="down"&&(c=-1),this.volume=Math.min(Math.max(this.volume+c,gt),wt),this.screen.mainConsole.print(`Volume: ${this.volume}`)},switch:a=>this.switchTo(a),see:a=>this.switchTo(a),abort:()=>{this.switchToTravel()},view:()=>{},chat:()=>{}},n=String(t).toLowerCase().split(" "),r=e[n[0]];r&&(n[0]=r);const o=s[n[0]];if(o){const a=n.slice(1);await o(...a);return}if(n.includes("direction")){this.switchToAskDirection(n);return}await this.sendWorldCommand(n)}getMapFocusTopLeft(){const[t,e]=this.mapFocus;return[t-Math.floor(this.mapDisplaySizeX/2),e-Math.floor(this.mapDisplaySizeY/2)]}drawMap(){this.screen.drawMap(this.visibleWorld,this.party)}getStateKeyCommands(t){const{kb:e={},hideCommands:s=[]}=this.states[t];return Object.keys(e).filter(n=>!s.includes(n)).map(n=>({key:n,command:e[n]}))}drawKeyCommandsScreen(t){const e=this.getStateKeyCommands(t),s={ArrowUp:"Up",ArrowDown:"Down",ArrowLeft:"Left",ArrowRight:"Right"," ":"Space"},n={},r=e.map(({key:o,command:a},c)=>{const l=s[o]||o,h=(n[a]||a).replaceAll("direction","dir");return`${this.commandIndex===c?">":" "}(${l}) ${h}`});this.screen.drawCommandColumns(r)}drawAll(){this.screen.drawAll(this.visibleWorld,this.party)}static loopDeltas(t=[],e=0,s=0,n=()=>{}){let r;for(let o=t.length-1;o>=0;o-=1)if(r=t[o],r.worldTime<e||r.worldTime<=s&&n(r))return}drawDeltas(t=[],e=0,s=0){const n=[];k.loopDeltas(t,e,s,r=>{this.renderWorldTime<r.worldTime&&r.whoId===this.avatarWhoId&&!r.quiet&&n.push(r.message)});for(let r=n.length-1;r>=0;r-=1)console.log("		Print",n[r]),this.screen.mainConsole.print(n[r])}handleIncomingData(t){var r;const{visibleWorld:e,party:s,deltas:n}=t;if(this.visibleWorld=Object.freeze(structuredClone(e)),this.party=Object.freeze(structuredClone(s)),n){const o=this.renderWorldTime,a=((r=n[n.length-1])==null?void 0:r.worldTime)||0;this.drawDeltas(n,o,a),this.renderWorldTime=a}this.refocus(),this.drawAll()}async setup(){await k.waitForDom(),await this.screen.setup(),this.screen.mainConsole.print("A flash of red..."),this.screen.mainConsole.print("You have awoken in a strange world."),this.loadGame(),this.worldComm.on("data",t=>this.handleIncomingData(t)),await this.worldComm.connect(this.avatarWhoId,this.mapDisplaySizeX,this.mapDisplaySizeY),await this.sendWorldCommand("ping",this.avatarWhoId),this.drawMap(),this.inputCtrl.setup(),this.switchToTravel()}async start(){await this.setup(),console.log("%c☥","font-size: 300%; color: #ff0;")}}const ct=new k(Dt);ct.start();window.g=ct;
