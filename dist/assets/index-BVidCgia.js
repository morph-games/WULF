var me=Object.defineProperty;var pe=(i,e,t)=>e in i?me(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var R=(i,e,t)=>pe(i,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const r of n)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(n){const r={};return n.integrity&&(r.integrity=n.integrity),n.referrerPolicy&&(r.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?r.credentials="include":n.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(n){if(n.ep)return;n.ep=!0;const r=t(n);fetch(n.href,r)}})();const W=320,J=200,E={up:[0,-1],down:[0,1],left:[-1,0],right:[1,0],here:[0,0]},fe=20,ge=5,we=["up","right","down","left"],ye=0,be=10,ve={main:{url:"./images/wulf-spritesheet-11.png",size:16,atlas:[{names:["grass-0","grass-1","grass-2","grass-3","forest-0","forest-1","forest-2","forest-3","mountain-0","mountain-1","mountain-2","mountain-3","mountain-door","circle","village","town","city","","faded-place","place"]},{names:["water-0","void","","","","","","","water-1","","","","","","","","ladder-down","ladder-up","magic-ladder-down","magic-ladder-up"]},{names:["dirt","floor-0","floor-1","floor-2","floor-3","floor-4","floor-5","floor-6","","","","","","","","","pillar-0","torch-0","torch-1","torch-2"]},{names:["stone-wall-0","stone-wall-1","stone-door-open","stone-window","stone-sign-left","stone-sign-right","dark-stone-0","dark-stone-1","dark-stone-to-stone","stone-to-dark-stone","green-stone"]},{names:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T"]},{names:["U","V","W","X","Y","Z","rune-A","rune-B","rune-C","rune-D","rune-E","rune-F","rune-G","rune-H","rune-I","rune-J","rune-K","rune-L","rune-M","rune-N"]},{names:["rune-O","rune-P","rune-Q","rune-R","rune-S","rune-T","rune-U","rune-V","rune-W","rune-X","rune-Y","rune-Z","rune-TH","rune-EE","rune-NG","rune-EA","rune-ST","rune-space","",""]},{names:["horse","horseback","empty-sailboat","sailboat","empty-galleon","galleon","empty-carpet","flying-carpet","empty-broom","flying-broom","dead-skull","hit-splash","target-circle"]},{names:["spearman-0","spearman-1","spearman-2","spearman-3","beastman-0","","","","king-0","","","","man-0","","","","woman-0","","",""]},{names:["orc-0","orc-1","orc-2","orc-3","wildman-0"]},{names:["dwarf-0"]},{names:["elf-0"]}]},fonts:{url:"./images/letters-spritesheet-5.png",size:8,atlas:[{names:["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","th","ee","ng","ea","st"," ","0","1","2","3","4","5","6","7","8","9","10","-","=",";",",",".","'","/"]},{names:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","TH","EE","NG","EA","ST"," ","ankh","!","@","#","$","%","^","&","*","(",")","_","+",":","<",">",'"',"?"]},{names:["rune-A","rune-B","rune-C","rune-D","rune-E","rune-F","rune-G","rune-H","rune-I","rune-J","rune-K","rune-L","rune-M","rune-N","rune-O","rune-P","rune-Q","rune-R","rune-S","rune-T","rune-U","rune-V","rune-W","rune-X","rune-Y","rune-Z","Trune-H","Erune-E","Nrune-G","Erune-S","Srune-T","rune-space"]}]}},Ce={entity:{sprite:"void",x:0,y:0,obstacleId:0},terrain:{type:"entity",isTerrain:!0},void:{type:"terrain",sprite:"void",obstacleId:0},dirt:{type:"terrain",sprite:"dirt",obstacleId:6},floor2:{type:"terrain",sprite:"floor-2",obstacleId:7},floor3:{type:"terrain",sprite:"floor-3",obstacleId:7},floor4:{type:"terrain",sprite:"floor-4",obstacleId:7},floor5:{type:"terrain",sprite:"floor-5",obstacleId:7},grass:{type:"terrain",sprite:"grass-0",obstacleId:5},water:{type:"terrain",sprite:"water",variations:2,obstacleId:2},forest:{type:"terrain",sprite:"forest-0",obstacleId:10},mountain:{type:"terrain",sprite:"mountain-0",obstacleId:11},wall:{type:"terrain",sprite:"stone-wall-0",obstacleId:1},darkWall:{type:"terrain",sprite:"dark-stone-0",obstacleId:1},door:{type:"terrain",sprite:"stone-door-open",obstacleId:0},window:{type:"terrain",sprite:"stone-window",obstacleId:1},floor:{type:"terrain",sprite:"floor-0",obstacleId:7},tileFloor:{type:"terrain",sprite:"floor-2",obstacleId:7},signLeft:{type:"terrain",sprite:"stone-sign-left",obstacleId:1},signRight:{type:"terrain",sprite:"stone-sign-right",obstacleId:1},destination:{type:"entity",investigate:{message:"You see {{name}}."},enter:{},sprite:"mountain-door",isDestination:!0},town:{type:"destination",sprite:"town"},city:{type:"destination",sprite:"city"},village:{type:"destination",sprite:"village"},dungeon:{type:"destination",sprite:"mountain-door"},prop:{type:"entity",isProp:!0},ladderDown:{type:"prop",sprite:"ladder-down",klimbable:{speed:1,direction:"down"}},ladderUp:{type:"prop",sprite:"ladder-up",klimbable:{speed:1,direction:"up"}},torch:{type:"prop",sprite:"torch-0"},pillar:{type:"prop",sprite:"pillar-0"},actor:{type:"entity",sprite:"horse",deadSprite:"dead-skull",isActor:!0,action:{queue:[],cooldown:1},mover:{speed:1,transversal:[1,0,0,0,.5,1,1.1,1.2,.5,.9,.8,0,0,0,0],movesCount:0},health:{hp:99,hpMax:99,deathSprite:"void"},fighter:{},attacker:{range:1,natural:{damage:1,damageType:"ph"}},firer:{range:3},currencies:{coins:0,food:10},inventory:{contents:[],max:255},equipment:{},obstacleId:13},avatar:{type:"actor",isAvatar:!0,sprite:"spearman-0",enterer:{speed:1},exitor:{speed:1},klimber:{speed:1},health:{hp:99,hpMax:99,respawnOnDeath:!0},currencies:{coins:0,food:99},eater:{moveMeal:1},attacker:{range:1,natural:{damage:[5,10],damageType:"ph"}},inventory:{contents:[],max:255},experience:{totalXp:0,killXp:100},factions:{good:10,evil:0}},king:{type:"actor",sprite:"king-0"},wanderer:{type:"actor",sprite:"man-0",plan:{randomMove:.5}},man:{type:"wanderer"},woman:{type:"wanderer",sprite:"woman-0"},guard:{type:"wanderer",sprite:"spearman-2"},sentry:{type:"actor",sprite:"spearman-2"},elf:{type:"wanderer",sprite:"elf-0"},dwarf:{type:"wanderer",sprite:"dwarf-0",buyer:{any:["item"]},seller:{types:["dagger","mace","axe","ropeAndSpikes","sword","greatSword","bow","amulet","wand","staff"],movesCountGate:[0,0,0,0,1500,1500,3e3,3e3,3e3,3e3]}},monster:{type:"actor",factions:{good:-255,evil:255},plan:{randomMove:.5,aggroRange:10,hunt:!0},fighter:{},attacker:{range:1,natural:{damage:[1,4],damageType:"ph"}},firer:{range:0},health:{hp:12,hpMax:12,respawnOnDeath:!1}},beastman:{type:"monster",sprite:"beastman-0",currencies:{coins:[0,10],food:0},experience:{killXp:10}},darkHorseman:{type:"monster",sprite:"horseback",currencies:{coins:[0,10],food:[0,10]},experience:{killXp:10}},orc:{type:"monster",sprite:"orc-0",currencies:{coins:[0,10],food:[0,10]},experience:{killXp:10}},wildman:{type:"monster",sprite:"wildman-0",currencies:{coins:[0,10],food:0},experience:{killXp:10}},item:{type:"entity",isItem:!0,value:{valueMultiplier:0}},carpet:{type:"item",sprite:"empty-carpet"},broom:{type:"item",sprite:"empty-broom"},horse:{type:"item",sprite:"horse"},sailboat:{type:"item",sprite:"empty-sailboat"},galleon:{type:"item",sprite:"empty-galleon"},weapon:{type:"item",isWeapon:!0,equippable:{slots:["anyHand"]},attackable:{range:1,damage:1,type:"ph"}},dagger:{attackable:{damage:8,range:1,type:"ph"},valuable:{value:1}},mace:{attackable:{damage:16,range:1,type:"ph"},valuable:{value:1}},axe:{attackable:{damage:24,range:1,type:"ph"},valuable:{value:1}},ropeAndSpikes:{attackable:{damage:1,range:1,type:"ph"},valuable:{value:1}},sword:{attackable:{damage:40,range:1,type:"ph"},valuable:{value:1}},greatSword:{attackable:{damage:48,range:1,type:"ph"},valuable:{value:1}},bow:{attackable:{damage:56,range:1,type:"ph"},valuable:{value:1}},amulet:{buff:{spellDamageBonus:.5},valuable:{value:1}},wand:{buff:{spellDamageBonus:1},valuable:{value:1}},staff:{buff:{spellDamageBonus:2},valuable:{value:1}},triangle:{buff:{spellDamageBonus:2},attackable:{damage:88,range:1,type:"ph"},valuable:{value:1}},pistol:{attackable:{damage:96,range:1,type:"ph"},valuable:{value:1}},lightSword:{attackable:{damage:104,range:1,type:"ph"},valuable:{value:1}},phazor:{attackable:{damage:112,range:1,type:"ph"},valuable:{value:1}},blaster:{attackable:{damage:120,range:1,type:"ph"},valuable:{value:1}},armor:{type:"item",isArmor:!0}},Ee={name:"Lands of Lord Lunic",mapType:"overworld",map:["~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~.......f~~~....~~~~~~~~~~~","~~~~.....B..f~~~....~~~~~~~~~~~","~~~~..ff.....g~..f..~~~~~","~~~...^f.....sfffff.~~~~~","~~~..^^^.......fffff.~~~~","~~~..^^^........3fff...","~~~..^D........fffff..","~~~.^^^^....h....ff..","~~~..^^^b.c.....O..ff..","~~~~..^...........f..","~~~...^......2......~~~~.1~~","~~~........f..~~~~..~~~~~.f~","~~~.f^...^^^f....~~~~","~~~.f^^.^^^^ff~~~~~~~","~~~~^^...f^^ffff~~~~~","~~~~^.~..f^^^fff~~~~~","~~~~~~~f.ff^fff^~~~~~","~~~...ff...ff.^^^.1~~","~~~.........^^^^^^^^..~~~~......","~~..~........ff.^^^^^^^ff......","~~~~~~........f...............","~~~~~~~.~~.......~..~","~~~~~~~~~~~~~.~~~~~~~~~","~~~~~~~~~~~..O~~~~~~~~~~","~~~~~~~~~~~~....~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~..........~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~..fff..............~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~...~...........................ffffff........~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~...~^^^...................fffffffffffff^^......~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~.....^^................................^^.B........~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~....^^^................................^^^..B............~~~~~~~~~~~~~~~~~~~~~","~~~~~~~....^^^^............^^ffff.............^^^^^.................~~~~~~~~~~~~~~~~","~~~~~~~~........W...................W.................................~~~~~~~~~~~~~~","~~~~~~~~~..................................................................~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"],legend:{1:["grass","village"],2:["grass","town"],3:["grass",{type:"city",enter:{mapKey:"castle1"}}],D:["grass",{type:"dungeon",enter:{mapKey:"dungeon1"}}],K:["grass",{type:"king"}],G:["grass","guard"],W:["grass","wildman"],c:["grass","carpet"],h:["grass","horse"],s:["water","sailboat"],g:["water","galleon"],b:["grass","broom"]},spawn:{types:["beastman"],max:10,cooldownMulitplier:1},overflow:"water",exits:{edges:"LOOP"}},Te={name:"Castle Albarix",mapType:"civilization",map:[".....................",".###################.",".#~~~-----------~~~#.",".#~~~-|--###--|-~~~#.",".#~~-----(K)-----~~#.",".#~---|-------|---~#.",".#-----------------#.",".#-S----*---*----S-#.",".#########-#########.",".%F.....F---F.....F%.",".%F......---......F%.",".###U####---####U###.",".#------#---#--W---#.",".#------#---#------#.",".#---M--#---####U###.",".%------U----------%.",".#------#----------#.",".####U###---######U#.",".#------#---#----#-#.",".#------#---#----#-#.",".#-D----#---#-E--U-#.",".#----D-#---######-#.",".########---#----#-#.",".#------U---#----U-#.",".#------#---#----#-#.",".#-####-#---######U#.",".#-G----#---#-E----#.",".#------#---#------#.",".####U###---######U#.",".#------#---#--G---#.",".#-->---#---#------#.",".######%#UUU#%######.","..ff..:::::::::..ff..","......:.~~~~~.:......","....*.:.~~~~~.:.*....",".####.D.~~~~~.:.####.",".#--S::.......::S--#.",".##%#.:::---:::.#%##.","....................."],legend:{U:["door"],"%":["window"],F:["forest"],S:["floor","sentry"],G:["floor","guard"],K:["floor","king"],M:["floor","man"],W:["floor","woman"],"(":["signLeft"],")":["signRight"],">":["floor","ladderDown"],E:["floor","elf"],D:["floor","dwarf"]},overflow:"grass",entrance:["center","bottom"],exits:{edges:["overworld",16,6],down:["castle1B",-1,-1]}},Se={name:"Castle Albarix Cellar",mapType:"civilization",map:["###################","#~~#-----------#~~#","#~~#--|-###-|--#~~#","#~~#-----------#~~#","####-----------####","#-----|-----|-----#","#-----------------#","#########U#########","#:::::::---:::::::#","#:::::::---:::::::#","###U####---########","#------#---U------#","#------#---#------#","#--G---#---########","#------U---#------#","#---*--#---U------#","########---########","#::::::#---|------#","#::::::U---------*#","#::::::#---|------#","#::::::#---########","########---#----*-#","#*-----U---U--G---#","#------#---#------#","#-|-G|-#######U####","#----------|-----*#","#-----------------#","#-#--#-##########U#","#------#------G---#","#--<---#---*------#","###################"],legend:{U:["door"],G:["floor","guard"],"<":["floor","ladderUp"]},entrance:["center","bottom"],exits:{edges:"BLOCK",up:["castle1",1,1]}},ke={name:"Dungeon",mapType:"dungeon",map:["#####################","#####################","##~~~-----------~~~##","##~~~-|--###--|-~~~##","#########.-##########","#:.....:-.--:::...:.#","#:......--:-......::#","###U####-.--####U####","#------#-.--#--W---##","#------#.---#------##","#---W--#-.--####U####","#------U--.--------%#","#-----...:.:::..---.#","####U###-.--######U.#","#------#.---#----#-.#","#------#.---#----#-.#","#-B----#.---#-B--U-.#","#----O-#.---######-.#","########--.-#----#..#","#------U--.-#----U..#","#------#--.-#----#..#","#-####-#--.-######U##","##-O----#--.#-B::::##","##------#--.#------##","#####U###---######U##","##------#---#--B---##","##------#---#------##","#######%#UUU#%#######","#~.W..:::::::::.....#","#~~~..:.~~.~~.:.....#","#..~*.:.~~.~~.:.*...#","##-~.::.......::---##","###:#.:::---:::.#W###","##########.##########"],legend:{".":["floor3"],"-":["floor5"],U:["door"],"%":["window"],F:["forest"],S:["floor","sentry"],G:["floor","guard"],K:["floor","king"],M:["floor","man"],W:["floor","wildman"],"(":["signLeft"],")":["signRight"],">":["floor","ladderDown"],E:["floor","elf"],D:["floor","dwarf"],"#":["darkWall"]},overflow:"void",entrance:["center","bottom"],exits:{edges:["overworld",16,6]}},b=8,Ae=W/b,F=J/b,De=W/b,U=Math.floor(De/2),Me={settings:{bumpCombat:1,autoEnter:0,language:"en"},spritesheets:ve,screen:{containerSelector:"#screen",mainCanvasId:"main-canvas",height:J,width:W,colors:{blue:"#2bcfd6",green:"#53d638",violet:"#962ba5",orange:"#d95e1c",white:"#f1f1f1",black:"#000000"}},mapDisplay:{w:20,h:10,offsetX:0,offsetY:1},mainConsole:{horizontal:"left",vertical:"bottom",rows:4,columns:Ae-10,cursor:">",fontSize:b,offsetX:0,offsetY:-2},quickStatConsole:{horizontal:"right",vertical:"bottom",rows:4,columns:9,fontSize:b,offsetX:-2,offsetY:-2},commandConsoles:[{horizontal:1,vertical:1,rows:F-2,columns:U-1,fontSize:b},{horizontal:U+1,vertical:1,rows:F-2,columns:U-2,fontSize:b}],world:{obstacleTypes:["none","impassable physical obstacle","deep ocean","shallow water","swamp","plains","path","road","desert","hills","forest","low mountains","high mountains","short physical obstacle","lava","magical barrier",""],entityTypes:Ce,mapTypes:{overworld:{moveMealMultiplier:1,moveXpMultiplier:1,scale:"overworld"},civilization:{moveMealMultiplier:0,moveXpMultiplier:0,scale:"personal"},dungeon:{moveMealMultiplier:1,moveXpMultiplier:1,scale:"personal"}},maps:{overworld:Ee,castle1:Te,castle1B:Se,dungeon1:ke},globalLegend:{".":["grass"],":":["dirt"],"~":["water"],"^":["mountain"],f:["forest"],"-":["floor"],"*":["floor","torch"],"|":["floor","pillar"],"#":["wall"],B:["grass","beastman"],O:["grass","orc"]},timing:{actionCooldown:20,actionCooldownRandom:4,actionWarmup:5,actionWarmupRandom:0,overworldEating:100,townEating:1e4,regen:120,spawnCooldown:80,spawnCooldownRandom:50}},stats:{min:0,max:99,list:[{name:"Strength"}]},start:{mapKey:"overworld",coordinates:[10,10]},states:{direction:{kb:{ArrowUp:"up",ArrowDown:"down",ArrowLeft:"left",ArrowRight:"right",w:"up",s:"down",a:"left",d:"right",q:"abort",Escape:"abort",Enter:"abort"," ":"abort"}},stats:{kb:{q:"close",Escape:"close",Enter:"next"," ":"next"}},ready:{kb:{w:"ready weapon",a:"ready armor",s:"ready spell",q:"abort",Escape:"abort",Enter:"abort"," ":"abort"}},cast:{kb:{ArrowUp:"up",ArrowDown:"down",w:"up",s:"down",q:"abort",Escape:"abort",Enter:"abort"," ":"abort"}},item:{kb:{ArrowUp:"up",ArrowDown:"down",w:"up",s:"down",q:"abort",Escape:"abort",Enter:"abort"," ":"abort"}},commands:{kb:{ArrowUp:"previous",ArrowDown:"next",ArrowLeft:"previous",ArrowRight:"next",w:"previous",a:"previous",s:"next",d:"next",Escape:"abort",Enter:"execute"," ":"execute","?":"abort",F1:"abort"}},navigate:{kb:{ArrowUp:"previous",ArrowDown:"next",ArrowLeft:"previous",ArrowRight:"next"}},travel:{hideCommands:["/","0","1","=","G","Q","Enter"],kb:{" ":"pass",Tab:"toggle party",Enter:"chat","/":"command",0:"party return",1:"party 1",a:"go left",b:"board",c:"cast",d:"go right",e:"engage",f:"fight direction",g:"get nearby",h:"hole up",i:"investigate",j:"junk item",k:"klimb",l:"look direction",m:"map",n:"navigate",o:"open nearby",p:"pickpocket nearby",q:"quicksave",r:"ready item",s:"go down",t:"talk nearby",u:"use item",v:"view toggle",w:"go up",x:"eXit",y:"yell",z:"ztats",ArrowUp:"go up",ArrowDown:"go down",ArrowLeft:"go left",ArrowRight:"go right","+":"volume up","=":"volume up","-":"volume down","?":"see commands",F1:"see commands"},keyHelp:{e:{en:"enter/engage"},f:{en:"fight"},l:{en:"look"},o:{en:"open"},p:{en:"pickpocket"},t:{en:"talk"}}}},actions:{board:{cooldown:1},camp:{cooldown:2},cast:{cooldown:1},engage:{cooldown:0},enter:{cooldown:1},dismount:{cooldown:.6},fight:{cooldown:1},fire:{cooldown:1},get:{cooldown:.6},heal:{cooldown:2},hyperjump:{cooldown:.1},ignite:{cooldown:.6},investigate:{cooldown:2},junk:{cooldown:.8},jump:{cooldown:.1},jimmy:{cooldown:2},klimb:{cooldown:1,warmup:.9},launch:{cooldown:.1},locate:{cooldown:.1},mix:{cooldown:3},move:{cooldown:1},navigate:{cooldown:3},negate:{cooldown:.9},open:{cooldown:.5},offer:{cooldown:1},pass:{cooldown:1},pickpocket:{cooldown:.5,warmup:2},peer:{cooldown:1},plan:{cooldown:.2},push:{cooldown:1},ready:{cooldown:.9},summon:{cooldown:1},talk:{cooldown:1},transact:{cooldown:2},unlock:{cooldown:2},warmup:{cooldown:.6},yell:{cooldown:.1}}};class xe{constructor(e,t=320,s=200){var n;this.elementId=e,this.canvas=document.getElementById(e),this.ctx=(n=this.canvas)==null?void 0:n.getContext("2d"),this.width=Number(t)||320,this.height=Number(s)||200}setup(){this.canvas=document.getElementById(this.elementId),this.ctx=this.canvas.getContext("2d")}removePixelTransparency(e=200){const{ctx:t}=this;t.imageSmoothingEnabled=!1;const s=t.getImageData(0,0,this.width,this.height);for(let n=0;n<s.data.length;n+=4){const r=s.data[n+3];s.data[n+3]=r>e?255:0}t.putImageData(s,0,0)}drawLine(e,t,s,n,r="#ffffff"){const{ctx:a}=this;a.beginPath(),a.strokeStyle=r,a.lineWidth=1,a.moveTo(e+.5,t+.5),a.lineTo(s+.5,n+.5),a.stroke()}}class y extends Image{constructor(e){if(super(),!e)throw new Error("GameImage missing src param");this.src=e,this.data=null,this.isLoaded=!1}async load(){const e=new Promise((t,s)=>{try{const n=()=>t(this);super.onload=n,super.onerror=r=>{console.error(this.src,r),s(new Error(`GameImage failed to load ${this.src}`))},this.complete&&n()}catch(n){s(n)}});try{await e,this.isLoaded=!0,this.setup()}catch(t){throw this.isLoaded=!1,t}return this}setup(){this.data=this.getImageData()}async clone(){const e=new y(this.src);return await e.load(),e}cloneSync(){const e=new y(this.src);return e.load(),e}static getCanvasContext(e,t,s){const n=document.createElement("canvas");n.width=e,n.height=t;const r=n.getContext("2d");return s&&r.drawImage(s,0,0),[n,r]}getCanvasContext(e={}){const{draw:t=!0}=e;return y.getCanvasContext(this.naturalWidth||this.width,this.naturalHeight||this.height,t?this:null)}getImageData(e){return(e||this.getCanvasContext({draw:!0})[1]).getImageData(0,0,this.width,this.height)}getImageDataUri(){const[e]=this.getCanvasContext({draw:!0});return e.toDataURL("image/png")}setSourceByCanvas(e){this.src=e.toDataURL("image/png")}replaceColors(e=[],t=[]){const[s,n]=this.getCanvasContext({draw:!0}),r=this.getImageData(n);for(let a=0;a<r.data.length;a+=4)e.forEach((o,c)=>{const[l,u,h]=o,[d,m,v]=t[c];r.data[a]===l&&r.data[a+1]===u&&r.data[a+2]===h&&(r.data[a]=d,r.data[a+1]=m,r.data[a+2]=v)});n.putImageData(r,0,0),this.setSourceByCanvas(s)}replaceColor(e=[],t=[]){const[s,n]=this.getCanvasContext({draw:!0}),[r,a,o]=e,[c,l,u]=t;let h=0;const d=this.getImageData(n);for(let m=0;m<d.data.length;m+=4)d.data[m]===r&&d.data[m+1]===a&&d.data[m+2]===o&&(d.data[m]=c,d.data[m+1]=l,d.data[m+2]=u,h+=1);return n.putImageData(d,0,0),this.setSourceByCanvas(s),h}}const T=[[255,255,255],[0,0,0]],Ie=[[238,238,204],[17,17,51]],Le=0;class A extends y{constructor(e,t={},s=16){const n=typeof e=="object",r=n?(e==null?void 0:e.src)||(e==null?void 0:e.url):e;super(r);const a=(n?e==null?void 0:e.atlas:t)||[];this.atlas=[...a];const o=(n?e==null?void 0:e.size:s)||16;this.spriteSize=o,this.sprites={}}async load(){try{await super.load()}catch(e){throw console.error(e),e}}getCoordinates(e){let t=-1,s=-1;if(this.atlas.forEach((n,r)=>{if(!n.names)return;const a=n.names.findIndex(o=>e===o);a!==-1&&(s=a,t=r)}),s===-1||t===-1)throw new Error(`Sprite ${e} not found in atlas`);return[s*this.spriteSize,t*this.spriteSize]}drawImageToContext(e,t,s,n){const[r,a]=this.getCoordinates(e);t.drawImage(this,r,a,this.spriteSize,this.spriteSize,s,n,this.spriteSize,this.spriteSize)}getSubImage(e,t,s=this.spriteSize,n=this.spriteSize,r=void 0,a=void 0){if(!r||!a){const c=y.getCanvasContext(s,n);r=c[0],a=c[1]}a.drawImage(this.sheet,e,t,s,n,0,0,s,n);const o=r.toDataURL("image/png");return new y(o)}parse(){const[e,t]=y.getCanvasContext(this.spriteSize,this.spriteSize);let s=0;Object.entries(this.atlas).forEach(([n,r])=>{let a=0;r.forEach(o=>{const{y:c,names:l}=o;let u=Le;l.forEach(h=>{const d=this.getSubImage(u,c,this.spriteSize,this.spriteSize,e,t);[`sprite-${s}`,`${n}-${a}`,h].forEach(m=>{this.sprites[m]=d}),u+=this.spriteSize,s+=1,a+=1})})})}static makeColorId(e,t=T){const[s=[255,255,255],n=[0,0,0]]=t;return`${e}_${s.join(",")}_${n.join(",")}`}async loadColoredSprite(e,t=T){const s=this.makeColoredSprite(e,t);return await s.load(),s}async loadColorSpriteDataUri(e,t=T){const s=await this.loadColoredSprite(e,t);return s?s.getImageDataUri():""}makeColoredSprite(e,t=T){const[s=[255,255,255],n=[0,0,0]]=t,r=this.get(e);if(!r)throw new Error(`Unknown sprite ${e}`);const a=r.cloneSync();a.replaceColors(Ie,[s,n]);const o=A.makeColorId(e,t);return this.sprites[o]=a,a}makeColoredSpriteDataUri(e,t=T){return this.makeColoredSprite(e,t).getImageDataUri()}get(e,t){if(!t)return this.sprites[e];const s=A.makeColorId(e,t),n=this.sprites[s];return n||this.makeColoredSprite(e,t)}getDataUri(e,t){const s=this.get(e,t);return s?s.getImageDataUri():""}}class B{constructor(e,t={}){if(this.fss=e,this.cursorRow=0,this.cursorCol=0,this.offsetX=t.offsetX||0,this.offsetY=t.offsetY||0,!e)throw new Error("Missing fonts spritesheet")}static splitText(e,t){if(e.length<=t)return[e];const s=e.split(" "),n=[];let r="";return s.forEach(a=>{a.length>t&&console.warn("Word exceeds max length",a,t);const o=r?`${r} ${a}`:a;o.length>t?(n.push(r),r=a):r=o}),n.push(r),n}async setup(){await this.fss.load()}setCursor(e,t){typeof e=="number"&&(this.cursorCol=e),typeof t=="number"&&(this.cursorRow=t)}drawLetter(e,t){try{this.fss.drawImageToContext(t,e,this.cursorCol*this.fss.spriteSize+this.offsetX,this.cursorRow*this.fss.spriteSize+this.offsetY)}catch(s){console.warn("Error drawing letter",t,s)}this.cursorCol+=1}drawTextRows(e,t=[],s=void 0,n=void 0){this.setCursor(s,n);const r=this.cursorCol;t.forEach(a=>{a.split("").forEach(o=>{this.drawLetter(e,o)}),this.cursorRow+=1,this.cursorCol=r})}drawText(e,t="",s=void 0,n=void 0){if(this.setCursor(s,n),t instanceof Array){this.drawTextRows(e,t,s,n);return}t.split("").forEach(r=>{this.drawLetter(e,r)})}lineBreak(){this.cursorCol=0,this.cursorRow+=1}drawLine(e,t="",s=void 0,n=void 0){this.drawText(e,t,s,n),this.lineBreak()}}class N{constructor(e={},t=null){this.fontsSpritesheet=t,this.horizontal=e.horizontal||"left",this.vertical=e.vertical||"top",this.fontSize=e.fontSize||8,this.columns=e.columns||"max",this.rows=e.rows||4,this.offsetX=e.offsetX||0,this.offsetY=e.offsetY||0,this.inputLine=typeof e.inputLine>"u"?!0:!!e.inputLine,this.textRows=this.rows-(this.inputLine?1:0),this.cursor=e.cursor||"",this.gameCanvas=e.gameCanvas;const{offsetX:s,offsetY:n}=this;this.textCtrl=new B(t,{offsetX:s,offsetY:n}),this.log=[]}async setup(e){this.gameCanvas=e,await this.textCtrl.setup(),typeof this.columns!="number"&&(this.columns=Math.floor(this.gameCanvas.width/this.fontSize))}getColumnStart(){const e=W/this.fontSize;return this.horizontal==="right"?e-this.columns:this.horizontal==="left"?0:this.horizontal==="center"?Math.floor(e/2):Number(this.horizontal||0)}getRowBase(){var e;return this.vertical==="bottom"?Math.floor((((e=this.gameCanvas)==null?void 0:e.height)||0)/this.fontSize)-this.rows:this.vertical==="top"?0:Number(this.vertical||0)}getPrintableLines(){const e=this.cursor.length,t=" ".repeat(e),s=[];this.log.slice(-this.textRows).forEach(c=>{B.splitText(c,this.columns-e).forEach((l,u)=>{s.push(`${u===0?this.cursor:t}${l}`)})});const n=s.slice(-this.textRows),a=n.length<this.textRows?this.textRows-n.length:0;return[..." ".repeat(a).split("").map(()=>".".repeat(this.columns)),...n]}printLine(e,t=0){const s=this.getRowBase()+t,{ctx:n}=this.gameCanvas,r=e.length<this.columns?this.columns-e.length:0,a=this.getColumnStart();this.textCtrl.drawLine(n,e+" ".repeat(r),a,s)}printLines(e){(e||this.getPrintableLines()).forEach((s,n)=>this.printLine(s,n))}printCursor(){const e=this.getRowBase()+this.rows-1,{ctx:t}=this.gameCanvas;this.textCtrl.drawLine(t,this.cursor,0,e)}print(e){this.log.push(e),this.printLines(),this.printCursor()}}class C{constructor(e={}){var n,r,a,o,c,l,u,h,d,m,v,g,j,z,P;this.colors=((n=e.screen)==null?void 0:n.colors)||{white:"#ffffff",black:"#000000"},this.screenWidth=((r=e.screen)==null?void 0:r.width)||320,this.screenHeight=((a=e.screen)==null?void 0:a.height)||200,this.mapDisplayWidth=((o=e==null?void 0:e.mapDisplay)==null?void 0:o.w)||20,this.mapDisplayHeight=((c=e==null?void 0:e.mapDisplay)==null?void 0:c.h)||10,this.mapDisplayOffsetX=((l=e==null?void 0:e.mapDisplay)==null?void 0:l.offsetX)||0,this.mapDisplayOffsetY=((u=e==null?void 0:e.mapDisplay)==null?void 0:u.offsetY)||0;const t=(((d=(h=e.spritesheets)==null?void 0:h.main)==null?void 0:d.size)||16)*this.mapDisplayHeight+this.mapDisplayOffsetY,s=(((m=e.mainConsole)==null?void 0:m.columns)||10)*(((v=e.mainConsole)==null?void 0:v.fontSize)||8)+1;this.borderLines=[[0,t,this.screenWidth,t,this.colors.blue],[s,t,s,this.screenHeight,this.colors.blue]],this.screenSelector=((g=e.screen)==null?void 0:g.containerSelector)||"#wulf-screen",this.mainCanvasId=((j=e.screen)==null?void 0:j.mainCanvasId)||"wulf-main-canvas",this.gameCanvas=new xe(this.mainCanvasId,[this.screenWidth,this.screenHeight]),this.ss=new A((z=e==null?void 0:e.spritesheets)==null?void 0:z.main),this.fontsSpritesheet=new A((P=e==null?void 0:e.spritesheets)==null?void 0:P.fonts),this.mainConsole=new N(e==null?void 0:e.mainConsole,this.fontsSpritesheet),this.quickStatConsole=new N(e==null?void 0:e.quickStatConsole,this.fontsSpritesheet),this.commandConsoles=e.commandConsoles.map(de=>new N(de,this.fontsSpritesheet))}static getPrintableNumber(e,t=4){if(typeof e!="number")return"?".repeat(t);let s=String(e);return s.length>t&&(s=`${String(Math.floor(e/1e3))}k`),s.padStart(t," ")}adjustScreenSize(){const e=window.innerWidth,t=window.innerHeight,s=Math.floor(Math.min(e/this.screenWidth,t/this.screenHeight)),n=this.screenWidth*s,r=this.screenHeight*s,a=document.querySelector(this.screenSelector);a.style.width=`${n}px`,a.style.height=`${r}px`}drawSprite(e,t,s){e&&this.ss.drawImageToContext(e,this.gameCanvas.ctx,t*this.ss.spriteSize+this.mapDisplayOffsetX,s*this.ss.spriteSize+this.mapDisplayOffsetY)}drawSprites2d(e){e.forEach((t,s)=>{t.forEach((n,r)=>{this.drawSprite(n,r,s)})})}drawSpritesArray(e=[]){e.forEach(t=>{const[s,n,r]=t;this.drawSprite(s,n,r)})}drawTerrain(e){this.drawSprites2d(e.terrain.sprites,"terrain")}drawVisibleThings(e=[]){e.forEach(t=>{const[s,n,r]=t;this.drawSprite(s,n,r)})}drawParty(e){const{visibleWorldX:t,visibleWorldY:s,sprite:n}=e.avatar;this.drawSprite(n,t,s)}drawMap(e,t){this.drawTerrain(e),this.drawVisibleThings(e.items),this.drawVisibleThings(e.props),this.drawVisibleThings(e.actors),this.drawParty(t),this.borderLines.forEach(s=>{this.gameCanvas.drawLine(...s)})}drawAll(e,t){var s,n,r,a,o,c,l,u;this.drawMap(e,t),this.quickStatConsole.printLines([`H.P.:${C.getPrintableNumber((n=(s=t==null?void 0:t.avatar)==null?void 0:s.health)==null?void 0:n.hp,4)}`,`Coin:${C.getPrintableNumber((a=(r=t==null?void 0:t.avatar)==null?void 0:r.currencies)==null?void 0:a.coins,4)}`,`Food:${C.getPrintableNumber((c=(o=t==null?void 0:t.avatar)==null?void 0:o.currencies)==null?void 0:c.food,4)}`,`X.P.:${C.getPrintableNumber((u=(l=t==null?void 0:t.avatar)==null?void 0:l.experience)==null?void 0:u.totalXp,4)}`])}drawCommandColumns(e=[]){const t=this.commandConsoles.length,s=Math.ceil(e.length/t),n=e.slice(0,s),r=e.slice(s);this.commandConsoles[0].printLines(n),this.commandConsoles[1].printLines(r)}async setup(){await this.gameCanvas.setup(),this.adjustScreenSize(),await this.mainConsole.setup(this.gameCanvas),await this.quickStatConsole.setup(this.gameCanvas);const e=this.commandConsoles.map(t=>t.setup(this.gameCanvas));await Promise.allSettled(e),window.addEventListener("resize",()=>this.adjustScreenSize())}}class We{constructor(e){this.gameName=e||"MyGame"}getObject(e){const t=localStorage.getItem(`${this.gameName}_${e}`);return typeof t!="string"?null:JSON.parse(t)}setObject(e,t=null){localStorage.setItem(`${this.gameName}_${e}`,JSON.stringify(t))}loadSavesList(){return this.getObject("Saves")||[]}saveSave(e,t,s){this.setObject(`Save${e}`,s);const n=this.loadSavesList();n[e]={saveName:t},this.setObject("Saves",n)}}class Z{constructor(){this.eventListeners={}}on(e,t){let s=this.eventListeners[e];s||(this.eventListeners[e]=new Set,s=this.eventListeners[e]),s.add(t)}off(e,t){if(typeof e>"u"){this.eventListeners={};return}const s=this.eventListeners[e];if(s){if(typeof t>"u"){s.clear();return}s.delete(t)}}trigger(e,t){const s=this.eventListeners[e];s&&s.forEach(n=>n(t))}}const ee="command",te="missingCommand",se="mount",ne="unmount",D="mapping",Re=[ee,te,se,ne,D],V="keydown",H="keyup";class Ue extends Z{constructor(e={},t={}){super();const{autoMount:s=!0,triggerOnRepeat:n=!1,document:r=window.document}=t;if(this.id=Math.round(Math.random()*99999),this.triggerOnRepeat=!!n,this.mapping={},this.setMapping(e),this.document=r,!this.document.addEventListener)throw new Error("document with addEventListener is required");this.keysDown={},this.commandsDown={},this.keyDownListener=a=>this.handleKeyDown(a),this.keyUpListener=a=>this.handleKeyUp(a),this.setupEventListeners(t),this.nodeNamesDontTrigger=["TEXTAREA","INPUT"],this.nodeNamesAllowDefault=["TEXTAREA","INPUT"],s&&this.mount()}setMapping(e={}){if(typeof e!="object")throw new Error("Invalid type for mapping param");return this.mapping={...e},this.trigger(D),this.mapping}mapKey(e,t){return this.mapping[e]=t,this.trigger(D),!0}mapUnmappedKey(e,t){return this.mapping[e]?!1:this.mapKey(e,t)}unmapKey(e){return this.mapping[e]?!1:(delete this.mapping[e],this.trigger(D),!0)}mount(){this.document.addEventListener(V,this.keyDownListener),this.document.addEventListener(H,this.keyUpListener),this.trigger(se)}unmount(){this.document.removeEventListener(V,this.keyDownListener),this.document.removeEventListener(H,this.keyUpListener),this.trigger(ne)}handleKeyDown(e){const{key:t,code:s,keyCode:n,altKey:r,ctrlKey:a,shiftKey:o,metaKey:c,repeat:l}=e,u={code:s,keyCode:n,altKey:r,ctrlKey:a,shiftKey:o,metaKey:c,repeat:l},{nodeName:h}=e.target;if(this.nodeNamesDontTrigger.includes(h))return;if(this.nodeNamesAllowDefault.includes(h)||e.preventDefault(),!l){const m=this.mapping[t];this.keysDown[t]=!0,m&&(this.commandsDown[m]=!0)}(!l||this.triggerOnRepeat)&&this.triggerKey(t,u)}handleKeyUp(e){const{key:t}=e,s=this.mapping[t];this.keysDown[t]=!1,s&&(this.commandsDown[s]=!1)}setupEventListeners(e={}){Re.forEach(t=>{e[t]&&this.on(t,e[t])})}triggerCommand(e){this.trigger(ee,e)}triggerMissingCommand(e){this.trigger(te,e)}triggerKey(e){const t=this.mapping[e];t?this.triggerCommand(t):this.triggerMissingCommand(e)}getKeysMapped(){return Object.keys(this.mapping)}getCommands(){const e=new Set;return this.getKeysMapped().forEach(t=>e.add(this.mapping[t])),Array.from(e)}isKeyDown(e){return this.keysDown[e]}isCommandDown(e){return this.commandsDown[e]}getKeysDown(){return Object.keys(this.keysDown).filter(e=>this.keysDown[e])}getCommandsDown(){return Object.keys(this.commandsDown).filter(e=>this.commandsDown[e])}clearDown(){this.keysDown={},this.commandsDown={}}}class Ne{constructor(e){e||console.warn("No states param"),this.states=e||{},this.kbCommander=new Ue({},{triggerOnRepeat:!0})}setup(e="button"){document.querySelectorAll(e).forEach(t=>{t.dataset.key&&t.addEventListener("click",()=>{this.kbCommander.triggerKey(t.dataset.key)})})}on(e,t){this.kbCommander.on(e,t)}setState(e,t){var n;if(!this.states[e])throw new Error(`Unknown state ${e}`);const s=((n=this.states[e])==null?void 0:n.kb)||{};this.kbCommander.setMapping(s),this.kbCommander.off(),this.kbCommander.on("command",t),this.kbCommander.on("missingCommand",(...r)=>console.warn("Missing command",r))}}class k{constructor(e){this.allTypes={},this.allTypesArray=[],this.buildAllTypes(e)}static getExtendedType(e={},t={}){let s=e;return e.type&&(t[e.type]?s={...k.getExtendedType(t[e.type],t),...s}:console.error("Could not find type",e.type)),structuredClone(s)}getExtendedType(e={}){return k.getExtendedType(e,this.allTypes)}buildAllTypes(e){this.allTypes={},this.allTypesArray=[],Object.keys(e).sort().forEach(s=>{const n=e[s];if(this.allTypesArray[s]){console.error("Type",s,"already exists and will be skipped.");return}this.allTypes[s]=n,this.allTypesArray.push(n),n.typeKey&&n.typeKey!==s&&console.warn("Existing typeKey does not match",s,"and will be overwritten"),n.entTypeId=this.allTypesArray.length-1,n.typeKey=s}),this.allTypesArray.forEach(s=>{const n=k.getExtendedType(s,this.allTypes);this.allTypes[n.typeKey]=n,this.allTypesArray[n.entTypeId]=n}),this.allTypesArray.forEach(s=>{s.name||(s.name=s.typeKey)})}get(e){return this.allTypes[e]}getTerrainSpriteName(e){const t=this.get(e);if(!t)return console.error("Unknown terrain key",e),"";const{sprite:s,variations:n}=t;if(!n)return s;const r=n?Math.floor(Math.random()*n):"0";return`${s}-${r}`}getEntitySpriteName(e){const t=this.get(e);if(!t)return"";const{sprite:s,variations:n}=t;if(!n)return s;const r=Math.floor(Math.random()*n);return`${s}-${r}`}}function Oe(i=1,e=0){return e+Math.random()*(i-e)}function $e(i,e=0){return Math.floor(Oe(i,e))}function x(i,e=0){const t=Math.max(i,e)+1;return $e(t,Math.min(i,e))}function qe(i,e,t,s){return(i-t)**2+(e-s)**2}function re(i,e,t,s){return qe(i,e,t,s)**.5}const ie=i=>new Promise(e=>{setTimeout(e,i)}),G=i=>i.charAt(0).toUpperCase()+i.slice(1);function Ye(i,e){!i.currencies||!e.currencies||Object.entries(i.currencies).forEach(([t,s])=>{e.currencies[t]=(e.currencies[t]||0)+s,i.currencies[t]=0})}function Ke(i){i.currencies&&Object.entries(i.currencies).forEach(([e,t])=>{t instanceof Array&&(i.currencies[e]=x(t[0]||0,t[1]||0))})}class Xe{constructor(e){this.entityTypes=e,this.all=[],this.nextEntId=this.all.length}add(e={}){const t=this.entityTypes.getExtendedType(e),s=structuredClone(t);Ke(s),this.all.push({...s,entId:this.nextEntId}),this.nextEntId+=1}addActor(e){const{whoId:t=`actor-ent-${this.nextEntId}`}=e;if(this.getActor(t))throw new Error(`Already have an actor with whoId ${t}`);this.add({...e,whoId:t,isActor:!0})}addAvatar(e){this.addActor({...e,type:"avatar",isAvatar:!0})}allAllFromMaps(e){e.reduce((s,n)=>[...s,...n.getEntities()],[]).forEach(s=>{const n=this.entityTypes.getExtendedType(s);n.isActor?this.addActor(n):this.add(n)}),console.log("All Entities",this.all)}getActor(e){return this.all.find(t=>t.whoId===e)}getAvatars(){return this.all.filter(e=>e.isAvatar)}getActors(){return this.all.filter(e=>e.isActor)}getAvatarMapIds(){const e=new Set;return this.getAvatars().forEach(t=>e.add(t.mapId)),[...e]}getActorsOnMap(e){return this.all.filter(t=>t.isActor&&t.mapId===e)}getEntitiesOnMap(e){return this.all.filter(t=>t.mapId===e)}getEntitiesOnMapRange(e,t=0,s=0,n=10,r=10){const a=t+n,o=s+r;return this.all.filter(c=>c.mapId===e&&c.x>=t&&c.x<a&&c.y>=s&&c.y<o)}}class I{constructor(e,t={},s=null){if(!e||typeof e!="object")throw new Error("Missing mapData object");this.mapKey=e.mapKey,this.id=e.id,this.globalLegend=Object.freeze(structuredClone(t)),this.entityTypes=s,this.base=Object.freeze(structuredClone(e)),this.time=0,this.exits=I.makeExits(this.base.exits),this.height=this.base.map.length,this.width=this.base.map.reduce((n,r)=>Math.max(n,r.length),0),this.maxX=this.width-1,this.maxY=this.height-1}static makeMaps(e={},t={},s={},n=null){const r=[];return Object.keys(e).sort().forEach(o=>{const c=r.length,l=e[o],u=s[l==null?void 0:l.mapType]||null,h=new I({...u,...l,mapKey:o,id:c},t,n);r.push(h)}),r}static makeExits(e={}){return{left:e.left||e.edges||"BLOCK",right:e.right||e.edges||"BLOCK",top:e.top||e.edges||"BLOCK",bottom:e.bottom||e.edges||"BLOCK",up:e.up||"BLOCK",down:e.down||"BLOCK"}}getEntities(){const e=this.id,{map:t,legend:s}=this.getData(),n=Object.keys(s).filter(o=>s[o].length>1),r=n.reduce((o,c)=>{const l=s[c].slice(1).map(u=>typeof u=="string"?{type:u}:u);return{...o,[c]:l}},{}),a=[];return t.forEach((o,c)=>{o.split("").forEach((l,u)=>{n.includes(l)&&r[l].forEach((h,d)=>{a.push({...structuredClone(h),mapId:e,x:u,y:c,origin:{mapId:e,x:u,y:c,legendIndex:d}})})})}),a}isOffEdge(e,t){return e<0||e>this.maxX||t<0||t>this.maxY}getOffEdge(e,t){return e<0?"left":e>this.maxX?"right":t<0?"top":t>this.maxY?"bottom":!1}getData(){const e={...this.globalLegend,...this.base.legend};return{...this.base,legend:e}}getName(){return this.getData().name||this.mapKey}getOverflowEntityType(){var e;return((e=this.getData())==null?void 0:e.overflow)||"void"}getExit(e){return this.exits[e]||"BLOCK"}getLoopedCoordinates(e,t){return[e>0?e%this.width:(e%this.width+this.width)%this.width,t>0?t%this.height:(t%this.height+this.height)%this.height]}getCellData(e,t){const{map:s,legend:n}=this.getData();if(e<0||t<0||s[t]===void 0||s[t][e]===void 0)return null;const r=s[t][e],a=n[r];return a||(console.warn("Missing",r,"at",e,t,s[t]),null)}getTopProperty(e,t,s){const n=this.getCellData(t,s);let r;for(let a=n.length-1;a>=0;a-=1)if(r=n[a],typeof r=="object"&&r[e]!==void 0)return r[e];return null}getTopEntityType(e,t){const s=this.getCellData(e,t);if(!s)return null;if(s.length===0)return this.getOverflowEntityType();const n=s[s.length-1];return typeof n=="string"?n:n.entityTypeKey||n.entityType||n.type||this.getOverflowEntityType()}getTerrainTypeKey(e,t){const s=this.getCellData(e,t);if(!s)return this.getOverflowEntityType();const[n]=s;return n}getTerrainEntity(e,t){const s=this.getTerrainTypeKey(e,t);return this.entityTypes.getExtendedType({type:s})}getEntranceCoordinates(){let[e=0,t=0]=this.getData().entrance||[];return e==="center"?e=Math.floor(this.width/2):e==="left"?e=0:e==="right"&&(e=this.maxX),t==="bottom"?t=this.maxY:t==="top"?t=0:t==="center"&&(t=Math.floor(this.height/2)),[Math.round(e),Math.round(t)]}}class je{constructor(e){this.queue=[],e.forEach(t=>this.add(t)),this.sort(),this.time=0}add(e){if(!e.action){console.warn("Actor does not have action component so cannot be added to schedule",e);return}this.queue.push(e),this.sort()}sort(){this.queue.sort((e,t)=>e.action.cooldown===t.action.cooldown?e.isAvatar?-1:0:e.action.cooldown-t.action.cooldown)}top(){return this.queue[0]}coolToTop(){const e=this.top(),[t,s,n]=e.action,r=n-this.time;return this.time=n,e.action.isWarmingUp=0,{whoId:t,isWarmingUp:s,deltaT:r}}}const _=1,O="readwrite",ze="readonly",S=5e3,{indexedDB:$,setTimeout:Pe,clearTimeout:Q,URL:Fe,open:Be}=window,f=class f{constructor(e,t,s=null){this.dbName=e||null,this.version=t||_,this.db=s||null,this.timeout=S}static async openDatabase(e,t=_,s,n){return new Promise((r,a)=>{const o=(l,u)=>{var h,d;console.error(l,(d=(h=u==null?void 0:u.target)==null?void 0:h.error)==null?void 0:d.message,u),a(new Error(`open database failed ${l}`))},c=$.open(e,t);c.onsuccess=l=>{var h;const u=(h=l==null?void 0:l.target)==null?void 0:h.result;n&&n(u,l),r(u)},c.onupgradeneeded=l=>{var h;const u=(h=l==null?void 0:l.target)==null?void 0:h.result;s&&s(u,l)},c.onerror=l=>o("error",l),c.onabort=l=>o("abort",l),c.onclose=l=>o("close",l)})}static openBlob(e){Be(Fe.createObjectURL(e))}static makeTimedPromise(e,t="",s=S){return new Promise((n,r)=>{const a=Pe(()=>r(new Error(`Timed out ${t}`)),s);e((...l)=>{Q(a),n(...l)},(l,...u)=>{Q(a),console.error(l,u),r(new Error(`${l} ${t||""}`))})})}static waitForTransaction(e,t="",s=S){return f.makeTimedPromise((n,r)=>{e.oncomplete=a=>n(a),e.onerror=a=>r("error",a,e),e.onabort=a=>r("abort",a,e)},`transaction ${t}`,s)}static waitForRequest(e,t="",s=S){return f.makeTimedPromise((n,r)=>{e.onsuccess=a=>n(a.target.result),e.onerror=a=>r("error",a,e),e.onabort=a=>r("abort",a,e),e.onclose=a=>r("close",a,e)},`request ${t}`,s)}static waitForCursorValueRequest(e,t="",s=S){return f.makeTimedPromise((n,r)=>{const a=[];e.onsuccess=o=>{const c=o.target.result;if(c){a.push(c.value),c.continue();return}n(a)},e.onerror=o=>r("error",o,e)},`cursor request ${t}`,s)}async waitForRequest(e,t=""){return await f.waitForRequest(e,t,this.timeout),e}handleError(e,...t){console.error("SIDB Error:",e,...t)}async getDatabases(){return await $.databases()}getDatabaseName(){if(!this.db)throw new Error("db is missing");return this.db.name}getObjectStoreNames(){return this.db.objectStoreNames}hasObjectStoreName(e){return this.getObjectStoreNames().contains(e)}getTransaction(e,t=O){if(!this.db)throw new Error("db is missing");return this.db.transaction(e,t)}getObjectStore(e,t=O){return this.getTransaction(e,t).objectStore(e)}async addToObjectStore(e,t,s){const n=this.getObjectStore(e).add(t);return await this.waitForRequest(n,s||`add to ${e}`),n}async putToObjectStore(e,t,s){const n=this.getObjectStore(e).put(t);return await this.waitForRequest(n,s||`put to ${e}`),n}async deleteFromObjectStore(e,t,s){const n=this.getObjectStore(e).delete(t);return await this.waitForRequest(n,s||`delete ${t}`),n}async getFromObjectStore(e,t,s){const n=this.getObjectStore(e).get(t);return await this.waitForRequest(n,s||`get ${t}`),n}async readIndexCursorValues(e,t){const n=this.getObjectStore(e).openCursor();return await f.waitForCursorValueRequest(n)}setDatabase(e){this.db=e,e.onabort=(...t)=>this.handleError("abort",t),e.onclose=(...t)=>this.handleError("close",t),e.onerror=(...t)=>this.handleError("error",t),e.onversionchange=(...t)=>{console.warn("versionchange",t)}}close(){this.db&&(this.db.close(),this.db=null)}async delete(){this.close();const e=$.deleteDatabase(this.dbName);await f.waitForRequest(e,"delete")}async open(){this.close();const e=await f.openDatabase(this.dbName,version);return this.setDatabase(e),this.db}async create(e=()=>{}){await this.delete();const t=await f.openDatabase(this.dbName,this.version,e);return this.setDatabase(t),this.db}async upgrade(e=()=>{}){this.version+=1,this.close();const t=await f.openDatabase(this.dbName,this.version,e);return this.setDatabase(t),this.db}async createObjectStore(e,t){let s;return await this.upgrade(n=>{s=n.createObjectStore(e,t)}),s}async deleteObjectStore(e,t){let s;return await this.upgrade(n=>{s=n.deleteObjectStore(e,t)}),s}};R(f,"READ_WRITE",O),R(f,"READ_ONLY",ze);let q=f;class Ve{constructor(){this.db=new q("worldSaves",1),this.tableName="test-save"}async setup(){await this.db.create(e=>{e.createObjectStore(this.tableName,{keyPath:"path"})})}async saveWorld(e,t){console.log("Saving world"),await this.db.addToObjectStore(this.tableName,{path:1,test:123,saveName:t})}}function M(i={}){let{success:e=null,message:t=""}=i;const{followUp:s=null,cooldownMultiplier:n=1,quiet:r=!1}=i;return i instanceof Array&&([e,t]=i),{success:e,message:t,followUp:s,cooldownMultiplier:n,quiet:r}}function ae(i,e,t){return i.filter(s=>s.x===e&&s.y===t)}function oe(i,e){return ae(i,e.x,e.y).filter(t=>t.entId!==e.entId)}function X(i,e,t){const s=E[t];if(!s)return[];const n=e.x+s[0],r=e.y+s[1];return ae(i,n,r)}function le(i=[],e=""){const t=i.filter(s=>s[e]);return t.length?t[0][e]:null}function He(i=[],e=0,t=0,s=null){let n=1/0,r=null;return i.forEach(a=>{if(s&&!s(a))return;const o=re(a.x,a.y,e,t);o<n&&(n=o,r=a)}),[r,n]}function Ge(i,e){return re(i.x,i.y,e.x,e.y)}function _e(i,e){const t=e.x-i.x,s=e.y-i.y;return t===0&&s===0?(console.warn("Could not give a direction between",i,e),""):Math.abs(t)>Math.abs(s)?t<0?"left":"right":s<0?"up":"down"}function Qe(i,e){return(typeof i.speed=="number"?i.speed:1)*(typeof e.speed=="number"?e.speed:1)}function Je(i,e){const t=(i==null?void 0:i.factions)||{},s=(e==null?void 0:e.factions)||{},n=[...Object.keys(t),...Object.keys(s)];return[...new Set(n)].reduce((o,c)=>{const l=t[c]||0,u=s[c]||0;return l===0||u===0?o:Math.sign(l)===Math.sign(u)?o+Math.min(Math.abs(l),Math.abs(u))*2:o-Math.abs(l-u)},0)}function ce(i){let e=0;return typeof i=="object"?e=x(i[0],i[1]):typeof i=="number"&&(e=i),Number.isNaN(e)?(console.error(i,"-->",e),0):e}function Ze(i,e,t){const s=ce(e);return i.health.hp-=s,console.log("	",i.name,"took",s,"damage. HP:",i.health.hp,t),[s,i.health.hp]}function et(i=[],e=0,t=""){const s=ce(e),n=i.filter(c=>c.health),r=Math.floor(s/n.length),a=s-r*n.length;return n.map((c,l)=>Ze(c,l===0?r+a:r,t))}function tt(i){var e;return!i.firer||!i.firer.natural?0:((e=i==null?void 0:i.firer)==null?void 0:e.range)||0}function w(i){var e,t;return((e=i==null?void 0:i.health)==null?void 0:e.hp)&&((t=i==null?void 0:i.health)==null?void 0:t.hp)>0}function st(i,e){Ye(e,i)}function nt(i,e=0){i.experience&&(i.experience.totalXp+=e)}function rt(i,e){!i.experience||!e.experience||e.experience.killXp&&nt(i,e.experience.killXp)}function it(i){var a,o;if(!i.attacker)return[0,""];const e=((a=i.attacker)==null?void 0:a.natural.damage)||0,t=typeof e=="number"?e:e[1]||0,s=0,n="";return t>0?[e,((o=i.attacker)==null?void 0:o.natural.damageType)||""]:[s,n]}function at(i){var e;return((e=i==null?void 0:i.attacker)==null?void 0:e.range)||0}function ot(i,e,t,s){let n=X(t,i,s);if(!n.length)return[!0,`No one to fight (${s}).`];if(n=n.filter(d=>w(d)),!n.length)return[!0,`No effect! (fight ${s})`];const[r,a]=it(i),l=et(n,r,a).map(d=>d[0]).join(",");let u=0;n.forEach(d=>{w(d)||(u+=1,st(i,d),rt(i,d))});let h="";return u===1?h=` and kill ${n[0].name}`:u>1&&(h=` and kill ${u} enemies`),[!0,`Attack for ${l} damage${h}`]}function lt(i,e,t){if(!i.enterer)return[!1,"You cannot enter."];const s=le(oe(t,i),"enter");if(!s){const r=this.klimb(i,e,t),{success:a}=M(r);return a?r:[!1,"There is nothing to enter."]}if(!s.mapKey)return[!1,"Error entering!"];const n=[s.mapKey];return{success:!0,message:"You enter a new location.",followUp:["moveActorMap",i,n]}}function ct(i){var e;return(((e=i==null?void 0:i.currencies)==null?void 0:e.food)||0)>0}function ut(i){return(i==null?void 0:i.eater)&&!ct(i)}function ue(i,e){var n,r,a;if(!((n=i==null?void 0:i.currencies)!=null&&n.food)||!((r=i==null?void 0:i.eater)!=null&&r.moveMeal))return!1;const{moveMealMultiplier:t=1}=e.base,s=(((a=i==null?void 0:i.eater)==null?void 0:a.moveMeal)||0)*t;return i.currencies.food=Math.max(0,i.currencies.food-s),!0}function Y(i,e){var t;if(i.isAvatar&&i.mover&&(i.mover.movesCount=(i.movesCount||0)+1),ue(i,e),typeof((t=i==null?void 0:i.experience)==null?void 0:t.totalXp)=="number"){const{moveXpMultiplier:s=0}=e.base;i.experience.totalXp+=1*s}}function ht(i,e,t,s,n,r){if(!i.exitor)return[!1,"You cannot exit."];const a=e.getExit(t);if(a instanceof Array)return Y(i,e),{success:!0,message:`You leave ${e.getName()}.`,followUp:["moveActorMap",i,a]};if(a==="BLOCK")return[!1,`Blocked ${r}.`];if(a==="LOOP"){const[o,c]=e.getLoopedCoordinates(s,n);return i.x=o,i.y=c,Y(i,e),[!0,`You move ${r}`]}return[!1,"You cannot move."]}function dt(i,e,t,s){const{mover:n}=i;if(!n)return[!1,"You cannot move"];const r=E[s];if(!r)return[!1,"Invalid direction to move"];const a=i.x+r[0],o=i.y+r[1],c=e.getOffEdge(a,o);if(c)return ht(i,e,c,a,o,s);const h=[e.getTerrainEntity(a,o).obstacleId,...t.filter(g=>g.x===a&&g.y===o).filter(g=>!g.isActor||w(g)).map(g=>g.obstacleId)].map(g=>(n==null?void 0:n.transversal[g])||0),d=Math.min(...h);if(!d)return[!1,`Blocked ${s}.`];i.x=a,i.y=o,Y(i,e);const v=1/d*(ut(i)?2:1);return{success:!0,message:`You move ${s}.`,cooldownMultiplier:v}}function mt(i,e){return ue(i,e),[!0,"You wait a moment."]}function pt(i,e,t,s,n){const r=n.runAction("transact",i,e,t,s);return r.success?r:[!1,`Talk ${s} not yet implemented.`]}function ft(i,e,t,s){const n=X(t,i,s).filter(a=>w(a));if(!n.length)return[!0,`No one to transact (${s}).`];const r=n[0];return!r.seller&&!r.buyer?[!0,`${r.name} does not buy or sell.`]:[!0,"Buy/sell not implemented"]}const gt=100;function wt(i,e,t){return[!1,"Not yet implemented."]}function yt(i,e,t){return[!1,"Not yet implemented."]}function bt(i,e,t){return[!1,"Not yet implemented."]}function vt(i,e,t){return this.enter(i,e,t)}function Ct(i,e,t){return[!1,"Not yet implemented."]}function Et(i,e,t,s){return X(t,i,s).filter(r=>r.health).length?this.attack(i,e,t,s):this.fire(i,e,t,s)}function Tt(i,e,t,s){return[!1,"Firing not yet implemented."]}function St(i,e,t){return[!1,"Not yet implemented."]}function kt(i,e,t){return[!1,"Not yet implemented."]}function At(i,e,t){return[!1,"Without precise calculations you could fly right through a star!"]}function Dt(i,e,t){return[!1,"Torches not yet implemented."]}function Mt(i,e,t){return[!1,"Not yet implemented."]}function xt(i,e,t){return[!1,"Junk not yet implemented."]}function It(i,e,t){return[!0,"You jump. Wee!"]}function Lt(i,e,t){return[!1,"Jimmy not yet implemented."]}function Wt(i,e,t,s){if(!i.klimber)return[!1,"You cannot climb."];const n=le(oe(t,i),"klimbable");if(!n)return[!1,"There is nothing to climb here."];const{direction:r}=n;if(s&&r!==s)return[!1,`Cannot climb ${s} here.`];const a=e.getExit(r);return a?{success:!0,message:`You climb ${r}.`,cooldownMultiplier:Qe(i.klimber,n),followUp:["moveActorMap",i,a,!0]}:[!1,"Cannot exit the area."]}function Rt(i,e,t){return[!0,"You pretend to be a rocket. Wee!"]}function Ut(i,e,t){return[!1,"Not yet implemented."]}function Nt(i,e,t,s){return[!0,"You do not have a mortar and pestle."]}function Ot(i,e,t){return[!1,"Not yet implemented."]}function $t(i,e,t){return[!0,"You have no powers of negation yet."]}function qt(i,e,t,s){return[!1,"Not yet implemented."]}function Yt(i,e,t){return[!1,"Not yet implemented."]}function Kt(i,e,t,s){return[!1,"Not yet implemented."]}function Xt(i,e,t){return[!1,"Not yet implemented."]}function jt(i,e,t){if(!i.plan)return p.enqueueWithoutWarmup(i,"pass"),{success:!1,quiet:!0,message:"No thinking."};const{randomMove:s=.5,aggroRange:n=0,hunt:r=!1}=i.plan;if(r){const[a,o]=He(t,i.x,i.y,c=>!(!c.isActor||i.whoId===c.whoId||Ge(c,i)>n||Je(c,i)>=0));if(a){const c=_e(i,a);if(c){const l=at(i),u=tt(i),h=o<=l||o<=u?"fight":"move";return p.enqueueWithoutWarmup(i,h,c),[!0,`Planning the hunt (${h})`]}}}if(Math.random()<s){const a=Math.floor(Math.random()*4)+1;p.enqueueWithoutWarmup(i,"move",we[a])}else p.enqueueWithoutWarmup(i,"pass");return{success:!0,message:"Plan success",quiet:!0}}function zt(i,e,t,s){return[!1,"Not yet implemented."]}function Pt(i,e,t,s){return[!1,"Not yet implemented."]}function Ft(i,e,t){return[!1,"Not yet implemented."]}function Bt(i,e,t,s){return[!1,"Not yet implemented."]}function Vt(i,e,t,s){return{success:!0,message:`You prepare to ${s}.`,quiet:!0}}function Ht(i,e,t){return[!0,"You yell loudly."]}const K={attack:ot,board:wt,camp:yt,cast:bt,engage:vt,enter:lt,dismount:Ct,fight:Et,fire:Tt,get:St,heal:kt,hyperjump:At,ignite:Dt,investigate:Mt,junk:xt,jump:It,jimmy:Lt,klimb:Wt,launch:Rt,locate:Ut,mix:Nt,move:dt,navigate:Ot,negate:$t,open:qt,offer:Yt,pass:mt,pickpocket:Kt,peer:Xt,plan:jt,push:zt,ready:Pt,summon:Ft,talk:pt,transact:ft,unlock:Bt,warmup:Vt,yell:Ht},Gt=Object.keys(K);class p{constructor(e={},t={}){this.actionsConfig=structuredClone(e);const{actionCooldown:s=fe,actionCooldownRandom:n=0,actionWarmup:r=ge,actionWarmupRandom:a=0}=t;this.actionCooldown=s,this.actionCooldownRandom=n,this.actionWarmup=r,this.actionWarmupRandom=a}static has(e){return Gt.includes(e.toLowerCase())}static hasAction(e){return e.action?e.action.queue&&e.action.queue.length:!1}static hasReadyAction(e,t){return p.hasAction(e)?e.action.cooldown<=t:!1}static isWaitingForAction(e,t){return!p.hasAction(e)&&e.action.cooldown<=t}static handleDeadActor(e){w(e)||(e.action.queue=[["pass"]],e.action.cooldown+=gt)}static enqueueWithoutWarmup(e,t,s){e.action.queue.push([t,s])}enqueue(e,t,s){this.getWarmupTime(t)&&e.action.queue.push(["warmup",t]),e.action.queue.push([t,s])}enqueuePlan(e){if(!w(e)){p.handleDeadActor(e);return}this.enqueue(e,"plan")}runAction(e,t,s,n,r){if(!e)throw new Error("Missing actionName");if(!K[e])throw new Error(`Invalid actionName ${e}`);const a=K[e](t,s,n,r,this);return M(a)}perform(e,t,s,n){if(!p.hasReadyAction(e,n))return M([!1,"No ready actions."]);const{action:r}=e,a=r.queue.shift(),[o,c=""]=a;if(!w(e)&&o!=="pass")return p.handleDeadActor(e),M([!1,`Cannot ${o} while dead`]);const l=this.runAction(o,e,t,s,c),{success:u,cooldownMultiplier:h}=l;if(u){const d=Math.max(Math.round(this.getCooldownTime(o,c)*h),1);r.cooldown=Math.ceil(n+d)}return l}getWarmupTime(e){var t;return(((t=this.actionsConfig[e])==null?void 0:t.warmup)||0)*(this.actionWarmup+x(this.actionWarmupRandom))}getCooldownTime(e,t){var s;return e==="warmup"?this.getWarmupTime(t):(((s=this.actionsConfig[e])==null?void 0:s.cooldown)||0)*(this.actionCooldown+x(this.actionCooldownRandom))}}class _t{constructor(e={},t={},s=null){this.worldComm=s,this.entityTypes=new k(e==null?void 0:e.entityTypes),this.actions=new p(t,e==null?void 0:e.timing),this.time=0,this.maps=I.makeMaps((e==null?void 0:e.maps)||{},e==null?void 0:e.globalLegend,e==null?void 0:e.mapTypes,this.entityTypes),this.connections={},this.ents=new Xe(this.entityTypes),this.schedulerQueues={},this.worldLog=[],this.deltas=[],this.maxDeltas=99,this.ents.allAllFromMaps(this.maps),this.saveLoadManager=new Ve}async load(){const e=this.maps.findIndex(t=>t.mapKey==="overworld");this.ents.addAvatar({type:"avatar",whoId:"my-avatar-1",mapId:e,x:10,y:6,stats:{}}),this.time=100,this.maps.forEach(t=>{t.time=this.time}),this.ents.getActors().forEach(t=>{t.action.cooldown=this.time}),this.updateAllClients(),await this.saveLoadManager.setup(),this.save()}async save(){await this.saveLoadManager.saveWorld(this,"test-save")}connect(e,t={}){this.connections[e]={visibleWorldHeight:3,visibleWorldWidth:3,...t,commandQueue:[]}}getActor(e){const t=this.ents.getActor(e);return t||console.warn("Could not find",e),t}getActorMapId(e){return this.getActor(e).mapId}getActorMap(e){return this.getMap(this.getActorMapId(e))}getMap(e){return typeof e=="number"?this.maps[e]:this.maps.find(t=>t.mapKey===e)}getMapData(e){var t;return((t=this.maps[e])==null?void 0:t.getData())||{}}getTerrainSpriteAt(e,t,s){const r=this.getMap(e).getTerrainTypeKey(t,s);return this.entityTypes.getTerrainSpriteName(r)}getEntitySpriteAt(e,t,s){const r=this.ents.getEntitiesOnMap(e.id).find(a=>a.x===t&&a.y===s);return r?r.sprite:""}getTerrainSprites(e,t=0,s=0,n=10,r=10){const a=[];for(let o=0;o<r;o+=1){a[o]||(a[o]=[]);for(let c=0;c<n;c+=1)a[o][c]=this.getTerrainSpriteAt(e,t+c,s+o)}return a}getPropsSprites(e,t=0,s=0,n=10,r=10){const a=this.getMap(e),o=[];for(let c=0;c<r;c+=1){o[c]||(o[c]=[]);for(let l=0;l<n;l+=1)o[c][l]=this.getEntitySpriteAt(a,t+l,s+c)}return o}makeVisibleThing(e,t,s){return[e.sprite,e.x-t,e.y-s]}async getParty(e){const{centerVisibleWorldX:t,centerVisibleWorldY:s}=this.getVisibleWorldDimensions(e),n=this.getActor(e);return{avatar:{...n,sprite:w(n)?n.sprite:n.deadSprite,visibleWorldX:t,visibleWorldY:s}}}getVisibleWorldDimensions(e){const t=this.connections[e],{visibleWorldHeight:s,visibleWorldWidth:n}=t,r=this.getActor(e),a=Math.floor(n/2),o=Math.floor(s/2),c=r.x,l=r.y,u=c-a,h=l-o;return{w:n,h:s,centerVisibleWorldX:a,centerVisibleWorldY:o,centerWorldX:c,centerWorldY:l,worldLeftX:u,worldTopY:h}}async getVisibleWorld(e){if(!e)throw new Error("Need a whoId for getting visible world");const{w:t,h:s,worldLeftX:n,worldTopY:r}=this.getVisibleWorldDimensions(e),a=this.getActorMapId(e),o=this.ents.getEntitiesOnMapRange(a,n,r,t,s);return{terrain:{sprites:this.getTerrainSprites(a,n,r,t,s)},props:o.filter(l=>l.isProp||l.isDestination).map(l=>this.makeVisibleThing(l,n,r)),items:o.filter(l=>l.isItem).map(l=>this.makeVisibleThing(l,n,r)),actors:o.filter(l=>l.isActor&&l.whoId!==e).map(l=>{const u=this.makeVisibleThing(l,n,r);return w(l)?u:[l.deadSprite,u[1],u[2]]})}}updateAllClients(){Object.keys(this.connections).forEach(e=>this.updateClient(e))}async updateClient(e){const t=await this.getVisibleWorld(e),s=await this.getParty(e);this.worldComm.sendDataToClient({visibleWorld:t,party:s,deltas:this.deltas})}async performAction(e,t){const{mapId:s,whoId:n}=e;if(!p.hasReadyAction(e,t))return null;const r=this.getMap(s),a=this.ents.getEntitiesOnMap(s),{success:o,message:c,followUp:l,quiet:u}=this.actions.perform(e,r,a,t);return l&&this[l[0]](...l.slice(1)),this.connections[n]&&await this.updateClient(n),{mapId:s,mapTime:t,success:o,message:c,quiet:u,whoId:n,worldTime:this.time}}getSimMapIds(){return this.ents.getAvatarMapIds()}async sim(e=1){this.time+=e;let t=0;const s=this.getSimMapIds();for(let n=0;n<s.length;n+=1){const r=s[n],a=this.getMap(r);let o=!1,c;for(;a.time<this.time&&!o;)c=this.time-a.time,o=await this.simMap(r,c);o&&(t+=1)}t?this.updateAllClients():(await ie(10),this.sim(e))}async simMap(e,t){if(t<0)throw new Error("Invalid time step");t>1&&console.log("Simulating map",t,"steps to get to",this.time);const s=this.getMap(e);s.time=Math.min(this.time,s.time+t);const n=this.ents.getActorsOnMap(e);this.schedulerQueues[e]||(this.schedulerQueues[e]=new je(n));const r=this.schedulerQueues[e],a=r.top();if(p.isWaitingForAction(a,s.time)){if(a.isAvatar)return console.log("Map Sim",s.time,"Top actor is avatar and has nothing to do."),!0;this.actions.enqueuePlan(a)}const o=await this.performAction(a,s.time);return o&&(o.quiet||(this.deltas.push(o),this.deltas.length>this.maxDeltas&&this.deltas.splice(0,this.deltas.length-this.maxDeltas))),r.sort(),!1}moveActorMap(e,t=[],s=!1){const[n,r,a]=t,o=this.getMap(n);if(e.mapId=o.id,s){typeof r=="number"&&typeof a=="number"?(e.x+=r,e.y+=a):console.error("invalid coordinates");return}if(typeof r=="number"&&typeof a=="number")e.x=r,e.y=a;else{const[c,l]=o.getEntranceCoordinates();e.x=c,e.y=l}}ping(){return[!0,"ping"]}async runCommand(e,t){const s=e instanceof Array?[...e]:String(e).toLowerCase().split(" "),r={hole:"camp",inform:"investigate",search:"investigate",steal:"pickpocket",wear:"ready",equip:"ready",exit:"dismount",mount:"board",stats:"ztats",go:"move"}[s[0]];r&&(s[0]=r);const a=s[0],o=["chat","descend","exit","karma","look","map","navigate","party","ping","quicksave","quit","view","zstats"],c=s.slice(1),l=this.getActor(t);if(this[a]){if(!o.includes(a))return{success:!1,message:`Command not allowed '${a}'`};const[u,h]=await this[a](l,...c);return this.sim(),{success:u,message:h}}return p.has(a)?l.action?(console.log("World enqueue action:",a,c),this.actions.enqueue(l,a,c.join(" ")),this.sim(),{success:!0,message:"Action queued"}):{success:!1,message:`${t} cannot do actions.`}:(console.error("Invalid command",a),{success:!1,message:`Invalid command '${a}'`})}}class Qt extends Z{constructor(e={}){super(),this.localWorld=null,this.visibleWorldHeight=0,this.visibleWorldWidth=0,e.world&&this.startLocalWorld(e.world,e.actions)}async startLocalWorld(e,t){this.localWorld=new _t(e,t,this),window.world=this.localWorld,await this.localWorld.load()}async connect(e,t,s){this.localWorld.connect(e,{visibleWorldHeight:s,visibleWorldWidth:t})}async load(){}async sendCommandToWorld(e,t){if(!e)return console.warn("Cannot send a blank command"),[];if(!t)throw new Error("Must send a command on behalf of a user (whoId missing)");const s=await this.localWorld.runCommand(e,t),n=await this.localWorld.getVisibleWorld(t),r=await this.localWorld.getParty(t);return[s,n,r]}async sendDataToClient(e){this.trigger("data",e)}}function Jt(i=0,e=0){return i!==0&&e!==0?null:Object.keys(E).find(t=>E[t][0]===Math.sign(i)&&E[t][1]===Math.sign(e))}class L{constructor(e={}){var t,s;this.states=e.states||{},this.inputCtrl=new Ne(this.states),this.screen=new C(e),this.gameStorage=new We(e.gameName||"WULF"),this.worldComm=new Qt({world:e.world,actions:e.actions}),this.commandIndex=0,this.mapFocus=[0,0],this.mapDisplaySizeX=(t=e==null?void 0:e.mapDisplay)==null?void 0:t.w,this.mapDisplaySizeY=(s=e==null?void 0:e.mapDisplay)==null?void 0:s.h,this.visibleWorld={},this.party={},this.avatarWhoId=null,this.renderWorldTime=0,this.volume=5,this.settings=structuredClone(e.settings)}static waitForDom(){return new Promise(e=>{window.addEventListener("DOMContentLoaded",()=>e())})}async loadGame(){this.avatarWhoId="my-avatar-1",this.worldComm.load()}async sendWorldCommand(e){const[t,s,n]=await this.worldComm.sendCommandToWorld(e,this.avatarWhoId);return this.handleIncomingData({visibleWorld:s,party:n}),t}refocus(){var e,t;this.mapFocus[0]=((e=this.party)==null?void 0:e.avatar.visibleWorldX)||0,this.mapFocus[1]=((t=this.party)==null?void 0:t.avatar.visibleWorldY)||0}switchToAskDirection(e){const t=e.findIndex(s=>s==="direction");this.screen.mainConsole.print(`${G(e[0])} Direction?`),this.inputCtrl.setState("direction",s=>{if(s==="abort"){this.switchToTravel(),this.mainConsole.print("Cancel");return}const n=[...e];n[t]=s,this.screen.mainConsole.print(G(s)),this.switchToTravel(),this.executeCommand(n.join(" "))})}switchToTravel(){this.drawMap(),this.inputCtrl.setState("travel",e=>this.executeCommand(e))}switchTo(e){if(e==="travel"){this.switchToTravel();return}if(e==="direction"){this.switchToAskDirection();return}if(e==="commands"){this.inputCtrl.setState("commands",t=>{var r;if(t==="abort"){this.switchTo("travel");return}const s=this.getStateKeyCommands("travel");if(t==="execute"){this.switchTo("travel");const a=(r=s[this.commandIndex])==null?void 0:r.command;this.executeCommand(a);return}const n=s.length;t==="next"?this.commandIndex=(this.commandIndex+1)%n:t==="previous"&&(this.commandIndex=(n+this.commandIndex-1)%n),this.drawKeyCommandsScreen("travel")}),this.drawKeyCommandsScreen("travel");return}console.warn("Unknown state",e)}async executeCommand(e){await ie(10),console.log("		Client Command:",e);const t={vol:"volume"},s={volume:o=>{let c=0;o==="up"?c=1:o==="down"&&(c=-1),this.volume=Math.min(Math.max(this.volume+c,ye),be),this.screen.mainConsole.print(`Volume: ${this.volume}`)},switch:o=>this.switchTo(o),see:o=>this.switchTo(o),abort:()=>{this.switchToTravel()},view:()=>{},chat:()=>{}},n=String(e).toLowerCase().split(" "),r=t[n[0]];r&&(n[0]=r);const a=s[n[0]];if(a){const o=n.slice(1);await a(...o);return}if(n.includes("nearby")){const o=n.findIndex(h=>h==="nearby"),{visibleWorldX:c,visibleWorldY:l}=this.party.avatar,u=this.findVisibleEntitiesNearby(c,l);if(u.length===1){const[,h,d]=u[0],m=Jt(h-c,d-l);m&&(n[o]=m)}else n[o]="direction"}if(n.includes("direction")){this.switchToAskDirection(n);return}await this.sendWorldCommand(n)}getMapFocusTopLeft(){const[e,t]=this.mapFocus;return[e-Math.floor(this.mapDisplaySizeX/2),t-Math.floor(this.mapDisplaySizeY/2)]}findVisibleEntitiesAt(e,t,s=["actors","items","props"]){const n=[];return s.forEach(r=>{this.visibleWorld[r].forEach(a=>{const[,o,c]=a;o===e&&c===t&&n.push(a)})}),n}findVisibleEntitiesNearby(e,t,s){let n=[];return Object.values(E).forEach(([r,a])=>{const o=this.findVisibleEntitiesAt(e+r,t+a,s);n=[...n,...o]}),n}drawMap(){this.screen.drawMap(this.visibleWorld,this.party)}getStateKeyCommands(e){const{kb:t={},hideCommands:s=[],keyHelp:n={}}=this.states[e];return Object.keys(t).filter(r=>!s.includes(r)).map(r=>({key:r,command:t[r],keyHelp:n[r]}))}drawKeyCommandsScreen(e){const t=this.getStateKeyCommands(e),s={ArrowUp:"Up",ArrowDown:"Down",ArrowLeft:"Left",ArrowRight:"Right"," ":"Space"},n=t.map(({key:r,command:a,keyHelp:o={}},c)=>{const l=s[r]||r,u=o[this.settings.language]||a;return`${this.commandIndex===c?">":" "}(${l}) ${u}`});this.screen.drawCommandColumns(n)}drawAll(){this.screen.drawAll(this.visibleWorld,this.party)}static loopDeltas(e=[],t=0,s=0,n=()=>{}){let r;for(let a=e.length-1;a>=0;a-=1)if(r=e[a],r.worldTime<t||r.worldTime<=s&&n(r))return}drawDeltas(e=[],t=0,s=0){const n=[];L.loopDeltas(e,t,s,r=>{this.renderWorldTime<r.worldTime&&r.whoId===this.avatarWhoId&&!r.quiet&&n.push(r.message)});for(let r=n.length-1;r>=0;r-=1)console.log("		Print",n[r]),this.screen.mainConsole.print(n[r])}handleIncomingData(e){var r;const{visibleWorld:t,party:s,deltas:n}=e;if(this.visibleWorld=Object.freeze(structuredClone(t)),this.party=Object.freeze(structuredClone(s)),n){const a=this.renderWorldTime,o=((r=n[n.length-1])==null?void 0:r.worldTime)||0;this.drawDeltas(n,a,o),this.renderWorldTime=o}this.refocus(),this.drawAll()}async setup(){await L.waitForDom(),await this.screen.setup(),this.screen.mainConsole.print("You enter a swirling gateway, and awaken in a strange world."),this.loadGame(),this.worldComm.on("data",e=>this.handleIncomingData(e)),await this.worldComm.connect(this.avatarWhoId,this.mapDisplaySizeX,this.mapDisplaySizeY),await this.sendWorldCommand("ping",this.avatarWhoId),this.drawMap(),this.inputCtrl.setup(),this.switchToTravel()}async start(){await this.setup(),console.log("%c☥","font-size: 300%; color: #ff0;")}}const he=new L(Me);he.start();window.g=he;
