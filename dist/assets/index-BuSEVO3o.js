var Me=Object.defineProperty;var De=(r,e,t)=>e in r?Me(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var F=(r,e,t)=>De(r,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function t(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(s){if(s.ep)return;s.ep=!0;const i=t(s);fetch(s.href,i)}})();const Y=320,ue=200,Le={up:[0,-1],down:[0,1],left:[-1,0],right:[1,0]},A={...Le,here:[0,0]},We=20,qe=5,Re=["up","right","down","left"],Ue=0,Ne=10,$e={main:{url:"./images/wulf-spritesheet-12.png",size:16,atlas:[{names:["grass-0","grass-1","grass-2","grass-3","forest-0","forest-1","forest-2","forest-3","mountain-0","mountain-1","mountain-2","mountain-3","mountain-door","circle","village","town","city","","faded-place","place"]},{names:["water-0","void","","","","","","","water-1","","","","","","","","ladder-down","ladder-up","magic-ladder-down","magic-ladder-up"]},{names:["dirt","floor-0","floor-1","floor-2","floor-3","floor-4","floor-5","floor-6","wheat-0","tree-0","","","","","","","pillar-0","torch-0","torch-1","torch-2"]},{names:["stone-wall-0","stone-wall-1","stone-door-open","stone-window","stone-sign-left","stone-sign-right","dark-stone-0","dark-stone-1","dark-stone-to-stone","stone-to-dark-stone","green-stone","wood-wall-0"]},{names:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T"]},{names:["U","V","W","X","Y","Z","rune-A","rune-B","rune-C","rune-D","rune-E","rune-F","rune-G","rune-H","rune-I","rune-J","rune-K","rune-L","rune-M","rune-N"]},{names:["rune-O","rune-P","rune-Q","rune-R","rune-S","rune-T","rune-U","rune-V","rune-W","rune-X","rune-Y","rune-Z","rune-TH","rune-EE","rune-NG","rune-EA","rune-ST","rune-space","",""]},{names:["horse","horseback","empty-sailboat","sailboat","empty-galleon","galleon","empty-carpet","flying-carpet","empty-broom","flying-broom","dead-skull","hit-splash","target-circle"]},{names:["spearman-0","spearman-1","spearman-2","spearman-3","beastman-0","","","","king-0","","","","man-0","","","","woman-0","","",""]},{names:["orc-0","orc-1","orc-2","orc-3","wildman-0","","","","mage-0","","","","blacksmith-0","","","","wench-0","","",""]},{names:["dwarf-0","","","","","","","","jester-0","","","","merchant-0","","","","shopkeeper-0","","",""]},{names:["elf-0"]}]},fonts:{url:"./images/letters-spritesheet-5.png",size:8,atlas:[{names:["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","th","ee","ng","ea","st"," ","0","1","2","3","4","5","6","7","8","9","10","-","=",";",",",".","'","/"]},{names:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","TH","EE","NG","EA","ST"," ","ankh","!","@","#","$","%","^","&","*","(",")","_","+",":","<",">",'"',"?"]},{names:["rune-A","rune-B","rune-C","rune-D","rune-E","rune-F","rune-G","rune-H","rune-I","rune-J","rune-K","rune-L","rune-M","rune-N","rune-O","rune-P","rune-Q","rune-R","rune-S","rune-T","rune-U","rune-V","rune-W","rune-X","rune-Y","rune-Z","Trune-H","Erune-E","Nrune-G","Erune-S","Srune-T","rune-space"]}]}},m={type:"terrain",sprite:"stone-wall-0",obstacleId:1},Oe={entity:{sprite:"void",x:0,y:0,obstacleId:0},terrain:{type:"entity",isTerrain:!0},void:{type:"terrain",sprite:"void",obstacleId:0},dirt:{type:"terrain",sprite:"dirt",obstacleId:6},floor2:{type:"terrain",sprite:"floor-2",obstacleId:7},floor3:{type:"terrain",sprite:"floor-3",obstacleId:7},floor4:{type:"terrain",sprite:"floor-4",obstacleId:7},floor5:{type:"terrain",sprite:"floor-5",obstacleId:7},wallA:{...m,sprite:"A"},wallB:{...m,sprite:"B"},wallC:{...m,sprite:"C"},wallD:{...m,sprite:"D"},wallE:{...m,sprite:"E"},wallF:{...m,sprite:"F"},wallG:{...m,sprite:"G"},wallH:{...m,sprite:"H"},wallI:{...m,sprite:"I"},wallJ:{...m,sprite:"J"},wallK:{...m,sprite:"K"},wallL:{...m,sprite:"L"},wallM:{...m,sprite:"M"},wallN:{...m,sprite:"N"},wallO:{...m,sprite:"O"},wallP:{...m,sprite:"P"},wallQ:{...m,sprite:"Q"},wallR:{...m,sprite:"R"},wallS:{...m,sprite:"S"},wallT:{...m,sprite:"T"},wallU:{...m,sprite:"U"},wallV:{...m,sprite:"V"},wallW:{...m,sprite:"W"},wallX:{...m,sprite:"X"},wallY:{...m,sprite:"Y"},wallZ:{...m,sprite:"Z"},grass:{type:"terrain",sprite:"grass-0",obstacleId:5},water:{type:"terrain",sprite:"water",variations:2,obstacleId:2},forest:{type:"terrain",sprite:"forest-0",obstacleId:10},mountain:{type:"terrain",sprite:"mountain-0",obstacleId:11},wall:m,darkWall:{type:"terrain",sprite:"dark-stone-0",obstacleId:1},woodWall:{type:"terrain",sprite:"wood-wall-0",obstacleId:1},door:{type:"terrain",sprite:"stone-door-open",obstacleId:0},window:{type:"terrain",sprite:"stone-window",obstacleId:1},floor:{type:"terrain",sprite:"floor-0",obstacleId:7},tileFloor:{type:"terrain",sprite:"floor-2",obstacleId:7},signLeft:{type:"terrain",sprite:"stone-sign-left",obstacleId:1},signRight:{type:"terrain",sprite:"stone-sign-right",obstacleId:1},wheat:{type:"terrain",sprite:"wheat-0",obstacleId:7},tree:{type:"terrain",sprite:"tree-0",obstacleId:10},destination:{type:"entity",investigate:{message:"You see {{name}}."},enter:{},sprite:"mountain-door",isDestination:!0},town:{type:"destination",sprite:"town"},city:{type:"destination",sprite:"city"},village:{type:"destination",sprite:"village"},dungeon:{type:"destination",sprite:"mountain-door"},prop:{type:"entity",isProp:!0},ladderDown:{type:"prop",sprite:"ladder-down",klimbable:{speed:1,direction:"down"}},ladderUp:{type:"prop",sprite:"ladder-up",klimbable:{speed:1,direction:"up"}},torch:{type:"prop",sprite:"torch-0"},pillar:{type:"prop",sprite:"pillar-0"},actor:{type:"entity",sprite:"horse",deadSprite:"dead-skull",isActor:!0,action:{queue:[],cooldown:1},mover:{speed:1,transversal:[1,0,0,0,.5,1,1.1,1.2,.5,.9,.8,0,0,0,0],movesCount:0},health:{hp:99,hpMax:99,deathSprite:"void"},fighter:{},attacker:{range:1,natural:{damage:1,damageType:"ph"}},firer:{range:3},currencies:{coins:0,food:10},inventory:{contents:[],max:255},equipment:{head:null,neck:null,torso:null,waist:null,legs:null,leftHand:null,rightHand:null,back:null,leftFinger:null,rightFinger:null,mainHandHeld:null,offHandHeld:null},obstacleId:13},avatar:{type:"actor",isAvatar:!0,sprite:"spearman-0",enterer:{speed:1},exitor:{speed:1},klimber:{speed:1},health:{hp:99,hpMax:99,respawnOnDeath:!0},currencies:{coins:0,food:99},eater:{moveMeal:1},attacker:{range:1,natural:{damage:[5,10],damageType:"ph"}},inventory:{contents:["dagger","sword","leatherArmor","chainArmor"],max:255},experience:{totalXp:0,killXp:100},factions:{good:10,evil:0}},king:{type:"actor",sprite:"king-0"},wanderer:{type:"actor",sprite:"man-0",plan:{randomMove:.5}},worker:{type:"wanderer",sprite:"blacksmith-0",plan:{randomMove:.1}},man:{type:"wanderer"},woman:{type:"wanderer",sprite:"woman-0"},mage:{type:"worker",sprite:"mage-0",plan:{randomMove:.1}},blacksmith:{type:"worker",sprite:"blacksmith-0"},wench:{type:"wanderer",sprite:"wench-0"},jester:{type:"wanderer",sprite:"jester-0",plan:{randomMove:.9}},merchant:{type:"actor",sprite:"merchant-0"},shopkeeper:{type:"merchant",sprite:"shopkeeper-0"},guard:{type:"wanderer",sprite:"spearman-2"},sentry:{type:"actor",sprite:"spearman-2"},elf:{type:"wanderer",sprite:"elf-0"},dwarf:{type:"wanderer",sprite:"dwarf-0",shop:{buy:{any:["item"]},sell:{types:["dagger","mace","axe","ropeAndSpikes","sword","greatSword","bow","amulet","wand","staff"],gateByMovesCount:[0,0,0,0,1500,1500,3e3,3e3,3e3,3e3]}}},monster:{type:"actor",factions:{good:-255,evil:255},plan:{randomMove:.5,aggroRange:10,hunt:!0},fighter:{},attacker:{range:1,natural:{damage:[1,4],damageType:"ph"}},firer:{range:0},health:{hp:12,hpMax:12,respawnOnDeath:!1}},beastman:{type:"monster",sprite:"beastman-0",currencies:{coins:[0,10],food:0},experience:{killXp:10}},darkHorseman:{type:"monster",sprite:"horseback",currencies:{coins:[0,10],food:[0,10]},experience:{killXp:10}},orc:{type:"monster",sprite:"orc-0",currencies:{coins:[0,10],food:[0,10]},experience:{killXp:10}},wildman:{type:"monster",sprite:"wildman-0",currencies:{coins:[0,10],food:0},experience:{killXp:10}},item:{type:"entity",isItem:!0,valuable:{valueMultiplier:1},sprite:"torch-0"},carpet:{type:"item",sprite:"empty-carpet"},broom:{type:"item",sprite:"empty-broom"},horse:{type:"item",sprite:"horse"},sailboat:{type:"item",sprite:"empty-sailboat"},galleon:{type:"item",sprite:"empty-galleon"},weapon:{type:"item",isWeapon:!0,equippable:{slots:["mainHandHeld"]},attackable:{range:1,damage:1,type:"ph"}},dagger:{attackable:{damage:8,range:1,type:"ph"},type:"weapon"},mace:{attackable:{damage:16,range:1,type:"ph"},type:"weapon"},axe:{attackable:{damage:24,range:1,type:"ph"},type:"weapon"},ropeAndSpikes:{attackable:{damage:1,range:1,type:"ph"},type:"weapon"},sword:{attackable:{damage:40,range:1,type:"ph"},type:"weapon"},greatSword:{attackable:{damage:48,range:1,type:"ph"},type:"weapon"},bow:{attackable:{damage:56,range:1,type:"ph"},type:"weapon"},amulet:{buff:{spellDamageBonus:.5},type:"weapon"},wand:{buff:{spellDamageBonus:1},type:"weapon"},staff:{buff:{spellDamageBonus:2},type:"weapon"},triangle:{buff:{spellDamageBonus:2},attackable:{damage:88,range:1,type:"ph"},type:"weapon"},pistol:{attackable:{damage:96,range:1,type:"ph"},type:"weapon"},lightSword:{attackable:{damage:104,range:1,type:"ph"},type:"weapon"},phazor:{attackable:{damage:112,range:1,type:"ph"},type:"weapon"},blaster:{attackable:{damage:120,range:1,type:"ph"},type:"weapon"},armor:{type:"item",isArmor:!0,equippable:{slots:["torso"]}},leatherArmor:{type:"armor",buff:{defense:2},valuable:10},chainArmor:{type:"armor",buff:{defense:4},valuable:25},plateArmor:{type:"armor",buff:{defense:6},valuable:60},vacuumArmor:{type:"armor",buff:{defense:9},valuable:120},reflectArmor:{type:"armor",buff:{defense:14},valuable:280}},je={direction:{kb:{ArrowUp:"up",ArrowDown:"down",ArrowLeft:"left",ArrowRight:"right",w:"up",s:"down",a:"left",d:"right",q:"abort",Escape:"abort",Enter:"abort"," ":"abort"}},stats:{kb:{q:"close",Escape:"close",Enter:"next"," ":"next"}},equip:{kb:{Escape:"abort",Enter:"equip close",ArrowLeft:"unequip",ArrowRight:"equip",ArrowDown:"next",ArrowUp:"previous",a:"unequip",d:"equip",s:"next",w:"previous"," ":"toggle","?":"help",F1:"help",r:"abort"}},cast:{kb:{ArrowUp:"up",ArrowDown:"down",w:"up",s:"down",q:"abort",Escape:"abort",Enter:"abort"," ":"abort"}},item:{kb:{ArrowUp:"up",ArrowDown:"down",w:"up",s:"down",q:"abort",Escape:"abort",Enter:"abort"," ":"abort"}},shop:{kb:{Tab:"nextTab",ArrowRight:"add",ArrowLeft:"subtract",ArrowDown:"next",ArrowUp:"previous",a:"subtract",d:"add",s:"next",w:"previous",Escape:"abort","-":"subtract","=":"add","+":"add","[":"previousTab","]":"nextTab"," ":"add","?":"help",F1:"help",t:"talk",Enter:"complete"}},commands:{kb:{ArrowUp:"previous",ArrowDown:"next",ArrowLeft:"previous",ArrowRight:"next",w:"previous",a:"previous",s:"next",d:"next",Escape:"abort",Enter:"execute"," ":"execute","?":"abort",F1:"abort"}},navigate:{kb:{ArrowUp:"previous",ArrowDown:"next",ArrowLeft:"previous",ArrowRight:"next"}},travel:{hideCommands:["/","0","1","=","G","Q","Enter"],kb:{" ":"pass",Tab:"toggle party",Enter:"chat","/":"command",0:"party return",1:"party 1",a:"go left",b:"board",c:"cast",d:"go right",e:"engage",f:"fight direction",g:"get nearby",h:"hole up",i:"investigate",j:"junk item",k:"klimb",l:"look direction",m:"map",n:"navigate",o:"open nearby",p:"pickpocket nearby",q:"quicksave",r:"ready",s:"go down",t:"talk nearby",u:"use item",v:"view toggle",w:"go up",x:"eXit",y:"yell",z:"ztats",ArrowUp:"go up",ArrowDown:"go down",ArrowLeft:"go left",ArrowRight:"go right","+":"volume up","=":"volume up","-":"volume down","?":"see commands",F1:"see commands"},keyHelp:{e:{en:"enter/engage"},f:{en:"fight"},l:{en:"look"},o:{en:"open"},p:{en:"pickpocket"},t:{en:"talk"}}}},Pe={name:"Lands of Lord Lunic",mapType:"overworld",map:["~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~.......f~~~....~~~~~~~~~~~","~~~~.....B..f~~~....~~~~~~~~~~~","~~~~..ff.....g~..f..~~~~~","~~~...^f.....sfffff.~~~~~","~~~..^^^.......fffff.~~~~","~~~..^^^....D...3fff...","~~~..^4........fffff..","~~~.^^^^....h....ff..","~~~..^^^b.c.....O..ff..","~~~~..^...........f..","~~~...^......2......~~~~.1~~","~~~........f..~~~~..~~~~~.f~","~~~.f^...^^^f....~~~~","~~~.f^^.^^^^ff~~~~~~~","~~~~^^...f^^ffff~~~~~","~~~~^.~..f^^^fff~~~~~","~~~~~~~f.ff^fff^~~~~~","~~~...ff...ff.^^^.1~~","~~~.........^^^^^^^^..~~~~......","~~..~........ff.^^^^^^^ff......","~~~~~~........f...............","~~~~~~~.~~.......~..~","~~~~~~~~~~~~~.~~~~~~~~~","~~~~~~~~~~~..O~~~~~~~~~~","~~~~~~~~~~~~....~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~..........~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~..fff..............~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~...~...........................ffffff........~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~...~^^^...................fffffffffffff^^......~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~.....^^................................^^.B........~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~....^^^................................^^^..B............~~~~~~~~~~~~~~~~~~~~~","~~~~~~~....^^^^............^^ffff.............^^^^^.................~~~~~~~~~~~~~~~~","~~~~~~~~........W...................W.................................~~~~~~~~~~~~~~","~~~~~~~~~..................................................................~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"],legend:{1:["grass","village"],2:["grass",{type:"town",enter:{mapKey:"town1"}}],3:["grass",{type:"city",enter:{mapKey:"castle1"}}],4:["grass",{type:"dungeon",enter:{mapKey:"dungeon1"}}],K:["grass",{type:"king"}],G:["grass","guard"],W:["grass","wildman"],c:["grass","carpet"],h:["grass","horse"],s:["water","sailboat"],g:["water","galleon"],b:["grass","broom"],D:["grass","dwarf"],f:["forest"]},spawn:{types:["beastman"],max:10,cooldownMulitplier:1},overflow:"water",exits:{edges:"LOOP"}},Be={name:"Castle Albarix",mapType:"civilization",map:[".....................",".###################.",".#~~~-----------~~~#.",".#~~~-|--###--|-~~~#.",".#~~-----(K)-----~~#.",".#~---|-------|---~#.",".#-----------------#.",".#-S----*-J-*----S-#.",".#########-#########.",".%F.....F---F.....F%.",".%F......---......F%.",".###U####---####U###.",".#------#---#--W---#.",".#------#---#------#.",".#---M--#---####U###.",".%------U----------%.",".#------#----------#.",".####U###---######U#.",".#------#---#----#-#.",".#------#---#----#-#.",".#-D----#---#-E--U-#.",".#----D-#---######-#.",".########---#----#-#.",".#------U---#----U-#.",".#------#---#----#-#.",".#-####-#---######U#.",".#-G----#---#-E----#.",".#------#---#------#.",".####U###---######U#.",".#------#---#--G---#.",".#-->---#---#------#.",".######%#UUU#%######.","..ff..:::::::::..ff..","......:.~~~~~.:......","....*.:.~~~~~.:.*....",".####.D.~~~~~.:.####.",".#--S::.......::S--#.",".##%#.:::---:::.#%##.","....................."],legend:{U:["door"],"%":["window"],F:["forest"],S:["floor","sentry"],G:["floor","guard"],K:["floor","king"],M:["floor","man"],W:["floor","woman"],"(":["signLeft"],")":["signRight"],">":["floor","ladderDown"],E:["floor","elf"],D:["floor","dwarf"],f:["forest"],J:["floor","jester"]},overflow:"grass",entrance:["center","bottom"],exits:{edges:["overworld",16,6],down:["castle1B",-1,-1]}},Ke={name:"Castle Albarix Cellar",mapType:"civilization",map:["###################","#~~#-----------#~~#","#~~#--|-###-|--#~~#","#~~#-----------#~~#","####-----------####","#-----|-----|-----#","#-----------------#","#########U#########","#:::::::---:::::::#","#:::::::---:::::::#","###U####---########","#------#---U------#","#------#---#------#","#--G---#---########","#------U---#------#","#---*--#---U------#","########---########","#::::::#---|------#","#::::::U---------*#","#::::::#---|------#","#::::::#---########","########---#----*-#","#*-----U---U--G---#","#------#---#------#","#-|-G|-#######U####","#----------|-----*#","#-----------------#","#-#--#-##########U#","#------#------G---#","#--<---#---*------#","###################"],legend:{U:["door"],G:["floor","guard"],"<":["floor","ladderUp"]},entrance:["center","bottom"],exits:{edges:"BLOCK",up:["castle1",1,1]}},Ye={name:"Dungeon",mapType:"dungeon",map:["#####################","#####################","##~~~-----------~~~##","##~~~-|--###--|-~~~##","#########.-##########","#:.....:-.--:::...:.#","#:......--:-......::#","###U####-.--####U####","#------#-.--#--W---##","#------#.---#------##","#---W--#-.--####U####","#------U--.--------%#","#-----...:.:::..---.#","####U###-.--######U.#","#------#.---#----#-.#","#------#.---#----#-.#","#-B----#.---#-B--U-.#","#----O-#.---######-.#","########--.-#----#..#","#------U--.-#----U..#","#------#--.-#----#..#","#-####-#--.-######U##","##-O----#--.#-B::::##","##------#--.#------##","#####U###---######U##","##------#---#--B---##","##------#---#------##","#######%#UUU#%#######","#~.W..:::::::::.....#","#~~~..:.~~.~~.:.....#","#..~*.:.~~.~~.:.*...#","##-~.::.......::---##","###:#.:::---:::.#W###","##########.##########"],legend:{".":["floor3"],"-":["floor5"],U:["door"],"%":["window"],F:["forest"],S:["floor","sentry"],G:["floor","guard"],K:["floor","king"],M:["floor","man"],W:["floor","wildman"],"(":["signLeft"],")":["signRight"],">":["floor","ladderDown"],E:["floor","elf"],D:["floor","dwarf"],"#":["darkWall"]},overflow:"void",entrance:["center","bottom"],exits:{edges:["overworld",16,6]}},Fe={name:"Castle Albarix",mapType:"civilization",map:["......&&&&&.:..S...&&&&&&&&&&&..###pub##=#=########.........................~...","............:.......&&&&&&&&&...#*--M----*--/-----#..~~~~......###magic####.~..&","..[[[[[[[[..:........&&&&&&&....#---------E-#-----#..~~~~......#*------*|-#.~..&","..[------[..:::::::::::::::::...#-E---------#---B-#..~~~~......#G---------#.~...","..[-*----/:::.!!!.!.!.!.!.!.:...#=####/####=###---#..~~~~.:::::/-------A--#.~~..","..[------[....!!!.!.!.!.!.!.:......:::::::....##=##......::....#*------*|-#..~~~","..[[[[[[[[....!!!.!.!.!.!.!.::::::::.....:::::::::::::::::...####/##########....","............###=###/#=###.!...:.&&&.#####/##.##=#/#=###..:.*##-------------##..&",".&.########.#----------*#.!...::.&&.#------#.#*-------#..:.##--|--#####--|--##..","&&.#---*--#.#-G----R----#####.*::...#----B-#.#--------#..:.#S-----#...#------#..","&..#------#.#####food#------#...::..#-*---S#.#S-------/::::/------#.~.#------#..","&..#------#...:......#---M--#....::.#------#.#----O--*#..:.#------#...#------#..","&..#=#/#=##...:::::::/---W--#...&.:.=-O----#.#-M------#..:.##--|--#####--|--##..","&&....:*....&......:.#####=##...&.:.#armour#.#weapons##..:.*##-------------##...","&&&...::::::::::::::::::::::::::::::::::::::::::::::::::::...####/##########..&&","..&...[[/[[.[=/=[..:*......###=##///##=######.......~~~..:.....#----------#...&&","&.....[---[.[---[..:.......#G--------------H#.......~~~..::::::/-------W--#..&&&","&&&...=-E-[.[---[..:....&&&#----------------#....&&............=----------#....&","&&&...[-W-[.[---[..:...&&&&#---W------M--B-H#.&&&&&............############....&","&.....[[[[[.[[[[[.S:.&&&&&&##transportation##&&&&&&&&&&&&&&&&..................."],legend:{"/":["door"],"=":["window"],"&":["tree"],S:["floor","sentry"],G:["floor","guard"],M:["floor","man"],W:["floor","woman"],"(":["signLeft"],")":["signRight"],">":["floor","ladderDown"],D:["floor","dwarf"],B:["floor","blacksmith"],E:["floor","wench"],R:["floor","merchant"],O:["floor","shopkeeper"],H:["floor","horse"],A:["floor","mage"],"[":["woodWall"],"!":["wheat"],a:["wallA"],b:["wallB"],c:["wallC"],d:["wallD"],e:["wallE"],f:["wallF"],g:["wallG"],h:["wallH"],i:["wallI"],j:["wallJ"],k:["wallK"],l:["wallL"],m:["wallM"],n:["wallN"],o:["wallO"],p:["wallP"],q:["wallQ"],r:["wallR"],s:["wallS"],t:["wallT"],u:["wallU"],v:["wallV"],w:["wallW"],x:["wallX"],y:["wallY"],z:["wallZ"]},overflow:"grass",entrance:[12,"top"],exits:{edges:["overworld",13,11]}},C=8,Xe=Y/C,ne=ue/C,ze=Y/C,X=Math.floor(ze/2),He={settings:{bumpCombat:1,autoEnter:0,language:"en"},spritesheets:$e,screen:{containerSelector:"#screen",mainCanvasId:"main-canvas",height:ue,width:Y,colors:{blue:"#2bcfd6",green:"#53d638",violet:"#962ba5",orange:"#d95e1c",white:"#f1f1f1",black:"#000000"}},mapDisplay:{w:20,h:10,offsetX:0,offsetY:1},mainConsole:{horizontal:"left",vertical:"bottom",rows:4,columns:Xe-10,cursor:">",fontSize:C,offsetX:0,offsetY:-2},quickStatConsole:{horizontal:"right",vertical:"bottom",rows:4,columns:9,fontSize:C,offsetX:-2,offsetY:-2},commandConsoles:[{horizontal:1,vertical:1,rows:ne-2,columns:X-1,fontSize:C},{horizontal:X+1,vertical:1,rows:ne-2,columns:X-2,fontSize:C}],centralConsole:{horizontal:"left",vertical:"top",rows:21,columns:36,fontSize:C,offsetX:C*2,offsetY:C*2},world:{obstacleTypes:["none","impassable physical obstacle","deep ocean","shallow water","swamp","plains","path","road","desert","hills","forest","low mountains","high mountains","short physical obstacle","lava","magical barrier",""],entityTypes:Oe,mapTypes:{overworld:{moveMealMultiplier:1,moveXpMultiplier:1,scale:"overworld"},civilization:{moveMealMultiplier:0,moveXpMultiplier:0,scale:"personal"},dungeon:{moveMealMultiplier:1,moveXpMultiplier:1,scale:"personal"}},maps:{overworld:Pe,castle1:Be,castle1B:Ke,dungeon1:Ye,town1:Fe},globalLegend:{".":["grass"],":":["dirt"],"~":["water"],"^":["mountain"],"&":["forest"],"-":["floor"],"*":["floor","torch"],"|":["floor","pillar"],"#":["wall"],B:["grass","beastman"],O:["grass","orc"]},timing:{actionCooldown:20,actionCooldownRandom:4,actionWarmup:5,actionWarmupRandom:0,overworldEating:100,townEating:1e4,regen:120,spawnCooldown:80,spawnCooldownRandom:50}},stats:{min:0,max:99,list:[{name:"Strength"}]},start:{mapKey:"overworld",coordinates:[10,10]},states:je,actions:{board:{cooldown:1},camp:{cooldown:2},cast:{cooldown:1},engage:{cooldown:0},enter:{cooldown:1},dismount:{cooldown:.6},fight:{cooldown:1},fire:{cooldown:1},get:{cooldown:.6},heal:{cooldown:2},hyperjump:{cooldown:.1},ignite:{cooldown:.6},investigate:{cooldown:2},junk:{cooldown:.8},jump:{cooldown:.1},jimmy:{cooldown:2},klimb:{cooldown:1,warmup:.9},launch:{cooldown:.1},locate:{cooldown:.1},mix:{cooldown:3},move:{cooldown:1},navigate:{cooldown:3},negate:{cooldown:.9},open:{cooldown:.5},offer:{cooldown:1},pass:{cooldown:1},pickpocket:{cooldown:.5,warmup:2},peer:{cooldown:1},plan:{cooldown:.2},push:{cooldown:1},ready:{cooldown:.9},summon:{cooldown:1},talk:{cooldown:1},transact:{cooldown:2},unlock:{cooldown:2},warmup:{cooldown:.6},yell:{cooldown:.1}}};class Ve{constructor(e,t=320,n=200){var s;this.elementId=e,this.canvas=document.getElementById(e),this.ctx=(s=this.canvas)==null?void 0:s.getContext("2d"),this.width=Number(t)||320,this.height=Number(n)||200}setup(){this.canvas=document.getElementById(this.elementId),this.ctx=this.canvas.getContext("2d")}removePixelTransparency(e=200){const{ctx:t}=this;t.imageSmoothingEnabled=!1;const n=t.getImageData(0,0,this.width,this.height);for(let s=0;s<n.data.length;s+=4){const i=n.data[s+3];n.data[s+3]=i>e?255:0}t.putImageData(n,0,0)}drawLine(e,t,n,s,i="#ffffff"){const{ctx:a}=this;a.beginPath(),a.strokeStyle=i,a.lineWidth=1,a.moveTo(e+.5,t+.5),a.lineTo(n+.5,s+.5),a.stroke()}}class S extends Image{constructor(e){if(super(),!e)throw new Error("GameImage missing src param");this.src=e,this.data=null,this.isLoaded=!1}async load(){const e=new Promise((t,n)=>{try{const s=()=>t(this);super.onload=s,super.onerror=i=>{console.error(this.src,i),n(new Error(`GameImage failed to load ${this.src}`))},this.complete&&s()}catch(s){n(s)}});try{await e,this.isLoaded=!0,this.setup()}catch(t){throw this.isLoaded=!1,t}return this}setup(){this.data=this.getImageData()}async clone(){const e=new S(this.src);return await e.load(),e}cloneSync(){const e=new S(this.src);return e.load(),e}static getCanvasContext(e,t,n){const s=document.createElement("canvas");s.width=e,s.height=t;const i=s.getContext("2d");return n&&i.drawImage(n,0,0),[s,i]}getCanvasContext(e={}){const{draw:t=!0}=e;return S.getCanvasContext(this.naturalWidth||this.width,this.naturalHeight||this.height,t?this:null)}getImageData(e){return(e||this.getCanvasContext({draw:!0})[1]).getImageData(0,0,this.width,this.height)}getImageDataUri(){const[e]=this.getCanvasContext({draw:!0});return e.toDataURL("image/png")}setSourceByCanvas(e){this.src=e.toDataURL("image/png")}replaceColors(e=[],t=[]){const[n,s]=this.getCanvasContext({draw:!0}),i=this.getImageData(s);for(let a=0;a<i.data.length;a+=4)e.forEach((o,l)=>{const[c,u,h]=o,[d,p,g]=t[l];i.data[a]===c&&i.data[a+1]===u&&i.data[a+2]===h&&(i.data[a]=d,i.data[a+1]=p,i.data[a+2]=g)});s.putImageData(i,0,0),this.setSourceByCanvas(n)}replaceColor(e=[],t=[]){const[n,s]=this.getCanvasContext({draw:!0}),[i,a,o]=e,[l,c,u]=t;let h=0;const d=this.getImageData(s);for(let p=0;p<d.data.length;p+=4)d.data[p]===i&&d.data[p+1]===a&&d.data[p+2]===o&&(d.data[p]=l,d.data[p+1]=c,d.data[p+2]=u,h+=1);return s.putImageData(d,0,0),this.setSourceByCanvas(n),h}}const D=[[255,255,255],[0,0,0]],Ge=[[238,238,204],[17,17,51]],_e=0;class q extends S{constructor(e,t={},n=16){const s=typeof e=="object",i=s?(e==null?void 0:e.src)||(e==null?void 0:e.url):e;super(i);const a=(s?e==null?void 0:e.atlas:t)||[];this.atlas=[...a];const o=(s?e==null?void 0:e.size:n)||16;this.spriteSize=o,this.sprites={}}async load(){try{await super.load()}catch(e){throw console.error(e),e}}getCoordinates(e){let t=-1,n=-1;if(this.atlas.forEach((s,i)=>{if(!s.names)return;const a=s.names.findIndex(o=>e===o);a!==-1&&(n=a,t=i)}),n===-1||t===-1)throw new Error(`Sprite ${e} not found in atlas`);return[n*this.spriteSize,t*this.spriteSize]}drawImageToContext(e,t,n,s){const[i,a]=this.getCoordinates(e);t.drawImage(this,i,a,this.spriteSize,this.spriteSize,n,s,this.spriteSize,this.spriteSize)}getSubImage(e,t,n=this.spriteSize,s=this.spriteSize,i=void 0,a=void 0){if(!i||!a){const l=S.getCanvasContext(n,s);i=l[0],a=l[1]}a.drawImage(this.sheet,e,t,n,s,0,0,n,s);const o=i.toDataURL("image/png");return new S(o)}parse(){const[e,t]=S.getCanvasContext(this.spriteSize,this.spriteSize);let n=0;Object.entries(this.atlas).forEach(([s,i])=>{let a=0;i.forEach(o=>{const{y:l,names:c}=o;let u=_e;c.forEach(h=>{const d=this.getSubImage(u,l,this.spriteSize,this.spriteSize,e,t);[`sprite-${n}`,`${s}-${a}`,h].forEach(p=>{this.sprites[p]=d}),u+=this.spriteSize,n+=1,a+=1})})})}static makeColorId(e,t=D){const[n=[255,255,255],s=[0,0,0]]=t;return`${e}_${n.join(",")}_${s.join(",")}`}async loadColoredSprite(e,t=D){const n=this.makeColoredSprite(e,t);return await n.load(),n}async loadColorSpriteDataUri(e,t=D){const n=await this.loadColoredSprite(e,t);return n?n.getImageDataUri():""}makeColoredSprite(e,t=D){const[n=[255,255,255],s=[0,0,0]]=t,i=this.get(e);if(!i)throw new Error(`Unknown sprite ${e}`);const a=i.cloneSync();a.replaceColors(Ge,[n,s]);const o=q.makeColorId(e,t);return this.sprites[o]=a,a}makeColoredSpriteDataUri(e,t=D){return this.makeColoredSprite(e,t).getImageDataUri()}get(e,t){if(!t)return this.sprites[e];const n=q.makeColorId(e,t),s=this.sprites[n];return s||this.makeColoredSprite(e,t)}getDataUri(e,t){const n=this.get(e,t);return n?n.getImageDataUri():""}}class se{constructor(e,t={}){if(this.fss=e,this.cursorRow=0,this.cursorCol=0,this.offsetX=t.offsetX||0,this.offsetY=t.offsetY||0,!e)throw new Error("Missing fonts spritesheet")}static splitText(e,t){if(e.length<=t)return[e];const n=e.split(" "),s=[];let i="";return n.forEach(a=>{a.length>t&&console.warn("Word exceeds max length",a,t);const o=i?`${i} ${a}`:a;o.length>t?(s.push(i),i=a):i=o}),s.push(i),s}async setup(){await this.fss.load()}setCursor(e,t){typeof e=="number"&&(this.cursorCol=e),typeof t=="number"&&(this.cursorRow=t)}drawLetter(e,t){try{this.fss.drawImageToContext(t,e,this.cursorCol*this.fss.spriteSize+this.offsetX,this.cursorRow*this.fss.spriteSize+this.offsetY)}catch(n){console.warn("Error drawing letter",t,n)}this.cursorCol+=1}drawTextRows(e,t=[],n=void 0,s=void 0){this.setCursor(n,s);const i=this.cursorCol;t.forEach(a=>{a.split("").forEach(o=>{this.drawLetter(e,o)}),this.cursorRow+=1,this.cursorCol=i})}drawText(e,t="",n=void 0,s=void 0){if(this.setCursor(n,s),t instanceof Array){this.drawTextRows(e,t,n,s);return}t.split("").forEach(i=>{this.drawLetter(e,i)})}lineBreak(){this.cursorCol=0,this.cursorRow+=1}drawLine(e,t="",n=void 0,s=void 0){this.drawText(e,t,n,s),this.lineBreak()}}class N{constructor(e={},t=null){this.fontsSpritesheet=t,this.horizontal=e.horizontal||"left",this.vertical=e.vertical||"top",this.fontSize=e.fontSize||8,this.columns=e.columns||"max",this.rows=e.rows||4,this.offsetX=e.offsetX||0,this.offsetY=e.offsetY||0,this.inputLine=typeof e.inputLine>"u"?!0:!!e.inputLine,this.textRows=this.rows-(this.inputLine?1:0),this.cursor=e.cursor||"",this.gameCanvas=e.gameCanvas;const{offsetX:n,offsetY:s}=this;this.textCtrl=new se(t,{offsetX:n,offsetY:s}),this.log=[]}async setup(e){this.gameCanvas=e,await this.textCtrl.setup(),typeof this.columns!="number"&&(this.columns=Math.floor(this.gameCanvas.width/this.fontSize))}getColumnStart(){const e=Y/this.fontSize;return this.horizontal==="right"?e-this.columns:this.horizontal==="left"?0:this.horizontal==="center"?Math.floor(e/2):Number(this.horizontal||0)}getRowBase(){var e;return this.vertical==="bottom"?Math.floor((((e=this.gameCanvas)==null?void 0:e.height)||0)/this.fontSize)-this.rows:this.vertical==="top"?0:Number(this.vertical||0)}getPrintableLines(){const e=this.cursor.length,t=" ".repeat(e),n=[];this.log.slice(-this.textRows).forEach(l=>{se.splitText(l,this.columns-e).forEach((c,u)=>{n.push(`${u===0?this.cursor:t}${c}`)})});const s=n.slice(-this.textRows),a=s.length<this.textRows?this.textRows-s.length:0;return[..." ".repeat(a).split("").map(()=>".".repeat(this.columns)),...s]}printLine(e="",t=0){const n=this.getRowBase()+t,{ctx:s}=this.gameCanvas,i=e.length<this.columns?this.columns-e.length:0,a=this.getColumnStart();this.textCtrl.drawLine(s,e+" ".repeat(i),a,n)}printLines(e){(e||this.getPrintableLines()).forEach((n,s)=>this.printLine(n,s))}printCursor(){const e=this.getRowBase()+this.rows-1,{ctx:t}=this.gameCanvas;this.textCtrl.drawLine(t,this.cursor,0,e)}print(e){this.log.push(e),this.printLines(),this.printCursor()}clear(){const e=" ".repeat(this.rows).split("").map(()=>" ".repeat(this.columns));this.printLines(e)}}class x{constructor(e={}){var s,i,a,o,l,c,u,h,d,p,g,f,v,T,I;this.colors=((s=e.screen)==null?void 0:s.colors)||{white:"#ffffff",black:"#000000"},this.screenWidth=((i=e.screen)==null?void 0:i.width)||320,this.screenHeight=((a=e.screen)==null?void 0:a.height)||200,this.mapDisplayWidth=((o=e==null?void 0:e.mapDisplay)==null?void 0:o.w)||20,this.mapDisplayHeight=((l=e==null?void 0:e.mapDisplay)==null?void 0:l.h)||10,this.mapDisplayOffsetX=((c=e==null?void 0:e.mapDisplay)==null?void 0:c.offsetX)||0,this.mapDisplayOffsetY=((u=e==null?void 0:e.mapDisplay)==null?void 0:u.offsetY)||0;const t=(((d=(h=e.spritesheets)==null?void 0:h.main)==null?void 0:d.size)||16)*this.mapDisplayHeight+this.mapDisplayOffsetY,n=(((p=e.mainConsole)==null?void 0:p.columns)||10)*(((g=e.mainConsole)==null?void 0:g.fontSize)||8)+1;this.borderLines=[[0,t,this.screenWidth,t,this.colors.blue],[n,t,n,this.screenHeight,this.colors.blue]],this.screenSelector=((f=e.screen)==null?void 0:f.containerSelector)||"#wulf-screen",this.mainCanvasId=((v=e.screen)==null?void 0:v.mainCanvasId)||"wulf-main-canvas",this.gameCanvas=new Ve(this.mainCanvasId,[this.screenWidth,this.screenHeight]),this.ss=new q((T=e==null?void 0:e.spritesheets)==null?void 0:T.main),this.fontsSpritesheet=new q((I=e==null?void 0:e.spritesheets)==null?void 0:I.fonts),this.mainConsole=new N(e==null?void 0:e.mainConsole,this.fontsSpritesheet),this.quickStatConsole=new N(e==null?void 0:e.quickStatConsole,this.fontsSpritesheet),this.commandConsoles=e.commandConsoles.map(k=>new N(k,this.fontsSpritesheet)),this.centralConsole=new N(e==null?void 0:e.centralConsole,this.fontsSpritesheet)}static getPrintableNumber(e,t=4){if(typeof e!="number")return"?".repeat(t);let n=String(e);return n.length>t&&(n=`${String(Math.floor(e/1e3))}k`),n.padStart(t," ")}adjustScreenSize(){const e=window.innerWidth,t=window.innerHeight,n=Math.floor(Math.min(e/this.screenWidth,t/this.screenHeight)),s=this.screenWidth*n,i=this.screenHeight*n,a=document.querySelector(this.screenSelector);a.style.width=`${s}px`,a.style.height=`${i}px`}drawSprite(e,t,n){e&&this.ss.drawImageToContext(e,this.gameCanvas.ctx,t*this.ss.spriteSize+this.mapDisplayOffsetX,n*this.ss.spriteSize+this.mapDisplayOffsetY)}drawSprites2d(e){e.forEach((t,n)=>{t.forEach((s,i)=>{this.drawSprite(s,i,n)})})}drawSpritesArray(e=[]){e.forEach(t=>{const[n,s,i]=t;this.drawSprite(n,s,i)})}drawTerrain(e){this.drawSprites2d(e.terrain.sprites,"terrain")}drawVisibleThings(e=[]){e.forEach(t=>{const[n,s,i]=t;this.drawSprite(n,s,i)})}drawParty(e){for(let t=e.members.length-1;t>=0;t-=1){const{visibleWorldX:n,visibleWorldY:s,sprite:i}=e.members[t];this.drawSprite(i,n,s)}}drawMap(e,t,n){this.drawTerrain(e),this.drawVisibleThings(e.items),this.drawVisibleThings(e.props),this.drawVisibleThings(e.actors),this.drawParty(t),!n&&this.borderLines.forEach(s=>{this.gameCanvas.drawLine(...s)})}drawAll(e,t){var s,i,a,o;this.drawMap(e,t);const n=t.members[t.leaderIndex];this.quickStatConsole.printLines([`H.P.:${x.getPrintableNumber((s=n==null?void 0:n.health)==null?void 0:s.hp,4)}`,`Coin:${x.getPrintableNumber((i=n==null?void 0:n.currencies)==null?void 0:i.coins,4)}`,`Food:${x.getPrintableNumber((a=n==null?void 0:n.currencies)==null?void 0:a.food,4)}`,`X.P.:${x.getPrintableNumber((o=n==null?void 0:n.experience)==null?void 0:o.totalXp,4)}`])}drawCommandColumns(e=[]){const t=this.commandConsoles.length,n=Math.ceil(e.length/t),s=e.slice(0,n),i=e.slice(n);this.commandConsoles[0].printLines(s),this.commandConsoles[1].printLines(i)}drawCentralText(e=[]){this.quickStatConsole.clear(),this.mainConsole.clear(),this.centralConsole.clear(),this.centralConsole.printLines(e)}async setup(){await this.gameCanvas.setup(),this.adjustScreenSize(),await this.mainConsole.setup(this.gameCanvas),await this.quickStatConsole.setup(this.gameCanvas);const e=this.commandConsoles.map(t=>t.setup(this.gameCanvas));await this.centralConsole.setup(this.gameCanvas),await Promise.allSettled(e),window.addEventListener("resize",()=>this.adjustScreenSize())}}class Qe{constructor(e){this.gameName=e||"MyGame"}getObject(e){const t=localStorage.getItem(`${this.gameName}_${e}`);return typeof t!="string"?null:JSON.parse(t)}setObject(e,t=null){localStorage.setItem(`${this.gameName}_${e}`,JSON.stringify(t))}loadSavesList(){return this.getObject("Saves")||[]}saveSave(e,t,n){this.setObject(`Save${e}`,n);const s=this.loadSavesList();s[e]={saveName:t},this.setObject("Saves",s)}}class he{constructor(){this.eventListeners={}}on(e,t){let n=this.eventListeners[e];n||(this.eventListeners[e]=new Set,n=this.eventListeners[e]),n.add(t)}off(e,t){if(typeof e>"u"){this.eventListeners={};return}const n=this.eventListeners[e];if(n){if(typeof t>"u"){n.clear();return}n.delete(t)}}trigger(e,t){const n=this.eventListeners[e];n&&n.forEach(s=>s(t))}}const de="command",pe="missingCommand",me="mount",fe="unmount",O="mapping",Je=[de,pe,me,fe,O],re="keydown",ie="keyup";class Ze extends he{constructor(e={},t={}){super();const{autoMount:n=!0,triggerOnRepeat:s=!1,document:i=window.document}=t;if(this.id=Math.round(Math.random()*99999),this.triggerOnRepeat=!!s,this.mapping={},this.setMapping(e),this.document=i,!this.document.addEventListener)throw new Error("document with addEventListener is required");this.keysDown={},this.commandsDown={},this.keyDownListener=a=>this.handleKeyDown(a),this.keyUpListener=a=>this.handleKeyUp(a),this.setupEventListeners(t),this.nodeNamesDontTrigger=["TEXTAREA","INPUT"],this.nodeNamesAllowDefault=["TEXTAREA","INPUT"],n&&this.mount()}setMapping(e={}){if(typeof e!="object")throw new Error("Invalid type for mapping param");return this.mapping={...e},this.trigger(O),this.mapping}mapKey(e,t){return this.mapping[e]=t,this.trigger(O),!0}mapUnmappedKey(e,t){return this.mapping[e]?!1:this.mapKey(e,t)}unmapKey(e){return this.mapping[e]?!1:(delete this.mapping[e],this.trigger(O),!0)}mount(){this.document.addEventListener(re,this.keyDownListener),this.document.addEventListener(ie,this.keyUpListener),this.trigger(me)}unmount(){this.document.removeEventListener(re,this.keyDownListener),this.document.removeEventListener(ie,this.keyUpListener),this.trigger(fe)}handleKeyDown(e){const{key:t,code:n,keyCode:s,altKey:i,ctrlKey:a,shiftKey:o,metaKey:l,repeat:c}=e,u={code:n,keyCode:s,altKey:i,ctrlKey:a,shiftKey:o,metaKey:l,repeat:c},{nodeName:h}=e.target;if(this.nodeNamesDontTrigger.includes(h))return;if(this.nodeNamesAllowDefault.includes(h)||e.preventDefault(),!c){const p=this.mapping[t];this.keysDown[t]=!0,p&&(this.commandsDown[p]=!0)}(!c||this.triggerOnRepeat)&&this.triggerKey(t,u)}handleKeyUp(e){const{key:t}=e,n=this.mapping[t];this.keysDown[t]=!1,n&&(this.commandsDown[n]=!1)}setupEventListeners(e={}){Je.forEach(t=>{e[t]&&this.on(t,e[t])})}triggerCommand(e){this.trigger(de,e)}triggerMissingCommand(e){this.trigger(pe,e)}triggerKey(e){const t=this.mapping[e];t?this.triggerCommand(t):this.triggerMissingCommand(e)}getKeysMapped(){return Object.keys(this.mapping)}getCommands(){const e=new Set;return this.getKeysMapped().forEach(t=>e.add(this.mapping[t])),Array.from(e)}isKeyDown(e){return this.keysDown[e]}isCommandDown(e){return this.commandsDown[e]}getKeysDown(){return Object.keys(this.keysDown).filter(e=>this.keysDown[e])}getCommandsDown(){return Object.keys(this.commandsDown).filter(e=>this.commandsDown[e])}clearDown(){this.keysDown={},this.commandsDown={}}}class et{constructor(e){e||console.warn("No states param"),this.states=e||{},this.kbCommander=new Ze({},{triggerOnRepeat:!0})}setup(e="button"){document.querySelectorAll(e).forEach(t=>{t.dataset.key&&t.addEventListener("click",()=>{this.kbCommander.triggerKey(t.dataset.key)})})}on(e,t){this.kbCommander.on(e,t)}setState(e,t){var s;if(!this.states[e])throw new Error(`Unknown state ${e}`);const n=((s=this.states[e])==null?void 0:s.kb)||{};this.kbCommander.setMapping(n),this.kbCommander.off(),this.kbCommander.on("command",t),this.kbCommander.on("missingCommand",(...i)=>console.warn("Missing command",i))}}function tt(r,e=0,t=1){return r<e?e:r>t?t:r}function nt(r=1,e=0){return e+Math.random()*(r-e)}function st(r,e=0){return Math.floor(nt(r,e))}function R(r,e=0){const t=Math.max(r,e)+1;return st(t,Math.min(r,e))}function rt(r,e,t,n){return(r-t)**2+(e-n)**2}function ge(r,e,t,n){return rt(r,e,t,n)**.5}const we=r=>new Promise(e=>{setTimeout(e,r)}),P=r=>r.charAt(0).toUpperCase()+r.slice(1);function ae(r){if(!r)return null;const e=Number(r);return Number.isNaN(e)?null:e}function it(r,e){return r===e?!0:typeof r.entId=="number"&&r.entId===e.entId}function ye(r){return typeof r=="object"&&(typeof r.entTypeId=="number"||typeof r.entId=="number")}class W{constructor(e){this.allTypes={},this.allTypesArray=[],this.buildAllTypes(e)}static getExtendedType(e={},t={},n=0){let s=structuredClone(e);const{type:i,typeKey:a}=s;if(s.types||(s.types=[]),a&&s.types.push(a),i)if(t[i]){const o=W.getExtendedType(t[i],t,n+1);s.types=[...o.types,i],s={...o,...s}}else console.log(s),console.error("Could not find type",e.type);return s.types=Array.from(new Set(s.types)),structuredClone(s)}getExtendedType(e={}){return W.getExtendedType(e,this.allTypes)}createUntrackedEntityByType(e){return this.getExtendedType({type:e})}buildAllTypes(e){this.allTypes={},this.allTypesArray=[],Object.keys(e).sort().forEach(n=>{const s=e[n];if(this.allTypesArray[n]){console.error("Type",n,"already exists and will be skipped.");return}this.allTypes[n]=s,this.allTypesArray.push(s),s.typeKey&&s.typeKey!==n&&console.warn("Existing typeKey does not match",n,"and will be overwritten"),s.entTypeId=this.allTypesArray.length-1,s.typeKey=n}),this.allTypesArray.forEach(n=>{const s=W.getExtendedType(n,this.allTypes);this.allTypes[s.typeKey]=s,this.allTypesArray[s.entTypeId]=s}),this.allTypesArray.forEach(n=>{n.name||(n.name=P(n.typeKey))}),console.log("All types:",this.allTypes)}get(e){return this.allTypes[e]}getTerrainSpriteName(e){const t=this.get(e);if(!t)return console.error("Unknown terrain key",e),"";const{sprite:n,variations:s}=t;if(!s)return n;const i=s?Math.floor(Math.random()*s):"0";return`${n}-${i}`}getEntitySpriteName(e){const t=this.get(e);if(!t)return"";const{sprite:n,variations:s}=t;if(!s)return n;const i=Math.floor(Math.random()*s);return`${n}-${i}`}}function at(r,e){!r.currencies||!e.currencies||Object.entries(r.currencies).forEach(([t,n])=>{e.currencies[t]=(e.currencies[t]||0)+n,r.currencies[t]=0})}function ot(r){r.currencies&&Object.entries(r.currencies).forEach(([e,t])=>{t instanceof Array&&(r.currencies[e]=R(t[0]||0,t[1]||0))})}const lt=255;function U(r,e){if(!r.inventory)return!1;const{max:t=lt}=r.inventory;return ye(e)?r.inventory.contents.length>=t?!1:(r.inventory.contents.push(e),!0):(console.warn("Trying to give a non entity",e,"to",r),!1)}function be(r,e,t=1){if(!r.inventory)return!1;const n=[];return r.inventory.contents=r.inventory.contents.map(s=>{if(n.length>=t)return s;if(typeof e=="number"){if(s.entId===e)return n.push(s),null}else if(typeof e=="string"){if(s.type===e)return n.push(s),null}else if(typeof e=="object"&&it(s,e))return n.push(s),null;return s}).filter(s=>!!s),n}function ct(r,e=()=>null){return r.inventory?(r.inventory.contents||(r.inventory.contents=[]),r.inventory.contents=r.inventory.contents.map(t=>typeof t=="string"?e(t):ye(t)?t:(console.warn("Unexpected thing found in inventory",t,r,"Removing it."),null)).filter(t=>!!t),!0):!1}class ut{constructor(e){this.entityTypes=e,this.all=[],this.nextEntId=1}add(e={}){console.log("Add",e);const t=this.entityTypes.getExtendedType(e),n=structuredClone(t),s=i=>this.add({type:i});if(ot(n),ct(n,s),n.entId=this.nextEntId,n.isActor){const{whoId:i=`actor-ent-${this.nextEntId}`}=n;if(this.getActor(i))throw new Error(`Already have an actor with whoId ${i}`);n.whoId=i}return this.all.push(n),this.nextEntId+=1,n}addAvatar(e){this.add({...e,type:"avatar",isAvatar:!0})}addAllFromMaps(e){console.log(this.entityTypes),e.reduce((n,s)=>[...n,...s.getEntities()],[]).forEach(n=>this.add(n)),console.log("All Entities",this.all)}getActor(e){return this.all.find(t=>t.whoId===e)}getAvatars(){return this.all.filter(e=>e.isAvatar)}getActors(){return this.all.filter(e=>e.isActor)}getAvatarMapIds(){const e=new Set;return this.getAvatars().forEach(t=>e.add(t.mapId)),[...e]}getActorsOnMap(e){return this.all.filter(t=>t.isActor&&t.mapId===e)}getEntitiesOnMap(e){return this.all.filter(t=>t.mapId===e)}getEntitiesOnMapRange(e,t=0,n=0,s=10,i=10){const a=t+s,o=n+i;return this.all.filter(l=>l.mapId===e&&l.x>=t&&l.x<a&&l.y>=n&&l.y<o)}}class B{constructor(e,t={},n=null){if(!e||typeof e!="object")throw new Error("Missing mapData object");this.mapKey=e.mapKey,this.id=e.id,this.globalLegend=Object.freeze(structuredClone(t)),this.entityTypes=n,this.base=Object.freeze(structuredClone(e)),this.time=0,this.exits=B.makeExits(this.base.exits),this.height=this.base.map.length,this.width=this.base.map.reduce((s,i)=>Math.max(s,i.length),0),this.maxX=this.width-1,this.maxY=this.height-1,this.terrainObstacleIds={}}static makeMaps(e={},t={},n={},s=null){const i=[];return Object.keys(e).sort().forEach(o=>{const l=i.length,c=e[o],u=n[c==null?void 0:c.mapType]||null,h=new B({...u,...c,mapKey:o,id:l},t,s);i.push(h)}),i}static makeExits(e={}){return{left:e.left||e.edges||"BLOCK",right:e.right||e.edges||"BLOCK",top:e.top||e.edges||"BLOCK",bottom:e.bottom||e.edges||"BLOCK",up:e.up||"BLOCK",down:e.down||"BLOCK"}}getEntities(){const e=this.id,{map:t,legend:n}=this.getData(),s=Object.keys(n).filter(o=>n[o].length>1),i=s.reduce((o,l)=>{const c=n[l].slice(1).map(u=>typeof u=="string"?{type:u}:u);return{...o,[l]:c}},{}),a=[];return t.forEach((o,l)=>{o.split("").forEach((c,u)=>{s.includes(c)&&i[c].forEach((h,d)=>{a.push({...structuredClone(h),mapId:e,x:u,y:l,origin:{mapId:e,x:u,y:l,legendIndex:d}})})})}),a}isOffEdge(e,t){return e<0||e>this.maxX||t<0||t>this.maxY}getOffEdge(e,t){return e<0?"left":e>this.maxX?"right":t<0?"top":t>this.maxY?"bottom":!1}getData(){const e={...this.globalLegend,...this.base.legend};return{...this.base,legend:e}}getName(){return this.getData().name||this.mapKey}getOverflowEntityType(){var e;return((e=this.getData())==null?void 0:e.overflow)||"void"}getExit(e){return this.exits[e]||"BLOCK"}getLoopedCoordinates(e,t){return[e>0?e%this.width:(e%this.width+this.width)%this.width,t>0?t%this.height:(t%this.height+this.height)%this.height]}getCellData(e,t){const{map:n,legend:s}=this.getData();if(e<0||t<0||n[t]===void 0||n[t][e]===void 0)return null;const i=n[t][e],a=s[i];return a||(console.warn("Missing",i,"at",e,t,n[t]),null)}getTopProperty(e,t,n){const s=this.getCellData(t,n);let i;for(let a=s.length-1;a>=0;a-=1)if(i=s[a],typeof i=="object"&&i[e]!==void 0)return i[e];return null}getTopEntityType(e,t){const n=this.getCellData(e,t);if(!n)return null;if(n.length===0)return this.getOverflowEntityType();const s=n[n.length-1];return typeof s=="string"?s:s.entityTypeKey||s.entityType||s.type||this.getOverflowEntityType()}getTerrainTypeKey(e,t){const n=this.getCellData(e,t);if(!n)return this.getOverflowEntityType();const[s]=n;return s}createUntrackedTerrainEntity(e,t){const n=this.getTerrainTypeKey(e,t);return this.entityTypes.createUntrackedEntityByType(n)}getTerrainEntity(e,t){return this.createUntrackedTerrainEntity(e,t)}getTerrainObstacleId(e,t){const n=`${e}-${t}`;if(!this.terrainObstacleIds[n]){const s=this.createUntrackedTerrainEntity(e,t);this.terrainObstacleIds[n]=s.obstacleId}return this.terrainObstacleIds[n]}getEntranceCoordinates(){let[e=0,t=0]=this.getData().entrance||[];return e==="center"?e=Math.floor(this.width/2):e==="left"?e=0:e==="right"&&(e=this.maxX),t==="bottom"?t=this.maxY:t==="top"?t=0:t==="center"&&(t=Math.floor(this.height/2)),[Math.round(e),Math.round(t)]}}class ht{constructor(e){this.queue=[],e.forEach(t=>this.add(t)),this.sort(),this.time=0}add(e){if(!e.action){console.warn("Actor does not have action component so cannot be added to schedule",e);return}this.queue.push(e),this.sort()}sort(){this.queue.sort((e,t)=>e.action.cooldown===t.action.cooldown?e.isAvatar?-1:0:e.action.cooldown-t.action.cooldown)}top(){return this.queue[0]}coolToTop(){const e=this.top(),[t,n,s]=e.action,i=s-this.time;return this.time=s,e.action.isWarmingUp=0,{whoId:t,isWarmingUp:n,deltaT:i}}}const oe=1,z="readwrite",dt="readonly",L=5e3,{indexedDB:H,setTimeout:pt,clearTimeout:le,URL:mt,open:ft}=window,b=class b{constructor(e,t,n=null){this.dbName=e||null,this.version=t||oe,this.db=n||null,this.timeout=L}static async openDatabase(e,t=oe,n,s){return new Promise((i,a)=>{const o=(c,u)=>{var h,d;console.error(c,(d=(h=u==null?void 0:u.target)==null?void 0:h.error)==null?void 0:d.message,u),a(new Error(`open database failed ${c}`))},l=H.open(e,t);l.onsuccess=c=>{var h;const u=(h=c==null?void 0:c.target)==null?void 0:h.result;s&&s(u,c),i(u)},l.onupgradeneeded=c=>{var h;const u=(h=c==null?void 0:c.target)==null?void 0:h.result;n&&n(u,c)},l.onerror=c=>o("error",c),l.onabort=c=>o("abort",c),l.onclose=c=>o("close",c)})}static openBlob(e){ft(mt.createObjectURL(e))}static makeTimedPromise(e,t="",n=L){return new Promise((s,i)=>{const a=pt(()=>i(new Error(`Timed out ${t}`)),n);e((...c)=>{le(a),s(...c)},(c,...u)=>{le(a),console.error(c,u),i(new Error(`${c} ${t||""}`))})})}static waitForTransaction(e,t="",n=L){return b.makeTimedPromise((s,i)=>{e.oncomplete=a=>s(a),e.onerror=a=>i("error",a,e),e.onabort=a=>i("abort",a,e)},`transaction ${t}`,n)}static waitForRequest(e,t="",n=L){return b.makeTimedPromise((s,i)=>{e.onsuccess=a=>s(a.target.result),e.onerror=a=>i("error",a,e),e.onabort=a=>i("abort",a,e),e.onclose=a=>i("close",a,e)},`request ${t}`,n)}static waitForCursorValueRequest(e,t="",n=L){return b.makeTimedPromise((s,i)=>{const a=[];e.onsuccess=o=>{const l=o.target.result;if(l){a.push(l.value),l.continue();return}s(a)},e.onerror=o=>i("error",o,e)},`cursor request ${t}`,n)}async waitForRequest(e,t=""){return await b.waitForRequest(e,t,this.timeout),e}handleError(e,...t){console.error("SIDB Error:",e,...t)}async getDatabases(){return await H.databases()}getDatabaseName(){if(!this.db)throw new Error("db is missing");return this.db.name}getObjectStoreNames(){return this.db.objectStoreNames}hasObjectStoreName(e){return this.getObjectStoreNames().contains(e)}getTransaction(e,t=z){if(!this.db)throw new Error("db is missing");return this.db.transaction(e,t)}getObjectStore(e,t=z){return this.getTransaction(e,t).objectStore(e)}async addToObjectStore(e,t,n){const s=this.getObjectStore(e).add(t);return await this.waitForRequest(s,n||`add to ${e}`),s}async putToObjectStore(e,t,n){const s=this.getObjectStore(e).put(t);return await this.waitForRequest(s,n||`put to ${e}`),s}async deleteFromObjectStore(e,t,n){const s=this.getObjectStore(e).delete(t);return await this.waitForRequest(s,n||`delete ${t}`),s}async getFromObjectStore(e,t,n){const s=this.getObjectStore(e).get(t);return await this.waitForRequest(s,n||`get ${t}`),s}async readIndexCursorValues(e,t){const s=this.getObjectStore(e).openCursor();return await b.waitForCursorValueRequest(s)}setDatabase(e){this.db=e,e.onabort=(...t)=>this.handleError("abort",t),e.onclose=(...t)=>this.handleError("close",t),e.onerror=(...t)=>this.handleError("error",t),e.onversionchange=(...t)=>{console.warn("versionchange",t)}}close(){this.db&&(this.db.close(),this.db=null)}async delete(){this.close();const e=H.deleteDatabase(this.dbName);await b.waitForRequest(e,"delete")}async open(){this.close();const e=await b.openDatabase(this.dbName,version);return this.setDatabase(e),this.db}async create(e=()=>{}){await this.delete();const t=await b.openDatabase(this.dbName,this.version,e);return this.setDatabase(t),this.db}async upgrade(e=()=>{}){this.version+=1,this.close();const t=await b.openDatabase(this.dbName,this.version,e);return this.setDatabase(t),this.db}async createObjectStore(e,t){let n;return await this.upgrade(s=>{n=s.createObjectStore(e,t)}),n}async deleteObjectStore(e,t){let n;return await this.upgrade(s=>{n=s.deleteObjectStore(e,t)}),n}};F(b,"READ_WRITE",z),F(b,"READ_ONLY",dt);let V=b;class gt{constructor(){this.db=new V("worldSaves",1),this.tableName="test-save"}async setup(){await this.db.create(e=>{e.createObjectStore(this.tableName,{keyPath:"path"})})}async saveWorld(e,t){console.log("Saving world"),await this.db.addToObjectStore(this.tableName,{path:1,test:123,saveName:t})}}function j(r={}){let{success:e=null,message:t=""}=r;const{deltaData:n=null}=r,{followUp:s=null,cooldownMultiplier:i=1,quiet:a=!1}=r;return r instanceof Array&&([e,t]=r),{success:e,message:t,followUp:s,cooldownMultiplier:i,quiet:a,deltaData:n}}function ve(r,e,t){return r.filter(n=>n.x===e&&n.y===t)}function Ce(r,e){return ve(r,e.x,e.y).filter(t=>t.entId!==e.entId)}function J(r,e,t){const n=Number(t);if(!Number.isNaN(n))return r.filter(o=>o.entId!==n?!1:Math.abs(e.x-o.x)+Math.abs(e.y-o.y)<=1);const s=A[t];if(!s)return[];const i=e.x+s[0],a=e.y+s[1];return ve(r,i,a)}function Ee(r=[],e=""){const t=r.filter(n=>n[e]);return t.length?t[0][e]:null}function wt(r=[],e=0,t=0,n=null){let s=1/0,i=null;return r.forEach(a=>{if(n&&!n(a))return;const o=ge(a.x,a.y,e,t);o<s&&(s=o,i=a)}),[i,s]}function yt(r,e){return ge(r.x,r.y,e.x,e.y)}function bt(r,e){const t=e.x-r.x,n=e.y-r.y;return t===0&&n===0?(console.warn("Could not give a direction between",r,e),""):Math.abs(t)>Math.abs(n)?t<0?"left":"right":n<0?"up":"down"}function vt(r,e){return(typeof r.speed=="number"?r.speed:1)*(typeof e.speed=="number"?e.speed:1)}function Ct(r,e){const t=(r==null?void 0:r.factions)||{},n=(e==null?void 0:e.factions)||{},s=[...Object.keys(t),...Object.keys(n)];return[...new Set(s)].reduce((o,l)=>{const c=t[l]||0,u=n[l]||0;return c===0||u===0?o:Math.sign(c)===Math.sign(u)?o+Math.min(Math.abs(c),Math.abs(u))*2:o-Math.abs(c-u)},0)}function Te(r){let e=0;return typeof r=="object"?e=R(r[0],r[1]):typeof r=="number"&&(e=r),Number.isNaN(e)?(console.error(r,"-->",e),0):e}function Et(r,e,t){const n=Te(e);return r.health.hp-=n,console.log("	",r.name,"took",n,"damage. HP:",r.health.hp,t),[n,r.health.hp]}function Tt(r=[],e=0,t=""){const n=Te(e),s=r.filter(l=>l.health),i=Math.floor(n/s.length),a=n-i*s.length;return s.map((l,c)=>Et(l,c===0?i+a:i,t))}function St(r){var e;return!r.firer||!r.firer.natural?0:((e=r==null?void 0:r.firer)==null?void 0:e.range)||0}function E(r){var e,t;return((e=r==null?void 0:r.health)==null?void 0:e.hp)&&((t=r==null?void 0:r.health)==null?void 0:t.hp)>0}function It(r,e){at(e,r)}function kt(r,e=0){r.experience&&(r.experience.totalXp+=e)}function xt(r,e){!r.experience||!e.experience||e.experience.killXp&&kt(r,e.experience.killXp)}const w=null,At={head:w,neck:w,torso:w,waist:w,legs:w,leftHand:w,rightHand:w,back:w,leftFinger:w,rightFinger:w,mainHandHeld:w,offHandHeld:w},Mt=Object.keys(At).map(r=>[r.toLowerCase(),r]).reduce((r,[e,t])=>({...r,[e]:t}),{});function Dt(r,e){return r===e?!0:typeof r.entId=="number"&&r.entId===e.entId}function Lt(r){return Mt[r.toLowerCase()]}function M(r,e){return e?typeof r.equipment[e]<"u":!!(r.equipment&&Object.keys(r.equipment).length)}function Wt(r){var e;return!!((e=r==null?void 0:r.equippable)!=null&&e.slots&&r.equippable.slots.length)}function qt(r,e){return!M(e)||!Wt(r)?!1:r.equippable.slots.filter(n=>M(e,n)).length>0}function Rt(r,e){return M(r)?r.equipment[e]===w:!1}function Se(r,e){if(!e.equipment)return[];const t=typeof r=="number";return Object.entries(e.equipment).find(([,s])=>!s||s===w?!1:t?s.entId===r:Dt(s,r))||[]}function Ut(r,e){if(!e.equipment)return null;const[t]=Se(r,e);return t}function G(r,e){return M(e)?!!Ut(r,e):!1}function Z(r){return M(r)?Object.values(r.equipment).filter(e=>e):[]}function ee(r,e,t){if(!qt(e,r))return!1;if(G(e,r))return console.warn("Already equipped. Will not try to equip again. Unequip first."),!0;const n=o=>{const l=r.equipment[o];return r.equipment[o]=e,l||!0},s=e.equippable.slots.filter(o=>M(r,o));if(!s.length)return!1;const i=s.filter(o=>Rt(r,o)),a=i.length?i[0]:s[0];return n(a)}function Ie(r,e){const[t,n]=Se(e,r);return t?(r.equipment[t]=w,n):!1}function Nt(r){var l,c,u,h;if(!r.attacker)return[0,""];const e=((l=r.attacker)==null?void 0:l.natural.damage)||0,t=typeof e=="number"?e:e[1]||0,s=Z(r).find(d=>{var p;return(p=d==null?void 0:d.attackable)==null?void 0:p.damage}),{damage:i=0,type:a=""}=(s==null?void 0:s.attackable)||{},o=i instanceof Array?i[i.length-1]:i;return console.log(s,"vs",(c=r.attacker)==null?void 0:c.natural),t>o?[e,((h=(u=r.attacker)==null?void 0:u.natural)==null?void 0:h.damageType)||""]:(console.log("Using item for attack",s),[i,a])}function $t(r){var n;const e=Z(r);return Math.max(((n=r==null?void 0:r.attacker)==null?void 0:n.range)||1,...e.map(s=>{var i;return((i=s==null?void 0:s.attackable)==null?void 0:i.range)||0}))}function Ot(r,e,t,n){let s=J(t,r,n);if(!s.length)return[!0,`No one to fight (${n}).`];if(s=s.filter(d=>E(d)),!s.length)return[!0,`No effect! (fight ${n})`];const[i,a]=Nt(r),c=Tt(s,i,a).map(d=>d[0]).join(",");let u=0;s.forEach(d=>{E(d)||(u+=1,It(r,d),xt(r,d))});let h="";return u===1?h=` and kill ${s[0].name}`:u>1&&(h=` and kill ${u} enemies`),[!0,`Attack for ${c} damage${h}`]}function jt(r,e,t){if(!r.enterer)return[!1,"You cannot enter."];const n=Ee(Ce(t,r),"enter");if(!n){const i=this.klimb(r,e,t),{success:a}=j(i);return a?i:[!1,"There is nothing to enter."]}if(!n.mapKey)return[!1,"Error entering!"];const s=[n.mapKey];return{success:!0,message:"You enter a new location.",followUp:["moveActorMap",r,s]}}function Pt(r){var e;return(((e=r==null?void 0:r.currencies)==null?void 0:e.food)||0)>0}function Bt(r){return(r==null?void 0:r.eater)&&!Pt(r)}function ke(r,e){var s,i,a;if(!((s=r==null?void 0:r.currencies)!=null&&s.food)||!((i=r==null?void 0:r.eater)!=null&&i.moveMeal))return!1;const{moveMealMultiplier:t=1}=e.base,n=(((a=r==null?void 0:r.eater)==null?void 0:a.moveMeal)||0)*t;return r.currencies.food=Math.max(0,r.currencies.food-n),!0}function _(r,e){var t;if(r.isAvatar&&r.mover&&(r.mover.movesCount=(r.movesCount||0)+1),ke(r,e),typeof((t=r==null?void 0:r.experience)==null?void 0:t.totalXp)=="number"){const{moveXpMultiplier:n=0}=e.base;r.experience.totalXp+=1*n}}function Kt(r,e,t,n,s,i){if(!r.exitor)return[!1,"You cannot exit."];const a=e.getExit(t);if(a instanceof Array)return _(r,e),{success:!0,message:`You leave ${e.getName()}.`,followUp:["moveActorMap",r,a]};if(a==="BLOCK")return[!1,`Blocked ${i}.`];if(a==="LOOP"){const[o,l]=e.getLoopedCoordinates(n,s);return r.x=o,r.y=l,_(r,e),[!0,`You move ${i}`]}return[!1,"You cannot move."]}function Yt(r,e,t,n){const{mover:s}=r;if(!s)return[!1,"You cannot move"];const i=A[n];if(!i)return[!1,"Invalid direction to move"];const a=r.x+i[0],o=r.y+i[1],l=e.getOffEdge(a,o);if(l)return Kt(r,e,l,a,o,n);const h=[e.getTerrainObstacleId(a,o),...t.filter(f=>f.x===a&&f.y===o).filter(f=>!f.isActor||E(f)).map(f=>f.obstacleId)].map(f=>(s==null?void 0:s.transversal[f])||0),d=Math.min(...h);if(!d)return[!1,`Blocked ${n}.`];r.x=a,r.y=o,_(r,e);const g=1/d*(Bt(r)?2:1);return{success:!0,message:`You move ${n}.`,cooldownMultiplier:g}}function Ft(r,e){return ke(r,e),[!0,"You wait a moment."]}function Xt(r){return r.split(" ").map(e=>{const[t,n]=e.split("="),s=[];return n.split(",").forEach(i=>{const[a,o]=i.split(":");if(!a||!o){console.error("Bad slot or entId",a,o,t);return}s[Lt(a)]=Number(o)}),{memberIndex:Number(t),matchEquip:s}})}function ce(r,e){const t=be(r,e);if(t.length!==1)return!1;const n=ee(r,t[0]);return n?(typeof n=="object"&&U(r,n),!0):(U(r,n),!1)}function zt(r,e){const t=Ie(r,e);return t?U(r,t)?!0:(ee(r,t),!1):!1}function Ht(r,e={}){const t=[],n=[];return Object.entries(r.equipment).forEach(([s,i])=>{const a=e[s];if(i===w){if(!a)return;ce(r,a)&&t.push(a);return}if(a){if(i.entId===a)return;ce(r,a)&&(t.push(a),n.push(i.entId));return}zt(r,i.entId)&&n.push(i.entId)}),[t,n]}function Vt(r,e,t,n){const s=Xt(n);let i=[],a=[];s.forEach(({matchEquip:u})=>{const[h,d]=Ht(r,u);i=i.concat(h),a=a.concat(d)});const o=i.length,l=a.length;if(!o&&!l)return[!1,"Did not change equipment."];let c="";return o?(c=`Equipped ${o}`,l?c+=` and unequipped ${l} item${l>1?"s":""}.`:c+=` item${o>1?"s":""}.`):l&&(c=`Unequipped ${l} item${l>1?"s":""}.`),[!0,c]}function Gt(r,e,t,n,s){const i=s.runAction("transact",r,e,t,n);return i.success?i:[!1,`Talk ${n} not yet implemented.`]}const _t=10;function Qt(r={}){var n,s,i,a;let e=1;e+=(((n=r.attackable)==null?void 0:n.damage)||0)*1,e+=(((s=r.attackable)==null?void 0:s.range)||0)*2,e+=(((i=r.buff)==null?void 0:i.spellDamageBonus)||0)*5,e+=(((a=r.buff)==null?void 0:a.defense)||0)*5;const{valueMultiplier:t=1}=r.valuable;return Math.max(0,Math.round(e*t))}function Jt(r={},e=null,t=0){const{sell:n={}}=r;if(n.stock)return r;const s=n.types.filter((i,a)=>{var o;return n.gateByMovesCount?t>=((o=n.gateByMovesCount)==null?void 0:o[a])||0:!0});return n.stock=s.map((i,a)=>{var u,h;const o=e.entityTypes.createUntrackedEntityByType(i),l=Qt(o),c=((u=n.quantity)==null?void 0:u[a])===0?0:((h=n.quantity)==null?void 0:h[a])||R(1,_t);return[o.name,i,l,c]}),r}function Zt(r,e,t,n,s){const i=n.split(" "),a=i.shift(),o=J(t,r,a).filter(p=>E(p));if(!o.length)return[!0,`No one to transact (${a}).`];const l=o[0];if(!l.shop)return[!0,`${l.name} does not buy or sell.`];const c=structuredClone(l.shop);c.entId=l.entId,Jt(c,e),s.coolDownActor(l,"transact");const u=i.filter(p=>p[0]==="+"||p[0]==="-");if(!u.length)return{success:!0,message:`${l.name} shows what they buy and sell...`,deltaData:{shop:c}};let h=0,d=0;return u.forEach(p=>{const g={"+":"buy","-":"sell"}[p.substr(0,1)],f=p.substr(1).split(",").map(I=>{const[k,Ae=1]=I.split("x");return[ae(k),ae(Ae)||0]}).filter(([I,k])=>typeof I=="number"&&k&&k>0),[v,T]=f;g==="buy"?void 0&&(h+=1):g==="sell"&&void 0&&(d+=1)}),[!0,`Bought: ${h}, Sold: ${d}`]}const en=100;function tn(r,e,t){return[!1,"Not yet implemented."]}function nn(r,e,t){return[!1,"Not yet implemented."]}function sn(r,e,t){return[!1,"Not yet implemented."]}function rn(r,e,t){return this.enter(r,e,t)}function an(r,e,t){return[!1,"Not yet implemented."]}function on(r,e,t,n){return J(t,r,n).filter(i=>i.health).length?this.attack(r,e,t,n):this.fire(r,e,t,n)}function ln(r,e,t,n){return[!1,"Firing not yet implemented."]}function cn(r,e,t){return[!1,"Not yet implemented."]}function un(r,e,t){return[!1,"Not yet implemented."]}function hn(r,e,t){return[!1,"Without precise calculations you could fly right through a star!"]}function dn(r,e,t){return[!1,"Torches not yet implemented."]}function pn(r,e,t){return[!1,"Not yet implemented."]}function mn(r,e,t){return[!1,"Junk not yet implemented."]}function fn(r,e,t){return[!0,"You jump. Wee!"]}function gn(r,e,t){return[!1,"Jimmy not yet implemented."]}function wn(r,e,t,n){if(!r.klimber)return[!1,"You cannot climb."];const s=Ee(Ce(t,r),"klimbable");if(!s)return[!1,"There is nothing to climb here."];const{direction:i}=s;if(n&&i!==n)return[!1,`Cannot climb ${n} here.`];const a=e.getExit(i);return a?{success:!0,message:`You climb ${i}.`,cooldownMultiplier:vt(r.klimber,s),followUp:["moveActorMap",r,a,!0]}:[!1,"Cannot exit the area."]}function yn(r,e,t){return[!0,"You pretend to be a rocket. Wee!"]}function bn(r,e,t){return[!1,"Not yet implemented."]}function vn(r,e,t,n){return[!0,"You do not have a mortar and pestle."]}function Cn(r,e,t){return[!1,"Not yet implemented."]}function En(r,e,t){return[!0,"You have no powers of negation yet."]}function Tn(r,e,t,n){return[!1,"Not yet implemented."]}function Sn(r,e,t){return[!1,"Not yet implemented."]}function In(r,e,t,n){return[!1,"Not yet implemented."]}function kn(r,e,t){return[!1,"Not yet implemented."]}function xn(r,e,t){if(!r.plan)return y.enqueueWithoutWarmup(r,"pass"),{success:!1,quiet:!0,message:"No thinking."};const{randomMove:n=.5,aggroRange:s=0,hunt:i=!1}=r.plan;if(i){const[a,o]=wt(t,r.x,r.y,l=>!(!l.isActor||r.whoId===l.whoId||yt(l,r)>s||Ct(l,r)>=0));if(a){const l=bt(r,a);if(l){const c=$t(r),u=St(r),h=o<=c||o<=u?"fight":"move";return y.enqueueWithoutWarmup(r,h,l),[!0,`Planning the hunt (${h})`]}}}if(Math.random()<n){const a=Math.floor(Math.random()*4)+1;y.enqueueWithoutWarmup(r,"move",Re[a])}else y.enqueueWithoutWarmup(r,"pass");return{success:!0,message:"Plan success",quiet:!0}}function An(r,e,t,n){return[!1,"Not yet implemented."]}function Mn(r,e,t){return[!1,"Not yet implemented."]}function Dn(r,e,t,n){return[!1,"Not yet implemented."]}function Ln(r,e,t,n){return{success:!0,message:`You prepare to ${n}.`,quiet:!0}}function Wn(r,e,t){return[!0,"You yell loudly."]}const Q={attack:Ot,board:tn,camp:nn,cast:sn,engage:rn,enter:jt,dismount:an,fight:on,fire:ln,get:cn,heal:un,hyperjump:hn,ignite:dn,investigate:pn,junk:mn,jump:fn,jimmy:gn,klimb:wn,launch:yn,locate:bn,mix:vn,move:Yt,navigate:Cn,negate:En,open:Tn,offer:Sn,pass:Ft,pickpocket:In,peer:kn,plan:xn,push:An,ready:Vt,summon:Mn,talk:Gt,transact:Zt,unlock:Dn,warmup:Ln,yell:Wn},qn=Object.keys(Q);class y{constructor(e={},t={}){this.actionsConfig=structuredClone(e);const{actionCooldown:n=We,actionCooldownRandom:s=0,actionWarmup:i=qe,actionWarmupRandom:a=0}=t;this.actionCooldown=n,this.actionCooldownRandom=s,this.actionWarmup=i,this.actionWarmupRandom=a,this.lastKnownTimeNow=0}static has(e){return qn.includes(e.toLowerCase())}static hasAction(e){return e.action?e.action.queue&&e.action.queue.length:!1}static hasReadyAction(e,t){return y.hasAction(e)?e.action.cooldown<=t:!1}static isWaitingForAction(e,t){return!y.hasAction(e)&&e.action.cooldown<=t}static handleDeadActor(e){E(e)||(e.action.queue=[["pass"]],e.action.cooldown+=en)}static enqueueWithoutWarmup(e,t,n){e.action.queue.push([t,n])}coolDownActor(e,t,n){const{action:s}=e,i=typeof t=="string",a=i?t:"pass",o=i?1:t,l=Math.max(Math.round(this.getCooldownTime(a)*o),1);s.cooldown=Math.ceil((n||this.lastKnownTimeNow)+l)}enqueue(e,t,n){this.getWarmupTime(t)&&e.action.queue.push(["warmup",t]),e.action.queue.push([t,n])}enqueuePlan(e){if(!E(e)){y.handleDeadActor(e);return}this.enqueue(e,"plan")}runAction(e,t,n,s,i){if(!e)throw new Error("Missing actionName");if(!Q[e])throw new Error(`Invalid actionName ${e}`);const a=Q[e](t,n,s,i,this);return j(a)}perform(e,t,n,s){if(typeof s=="number"&&(this.lastKnownTimeNow=s),!y.hasReadyAction(e,s))return j([!1,"No ready actions."]);const{action:i}=e,a=i.queue.shift(),[o,l=""]=a;if(!E(e)&&o!=="pass")return y.handleDeadActor(e),j([!1,`Cannot ${o} while dead`]);const c=this.runAction(o,e,t,n,l),{success:u,cooldownMultiplier:h}=c;if(u){const d=Math.max(Math.round(this.getCooldownTime(o,l)*h),1);i.cooldown=Math.ceil(s+d)}return c}getWarmupTime(e){var t;return(((t=this.actionsConfig[e])==null?void 0:t.warmup)||0)*(this.actionWarmup+R(this.actionWarmupRandom))}getCooldownTime(e,t){var n;return e==="warmup"?this.getWarmupTime(t):(((n=this.actionsConfig[e])==null?void 0:n.cooldown)||0)*(this.actionCooldown+R(this.actionCooldownRandom))}}class Rn{constructor(e={},t={},n=null){this.worldComm=n,this.entityTypes=new W(e==null?void 0:e.entityTypes),this.actions=new y(t,e==null?void 0:e.timing),this.time=0,this.maps=B.makeMaps((e==null?void 0:e.maps)||{},e==null?void 0:e.globalLegend,e==null?void 0:e.mapTypes,this.entityTypes),this.connections={},this.ents=new ut(this.entityTypes),this.schedulerQueues={},this.worldLog=[],this.deltas=[],this.maxDeltas=99,this.ents.addAllFromMaps(this.maps),this.saveLoadManager=new gt}async load(){const e=this.maps.findIndex(t=>t.mapKey==="overworld");this.ents.addAvatar({type:"avatar",whoId:"my-avatar-1",mapId:e,x:10,y:6}),this.time=100,this.maps.forEach(t=>{t.time=this.time}),this.ents.getActors().forEach(t=>{t.action.cooldown=this.time}),this.updateAllClients(),await this.saveLoadManager.setup(),this.save()}async save(){await this.saveLoadManager.saveWorld(this,"test-save")}connect(e,t={}){this.connections[e]={visibleWorldHeight:3,visibleWorldWidth:3,...t,commandQueue:[]}}getActor(e){const t=this.ents.getActor(e);return t||console.warn("Could not find",e),t}getActorMapId(e){return this.getActor(e).mapId}getActorMap(e){return this.getMap(this.getActorMapId(e))}getMap(e){return typeof e=="number"?this.maps[e]:this.maps.find(t=>t.mapKey===e)}getMapData(e){var t;return((t=this.maps[e])==null?void 0:t.getData())||{}}getTerrainSpriteAt(e,t,n){const i=this.getMap(e).getTerrainTypeKey(t,n);return this.entityTypes.getTerrainSpriteName(i)}getEntitySpriteAt(e,t,n){const i=this.ents.getEntitiesOnMap(e.id).find(a=>a.x===t&&a.y===n);return i?i.sprite:""}getTerrainSprites(e,t=0,n=0,s=10,i=10){const a=[];for(let o=0;o<i;o+=1){a[o]||(a[o]=[]);for(let l=0;l<s;l+=1)a[o][l]=this.getTerrainSpriteAt(e,t+l,n+o)}return a}getPropsSprites(e,t=0,n=0,s=10,i=10){const a=this.getMap(e),o=[];for(let l=0;l<i;l+=1){o[l]||(o[l]=[]);for(let c=0;c<s;c+=1)o[l][c]=this.getEntitySpriteAt(a,t+c,n+l)}return o}makeVisibleThing(e,t,n){return[e.sprite,e.x-t,e.y-n]}findAvatar(){return this.ents.all.find(e=>e.isAvatar)}async getParty(e){const{centerVisibleWorldX:t,centerVisibleWorldY:n}=this.getVisibleWorldDimensions(e),s=this.getActor(e);return{leaderIndex:0,members:[{...s,sprite:E(s)?s.sprite:s.deadSprite,visibleWorldX:t,visibleWorldY:n}]}}getVisibleWorldDimensions(e){const t=this.connections[e],{visibleWorldHeight:n,visibleWorldWidth:s}=t,i=this.getActor(e),a=Math.floor(s/2),o=Math.floor(n/2),l=i.x,c=i.y,u=l-a,h=c-o;return{w:s,h:n,centerVisibleWorldX:a,centerVisibleWorldY:o,centerWorldX:l,centerWorldY:c,worldLeftX:u,worldTopY:h}}async getVisibleWorld(e){if(!e)throw new Error("Need a whoId for getting visible world");const{w:t,h:n,worldLeftX:s,worldTopY:i}=this.getVisibleWorldDimensions(e),a=this.getActorMapId(e),o=this.ents.getEntitiesOnMapRange(a,s,i,t,n);return{terrain:{sprites:this.getTerrainSprites(a,s,i,t,n)},props:o.filter(c=>c.isProp||c.isDestination).map(c=>this.makeVisibleThing(c,s,i)),items:o.filter(c=>c.isItem).map(c=>this.makeVisibleThing(c,s,i)),actors:o.filter(c=>c.isActor&&c.whoId!==e).map(c=>{const u=this.makeVisibleThing(c,s,i);return E(c)?u:[c.deadSprite,u[1],u[2]]})}}updateAllClients(){Object.keys(this.connections).forEach(e=>this.updateClient(e))}async updateClient(e){const t=await this.getVisibleWorld(e),n=await this.getParty(e);this.worldComm.sendDataToClient({visibleWorld:t,party:n,deltas:this.deltas})}async performAction(e,t){const{mapId:n,whoId:s}=e;if(!y.hasReadyAction(e,t))return null;const i=this.getMap(n),a=this.ents.getEntitiesOnMap(n),o=this.actions.perform(e,i,a,t),{success:l,message:c,followUp:u,quiet:h,deltaData:d}=o;return u&&this[u[0]](...u.slice(1)),this.connections[s]&&await this.updateClient(s),{mapId:n,mapTime:t,success:l,message:c,quiet:h,whoId:s,worldTime:this.time,data:d}}getSimMapIds(){return this.ents.getAvatarMapIds()}async sim(e=1){this.time+=e;let t=0;const n=this.getSimMapIds();for(let s=0;s<n.length;s+=1){const i=n[s],a=this.getMap(i);let o=!1,l;for(;a.time<this.time&&!o;)l=this.time-a.time,o=await this.simMap(i,l);o&&(t+=1)}t?this.updateAllClients():(await we(10),this.sim(e))}async simMap(e,t){if(t<0)throw new Error("Invalid time step");t>1&&console.log("Simulating map",t,"steps to get to",this.time);const n=this.getMap(e);n.time=Math.min(this.time,n.time+t);const s=this.ents.getActorsOnMap(e);this.schedulerQueues[e]||(this.schedulerQueues[e]=new ht(s));const i=this.schedulerQueues[e],a=i.top();if(y.isWaitingForAction(a,n.time)){if(a.isAvatar)return console.log("Map Sim",n.time,"Top actor is avatar and has nothing to do."),!0;this.actions.enqueuePlan(a)}const o=await this.performAction(a,n.time);return o&&(o.quiet||(this.deltas.push(o),this.deltas.length>this.maxDeltas&&this.deltas.splice(0,this.deltas.length-this.maxDeltas))),i.sort(),!1}moveActorMap(e,t=[],n=!1){const[s,i,a]=t,o=this.getMap(s);if(e.mapId=o.id,n){typeof i=="number"&&typeof a=="number"?(e.x+=i,e.y+=a):console.error("invalid coordinates");return}if(typeof i=="number"&&typeof a=="number")e.x=i,e.y=a;else{const[l,c]=o.getEntranceCoordinates();e.x=l,e.y=c}}ping(){return[!0,"ping"]}async runCommand(e,t){const n=e instanceof Array?[...e]:String(e).toLowerCase().split(" "),i={hole:"camp",inform:"investigate",search:"investigate",steal:"pickpocket",wear:"ready",equip:"ready",exit:"dismount",mount:"board",stats:"ztats",go:"move"}[n[0]];i&&(n[0]=i);const a=n[0],o=["chat","descend","exit","karma","look","map","navigate","party","ping","quicksave","quit","view","zstats"],l=n.slice(1),c=this.getActor(t);if(this[a]){if(!o.includes(a))return{success:!1,message:`Command not allowed '${a}'`};const[u,h]=await this[a](c,...l);return this.sim(),{success:u,message:h}}return y.has(a)?c.action?(console.log("World enqueue action:",a,l),this.actions.enqueue(c,a,l.join(" ")),this.sim(),{success:!0,message:"Action queued"}):{success:!1,message:`${t} cannot do actions.`}:(console.error("Invalid command",a),{success:!1,message:`Invalid command '${a}'`})}}class Un extends he{constructor(e={}){super(),this.localWorld=null,this.visibleWorldHeight=0,this.visibleWorldWidth=0,e.world&&this.startLocalWorld(e.world,e.actions)}async startLocalWorld(e,t){this.localWorld=new Rn(e,t,this),window.world=this.localWorld,await this.localWorld.load()}async connect(e,t,n){this.localWorld.connect(e,{visibleWorldHeight:n,visibleWorldWidth:t})}async load(){}async sendCommandToWorld(e,t){if(!e)return console.warn("Cannot send a blank command"),[];if(!t)throw new Error("Must send a command on behalf of a user (whoId missing)");const n=await this.localWorld.runCommand(e,t),s=await this.localWorld.getVisibleWorld(t),i=await this.localWorld.getParty(t);return[n,s,i]}async sendDataToClient(e){this.trigger("data",e)}}const $=["sell","buy"];class Nn{constructor(e,t){this.shopName=e.shopName||"Shop",this.entId=e.entId||console.warn("No entId for shop"),this.sell=e.sell,this.buy=e.buy,this.transaction={buy:[],sell:[],complete:!1},this.tabIndex=0,this.indices=[0,0],this.sellingInventory=t||[],this.helpOn=!1}add(e=1){if(this.transaction.complete)return;const t=$[this.tabIndex],n=this.transaction[t];let s=255;const i=this.indices[this.tabIndex];t==="sell"?[,,,s]=this.sell.stock[i]:s=1,n[i]=tt((n[i]||0)+e,0,s)}subtract(e=1){this.add(-e)}tab(e=1){this.tabIndex=($.length+this.tabIndex+e)%$.length}next(e=1){const n=$[this.tabIndex]==="sell"?this.sell.stock.length:this.sellingInventory.contents.length,s=this.indices[this.tabIndex];this.indices[this.tabIndex]=(n+s+e)%n}toggleHelp(){this.helpOn=!this.helpOn}getBuyPrice(e){return 10}getTransactionAmount(){const{buy:e=[],sell:t=[]}=this.transaction;let n=0;return t.forEach((s,i)=>{const[,,a]=this.sell.stock[i];n-=a*s}),e.forEach((s,i)=>{const a=this.sellingInventory[i],o=this.getBuyPrice(a);n+=o*s}),n}getTextLines(){const{shopName:e="Shop",sell:t={},transaction:n={}}=this;let s="",i=[];const a=this.indices[this.tabIndex];if(this.tabIndex===0)s=" (Tab)  -BUY-   Sell ",i=t.stock.map((h,d)=>{const[p,,g,f]=h,v=!n.sell[d]||n.sell[d]<f,T=n.sell[d]>0;return[d===a?`${T?"<":" "}${v?">":" "}`:"  "," ",p.padEnd(14,"."),String(n.sell[d]||0).padStart(3," "),"/",String(f).padEnd(4," "),String(g).padStart(4," ")," c."].join("")});else if(this.tabIndex===1){s=" (Tab)   Buy   -SELL- ";const{contents:h=[]}=this.sellingInventory;h.length===0?i=["","","You have nothing in your inventory.","",""]:i=h.map((p,g)=>{const f=!n.buy[g]||n.buy[g]<1,v=n.buy[g]>0;return[g===a?`${v?"<":" "}${f?">":" "}`:"  "," ",p.name.padEnd(14,"."),String(n.buy[g]||0).padStart(3," "),String(this.getBuyPrice(p)).padStart(4," ")," c.",v?" SELL":"     "].join("")})}i.length=10;const o=this.getTransactionAmount(),l=o>0?`+${o}`:String(o),c=[" Transaction:",String(l).padStart(12," ")," coins"].join(""),u=this.helpOn?[" (Enter) Complete transaction"," (Esc) Cancel transaction"," (Up/Down/W/S) Select item"," (Left/Right/A/D) Add/remove item"," (t) Talk instead"]:[" (Enter) Complete (t) Talk (?) Help"];return[`--- ${e} ---`,"",s,"",...i,"",c,"",...u]}completeTransaction(){this.transaction.complete=!0;const{buy:e=[],sell:t=[]}=this.transaction;if(!e.length&&!t.length)return"";const n=i=>i.map((a,o)=>a?`${o}x${a}`:null).filter(a=>a).join(","),s=[];return t.length&&s.push(`+${n(t)}`),e.length&&s.push(`-${n(e)}`),`transact ${this.entId} ${s.join(" ")}`}}class te{constructor(e){this.partyMembers=e||[],this.originalEquipment=e.map(t=>structuredClone(t.equipment)),this.currentCharacter=null,this.helpOn=!1,this.index=0,this.list=[],this.switchPartyMember(0)}static buildList(e){const{inventory:t={}}=e,n=Z(e),{contents:s=[]}=t;return[...n,...s]}buildList(e){this.list=te.buildList(e)}switchPartyMember(){this.currentCharacter=this.partyMembers[0],this.buildList(this.currentCharacter)}toggleHelp(){this.helpOn=!this.helpOn}next(e=1){const t=this.list.length;this.index=(t+this.index+e)%t}previous(e=1){this.next(-e)}equip(){const e=this.list[this.index],t=ee(this.currentCharacter,e);if(!t)return!1;typeof t=="object"&&U(this.currentCharacter,t);const n=be(this.currentCharacter,e);return n&&n.length}unequip(){const e=this.list[this.index],t=Ie(this.currentCharacter,e);return t?U(this.currentCharacter,t):!1}toggle(){const e=this.list[this.index];G(e,this.currentCharacter)?this.unequip():this.equip()}getTextLines(){const e=this.helpOn?[" (Up/Down/W/S) Select item"," (Right/D) Equip item"," (Left/A) Unequip item"," (Space) Toggle"," (Enter) (Esc) (r) Close"]:[" (Arrows, r, Enter) (?) Help"],t=this.list.map((n,s)=>{const i=G(n,this.currentCharacter);let a=i?" <":" >";s!==this.index&&(a="  ");const o=P(n.name||n.type);return[a," ",i?`${".".repeat(17)}${o}`:o].join("")});return t.length=10,["--- Inventory ---   --- Equipped ---","",...t,"",...e]}completeTransaction(){let e=0;const t=[];return this.partyMembers.forEach((s,i)=>{const a=[];Object.entries(s.equipment).forEach(([o,l])=>{var c;(l||this.originalEquipment[o])&&(l==null?void 0:l.entId)!==((c=this.originalEquipment[o])==null?void 0:c.entId)&&(a.push(`${o}:${l.entId}`),e+=1)}),t[i]=a.join(",")}),e?`ready ${t.map((s,i)=>`${i}=${s}`)}`:""}}function $n(r=0,e=0){return r!==0&&e!==0?null:Object.keys(A).find(t=>A[t][0]===Math.sign(r)&&A[t][1]===Math.sign(e))}class K{constructor(e={}){var t,n;this.states=e.states||{},this.inputCtrl=new et(this.states),this.screen=new x(e),this.gameStorage=new Qe(e.gameName||"WULF"),this.worldComm=new Un({world:e.world,actions:e.actions}),this.commandIndex=0,this.mapFocus=[0,0],this.mapDisplaySizeX=(t=e==null?void 0:e.mapDisplay)==null?void 0:t.w,this.mapDisplaySizeY=(n=e==null?void 0:e.mapDisplay)==null?void 0:n.h,this.visibleWorld={},this.party={},this.avatarWhoId=null,this.renderWorldTime=0,this.volume=5,this.settings=structuredClone(e.settings),this.shopTab=0,this.shopIndex=0,this.gameShop={},this.interface=null}static waitForDom(){return new Promise(e=>{window.addEventListener("DOMContentLoaded",()=>e())})}async loadGame(){this.avatarWhoId="my-avatar-1",this.worldComm.load()}async sendWorldCommand(e){if(!e)return;const[t]=await this.worldComm.sendCommandToWorld(e,this.avatarWhoId);return t}getPartyLeader(){var e;return(e=this==null?void 0:this.party)==null?void 0:e.members[this.party.leaderIndex]}refocus(){const e=this.getPartyLeader();this.mapFocus[0]=(e==null?void 0:e.visibleWorldX)||0,this.mapFocus[1]=(e==null?void 0:e.visibleWorldY)||0}switchToAskDirection(e){const t=e.findIndex(n=>n==="direction");this.screen.mainConsole.print(`${P(e[0])} Direction?`),this.inputCtrl.setState("direction",n=>{if(n==="abort"){this.switchToTravel(),this.mainConsole.print("Cancel");return}const s=[...e];s[t]=n,this.screen.mainConsole.print(P(n)),this.switchToTravel(),this.executeCommand(s.join(" "))})}switchToTravel(){this.drawMap(),this.inputCtrl.setState("travel",e=>this.executeCommand(e))}switchTo(e,t){if(e==="travel"){this.switchToTravel(),this.interface=null;return}if(e==="direction"){this.switchToAskDirection(),this.interface=null;return}if(e==="commands"){this.interface=null,this.inputCtrl.setState("commands",n=>{var a;if(n==="abort"){this.switchTo("travel");return}const s=this.getStateKeyCommands("travel");if(n==="execute"){this.switchTo("travel");const o=(a=s[this.commandIndex])==null?void 0:a.command;this.executeCommand(o);return}const i=s.length;n==="next"?this.commandIndex=(this.commandIndex+1)%i:n==="previous"&&(this.commandIndex=(i+this.commandIndex-1)%i),this.drawKeyCommandsScreen("travel")}),this.drawKeyCommandsScreen("travel");return}if(e==="shop"){this.gameShop=new Nn(t.shop,this.getPartyLeader().inventory),this.gameShop.draw=()=>this.drawShop(),this.interface=this.gameShop,this.inputCtrl.setState("shop",async n=>{if(n==="abort"){this.switchTo("travel");return}if(n==="add"?this.gameShop.add(1):n==="subtract"&&this.gameShop.subtract(1),n==="nextTab"?this.gameShop.tab(1):n==="previousTab"&&this.gameShop.tab(-1),n==="next"?this.gameShop.next(1):n==="previous"&&this.gameShop.next(-1),n==="help"&&this.gameShop.toggleHelp(),n==="complete"){const s=this.gameShop.completeTransaction();await this.sendWorldCommand(s),this.switchTo("travel");return}this.interface.draw()}),this.interface.draw();return}if(e==="equip"){this.inventoryInterface=new te(this.party.members),this.inventoryInterface.draw=()=>this.drawInventory(),this.interface=this.inventoryInterface;const n=async()=>{const s=this.interface.completeTransaction();await this.sendWorldCommand(s),this.switchTo("travel")};this.inputCtrl.setState("equip",async s=>{if(s==="abort"){n();return}if(s==="equip close"){this.inventoryInterface.equip(),n();return}s==="equip"?this.inventoryInterface.equip():s==="unequip"?this.inventoryInterface.unequip():s==="toggle"?this.inventoryInterface.toggle():s==="next"?this.inventoryInterface.next(1):s==="previous"?this.inventoryInterface.next(-1):s==="help"&&this.inventoryInterface.toggleHelp(),this.interface.draw()}),this.interface.draw();return}console.warn("Unknown state",e)}async executeCommand(e){await we(10),console.log("			Client Command:",e);const t={vol:"volume"},n={volume:o=>{let l=0;o==="up"?l=1:o==="down"&&(l=-1),this.volume=Math.min(Math.max(this.volume+l,Ue),Ne),this.screen.mainConsole.print(`Volume: ${this.volume}`)},switch:o=>this.switchTo(o),see:o=>this.switchTo(o),abort:()=>{this.switchToTravel()},ready:()=>this.switchTo("equip"),view:()=>{},chat:()=>{}},s=String(e).toLowerCase().split(" "),i=t[s[0]];i&&(s[0]=i);const a=n[s[0]];if(a){const o=s.slice(1);await a(...o);return}if(s.includes("nearby")){const o=s.findIndex(h=>h==="nearby"),{visibleWorldX:l,visibleWorldY:c}=this.getPartyLeader(),u=this.findVisibleEntitiesNearby(l,c);if(u.length===1){const[,h,d]=u[0],p=$n(h-l,d-c);p&&(s[o]=p)}else s[o]="direction"}if(s.includes("direction")){this.switchToAskDirection(s);return}await this.sendWorldCommand(s)}getMapFocusTopLeft(){const[e,t]=this.mapFocus;return[e-Math.floor(this.mapDisplaySizeX/2),t-Math.floor(this.mapDisplaySizeY/2)]}findVisibleEntitiesAt(e,t,n=["actors","items","props"]){const s=[];return n.forEach(i=>{this.visibleWorld[i].forEach(a=>{const[,o,l]=a;o===e&&l===t&&s.push(a)})}),s}findVisibleEntitiesNearby(e,t,n){let s=[];return Object.values(A).forEach(([i,a])=>{const o=this.findVisibleEntitiesAt(e+i,t+a,n);s=[...s,...o]}),s}drawMap(e){this.screen.drawMap(this.visibleWorld,this.party,e)}getStateKeyCommands(e){const{kb:t={},hideCommands:n=[],keyHelp:s={}}=this.states[e];return Object.keys(t).filter(i=>!n.includes(i)).map(i=>({key:i,command:t[i],keyHelp:s[i]}))}drawKeyCommandsScreen(e){const t=this.getStateKeyCommands(e),n={ArrowUp:"Up",ArrowDown:"Down",ArrowLeft:"Left",ArrowRight:"Right"," ":"Space"},s=t.map(({key:i,command:a,keyHelp:o={}},l)=>{const c=n[i]||i,u=o[this.settings.language]||a;return`${this.commandIndex===l?">":" "}(${c}) ${u}`});this.screen.drawCommandColumns(s)}drawShop(){this.drawMap(!0),this.screen.drawCentralText(this.gameShop.getTextLines())}drawInventory(){this.drawMap(!0),this.screen.drawCentralText(this.inventoryInterface.getTextLines())}drawAll(){var e;this.screen.drawAll(this.visibleWorld,this.party),(e=this.interface)==null||e.draw()}static loopDeltas(e=[],t=0,n=0,s=()=>{}){let i;for(let a=e.length-1;a>=0;a-=1)if(i=e[a],i.worldTime<t||i.worldTime<=n&&s(i))return}drawDeltas(e=[],t=0,n=0){const s=[];K.loopDeltas(e,t,n,i=>{const{whoId:a,message:o,quiet:l,worldTime:c}=i;this.renderWorldTime<c&&a===this.avatarWhoId&&!l&&s.push(o)});for(let i=s.length-1;i>=0;i-=1)this.screen.mainConsole.print(s[i])}handleDeltas(e=[]){var o;if(!e||!e.length)return null;const t=this.renderWorldTime,n=((o=e[e.length-1])==null?void 0:o.worldTime)||0,s=[],i=e.filter(l=>{const c=l.worldTime>=t;return c&&l.data&&s.push(l),c});if(console.log("			Deltas handled:",e.length,"in time range:",i.length),this.drawDeltas(e,t,n),this.renderWorldTime=n,!s.length)return null;const a=s[s.length-1].data;return a.shop?{...a,stateName:"shop"}:{...a}}handleIncomingData(e){const{visibleWorld:t,party:n,deltas:s}=e;this.visibleWorld=Object.freeze(structuredClone(t)),this.party=Object.freeze(structuredClone(n));const i=this.handleDeltas(s);this.refocus(),this.drawAll(),i&&i.stateName&&this.switchTo(i.stateName,i)}async setup(){await K.waitForDom(),await this.screen.setup(),this.screen.mainConsole.print("You enter a swirling gateway, and awaken in a strange world."),this.loadGame(),this.worldComm.on("data",e=>this.handleIncomingData(e)),await this.worldComm.connect(this.avatarWhoId,this.mapDisplaySizeX,this.mapDisplaySizeY),await this.sendWorldCommand("ping",this.avatarWhoId),this.drawMap(),this.inputCtrl.setup(),this.switchToTravel()}async start(){await this.setup(),console.log("%c☥","font-size: 300%; color: #ff0;")}}const xe=new K(He);xe.start();window.g=xe;
